ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f2xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RCC_DeInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	HAL_RCC_DeInit:
  25              	.LFB72:
  26              		.file 1 "Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c"
   1:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
   2:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @file    stm32f2xx_hal_rcc.c
   4:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
  11:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..]
  16:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (HSI 16MHz) with Flash 0 wait state, Flash prefetch buffer, D-Cache
  18:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  21:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           all peripherals mapped on these busses are running at HSI speed.
  22:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  23:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  24:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  25:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  26:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..]
  27:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  28:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  29:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  30:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  31:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) Configure the AHB and APB busses prescalers
  32:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 2


  33:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  34:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS/SDIO/RNG)
  35:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  36:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                       ##### RCC Limitations #####
  37:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   ==============================================================================
  38:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..]
  39:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  40:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  41:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       from/to registers.
  42:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  43:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) If peripheral is mapped on AHB: the delay is 2 AHB clock cycle
  44:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  45:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) If peripheral is mapped on APB: the delay is 2 APB clock cycle
  46:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           after the clock enable bit is set on the hardware register
  47:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  48:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..]
  49:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       Implemented Workaround:
  50:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (+) For AHB & APB peripherals, a dummy read to the peripheral register has been
  51:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  52:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  53:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   @endverbatim
  54:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   ******************************************************************************
  55:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @attention
  56:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
  57:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  58:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  59:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
  60:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  61:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  62:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  63:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  64:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
  65:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   ******************************************************************************
  66:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
  67:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  68:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  69:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #include "stm32f2xx_hal.h"
  70:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  71:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @addtogroup STM32F2xx_HAL_Driver
  72:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @{
  73:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
  74:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  75:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @defgroup RCC RCC
  76:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief RCC HAL module driver
  77:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @{
  78:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
  79:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  80:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  81:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  82:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  83:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  84:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @addtogroup RCC_Private_Constants
  85:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @{
  86:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
  87:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  5000U /* 5 s */
  88:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  89:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 3


  90:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define __MCO1_CLK_ENABLE()   __HAL_RCC_GPIOA_CLK_ENABLE()
  91:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  92:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  93:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  94:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define __MCO2_CLK_ENABLE()   __HAL_RCC_GPIOC_CLK_ENABLE()
  95:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define MCO2_GPIO_PORT         GPIOC
  96:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** #define MCO2_PIN               GPIO_PIN_9
  97:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
  98:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @}
  99:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 101:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 102:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @{
 104:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 105:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @}
 107:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 108:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /* Private functions ---------------------------------------------------------*/
 110:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 111:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 112:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *  @{
 113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 114:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 115:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  *  @brief    Initialization and Configuration functions
 117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  *
 118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** @verbatim
 119:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  ===============================================================================
 120:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 121:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  ===============================================================================
 122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..]
 123:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 124:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System busses clocks (SYSCLK, AHB, APB1
 125:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****        and APB2).
 126:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 127:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) HSI (high-speed internal), 16 MHz factory-trimmed RC used directly or through
 129:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              the PLL as System clock source.
 130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 131:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) LSI (low-speed internal), 32 KHz low consumption RC used as IWDG and/or RTC
 132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              clock source.
 133:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) HSE (high-speed external), 4 to 26 MHz crystal oscillator used directly or
 135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 137:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 138:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) PLL (clocked by HSI or HSE), featuring two different output clocks:
 140:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 120 MHz)
 141:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB OTG FS (48 MHz),
 142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 the random analog generator (<=48 MHz) and the SDIO (<= 48 MHz).
 143:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 144:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              and if a HSE clock failure occurs(HSE used directly or through PLL as System
 146:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              clock source), the System clocks automatically switched to HSI and an interrupt
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 4


 147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              is generated if enabled. The interrupt is linked to the Cortex-M3 NMI
 148:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              (Non-Maskable Interrupt) exception vector.
 149:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) MCO1 (microcontroller clock output), used to output HSI, LSE, HSE or PLL
 151:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              clock (through a configurable prescaler) on PA8 pin.
 152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 153:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) MCO2 (microcontroller clock output), used to output HSE, PLL, SYSCLK or PLLI2S
 154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              clock (through a configurable prescaler) on PC9 pin.
 155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 156:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..] System, AHB and APB busses clocks configuration
 157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              HSE and PLL.
 159:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 160:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 162:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 163:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              the peripherals mapped on these busses. You can use
 164:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 165:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (+@) I2S: the I2S clock can be derived either from a specific PLL (PLLI2S) or
 168:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 from an external clock mapped on the I2S_CKIN pin.
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 You have to use __HAL_RCC_PLLI2S_CONFIG() macro to configure this clock.
 170:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 divided by 2 to 31. You have to use __HAL_RCC_RTC_CONFIG() and __HAL_RCC_RTC_ENABLE
 172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 macros to configure this clock.
 173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (+@) USB OTG FS, SDIO and RTC: USB OTG FS require a frequency equal to 48 MHz
 174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 to work correctly, while the SDIO require a frequency equal or lower than
 175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                 to 48. This clock is derived of the main PLL through PLLQ divider.
 176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (+@) IWDG clock which is always the LSI clock.
 177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****          (#) For the stm32f2xx devices, the maximum
 179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              frequency of the SYSCLK and HCLK is 120 MHz, PCLK2 60 MHz and PCLK1 30 MHz.
 180:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              Depending on the device voltage range, the maximum frequency should
 181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****              be adapted accordingly:
 182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  +-------------------------------------------------------------------------------------+
 183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 184:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |               |---------------------------------------------------------------------|
 185:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 187:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 18   |0 < HCLK <= 16   |
 189:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 190:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |18 < HCLK <= 36  |16 < HCLK <= 32  |
 191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |36 < HCLK <= 54  |32 < HCLK <= 48  |
 193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |54 < HCLK <= 72  |48 < HCLK <= 64  |
 195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |4WS(5CPU cycle)|      NA        |96 < HCLK <= 120|72 < HCLK <= 90  |64 < HCLK <= 80  |
 197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 198:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |5WS(6CPU cycle)|      NA        |      NA        |90 < HCLK <= 108 |80 < HCLK <= 96  |
 199:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 200:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |6WS(7CPU cycle)|      NA        |      NA        |108 < HCLK <= 120|96 < HCLK <= 112 |
 201:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |---------------|----------------|----------------|-----------------|-----------------|
 202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  |7WS(8CPU cycle)|      NA        |      NA        |       NA        |112 < HCLK <= 120|
 203:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  +-------------------------------------------------------------------------------------+
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 5


 204:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** @endverbatim
 205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @{
 206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 208:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 210:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 211:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 212:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - HSE, PLL and PLLI2S OFF
 213:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 214:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - CSS, MCO1 and MCO2 OFF
 215:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - All interrupts disabled
 216:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 217:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - Peripheral clocks
 218:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 219:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval HAL status
 220:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 221:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 222:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
  27              		.loc 1 222 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 38B5     		push	{r3, r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
 223:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t tickstart;
  38              		.loc 1 223 3 view .LVU1
 224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 225:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get Start Tick*/
 226:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  39              		.loc 1 226 3 view .LVU2
  40              		.loc 1 226 15 is_stmt 0 view .LVU3
  41 0002 FFF7FEFF 		bl	HAL_GetTick
  42              	.LVL0:
  43 0006 0446     		mov	r4, r0
  44              	.LVL1:
 227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Set HSION bit to the reset value */
 229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  45              		.loc 1 229 3 is_stmt 1 view .LVU4
  46 0008 3D4A     		ldr	r2, .L24
  47 000a 1368     		ldr	r3, [r2]
  48 000c 43F00103 		orr	r3, r3, #1
  49 0010 1360     		str	r3, [r2]
 230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 231:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Wait till HSI is ready */
 232:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  50              		.loc 1 232 3 view .LVU5
  51              	.LVL2:
  52              	.L2:
  53              		.loc 1 232 9 view .LVU6
  54              		.loc 1 232 10 is_stmt 0 view .LVU7
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 6


  55 0012 3B4B     		ldr	r3, .L24
  56 0014 1B68     		ldr	r3, [r3]
  57              		.loc 1 232 9 view .LVU8
  58 0016 13F0020F 		tst	r3, #2
  59 001a 06D1     		bne	.L19
 233:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 234:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  60              		.loc 1 234 5 is_stmt 1 view .LVU9
  61              		.loc 1 234 10 is_stmt 0 view .LVU10
  62 001c FFF7FEFF 		bl	HAL_GetTick
  63              	.LVL3:
  64              		.loc 1 234 24 view .LVU11
  65 0020 001B     		subs	r0, r0, r4
  66              		.loc 1 234 8 view .LVU12
  67 0022 0228     		cmp	r0, #2
  68 0024 F5D9     		bls	.L2
 235:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 236:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_TIMEOUT;
  69              		.loc 1 236 14 view .LVU13
  70 0026 0320     		movs	r0, #3
  71              	.L3:
 237:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Set HSITRIM[4:0] bits to the reset value */
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSITRIM_4);
 242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 243:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get Start Tick*/
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 246:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Reset CFGR register (HSI is selected as system clock source) */
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC->CFGR = 0x00000000u;
 248:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 249:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Wait till clock switch is ready */
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RESET)
 251:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 254:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_TIMEOUT;
 255:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 256:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 257:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get Start Tick */
 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 260:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 261:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Clear CR register in 3 steps: first to clear HSEON, HSEBYP and CSSON bits */
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_HSEBYP | RCC_CR_CSSON);
 263:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 264:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Wait till HSE is disabled */
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET)
 266:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 269:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_TIMEOUT;
 270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 272:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 7


 273:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get Start Tick */
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 276:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Second step is to clear PLLON bit */
 277:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
 278:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Wait till PLL is disabled */
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 281:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 283:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_TIMEOUT;
 285:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 287:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 288:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Once PLL is OFF, reset PLLCFGR register to default value */
 289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC->PLLCFGR = RCC_PLLCFGR_PLLM_4 | RCC_PLLCFGR_PLLN_6 | RCC_PLLCFGR_PLLN_7 | RCC_PLLCFGR_PLLQ_2;
 290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 291:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get Start Tick */
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 294:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Third step is to clear PLLI2SON bit */
 295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLI2SON);
 296:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 297:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Wait till PLLI2S is disabled */
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLI2SRDY) != RESET)
 299:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 301:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_TIMEOUT;
 303:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 305:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 306:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Once PLLI2S is OFF, reset PLLI2SCFGR register to default value */
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC->PLLI2SCFGR = RCC_PLLI2SCFGR_PLLI2SN_6 | RCC_PLLI2SCFGR_PLLI2SN_7 | RCC_PLLI2SCFGR_PLLI2SR_1;
 308:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 309:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Disable all interrupts */
 310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC->CIR = 0x00000000u;
 311:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 312:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Clear all flags */
 313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC->CSR = 0xFFFFFFFFu;
 314:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 315:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(HAL_InitTick(uwTickPrio) != HAL_OK)
 320:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     return HAL_ERROR;
 322:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 323:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 325:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     return HAL_OK;
 326:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
  72              		.loc 1 327 1 view .LVU14
  73 0028 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 8


  74              	.LVL4:
  75              	.L19:
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  76              		.loc 1 241 3 is_stmt 1 view .LVU15
  77 002a 354D     		ldr	r5, .L24
  78 002c 2B68     		ldr	r3, [r5]
  79 002e 43F08003 		orr	r3, r3, #128
  80 0032 2B60     		str	r3, [r5]
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  81              		.loc 1 244 3 view .LVU16
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  82              		.loc 1 244 15 is_stmt 0 view .LVU17
  83 0034 FFF7FEFF 		bl	HAL_GetTick
  84              	.LVL5:
  85 0038 0446     		mov	r4, r0
  86              	.LVL6:
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  87              		.loc 1 247 3 is_stmt 1 view .LVU18
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
  88              		.loc 1 247 13 is_stmt 0 view .LVU19
  89 003a 0023     		movs	r3, #0
  90 003c AB60     		str	r3, [r5, #8]
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
  91              		.loc 1 250 3 is_stmt 1 view .LVU20
  92              	.LVL7:
  93              	.L5:
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
  94              		.loc 1 250 9 view .LVU21
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
  95              		.loc 1 250 10 is_stmt 0 view .LVU22
  96 003e 304B     		ldr	r3, .L24
  97 0040 9B68     		ldr	r3, [r3, #8]
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
  98              		.loc 1 250 9 view .LVU23
  99 0042 13F00C0F 		tst	r3, #12
 100 0046 08D0     		beq	.L20
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 101              		.loc 1 252 5 is_stmt 1 view .LVU24
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 102              		.loc 1 252 10 is_stmt 0 view .LVU25
 103 0048 FFF7FEFF 		bl	HAL_GetTick
 104              	.LVL8:
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 105              		.loc 1 252 24 view .LVU26
 106 004c 001B     		subs	r0, r0, r4
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 107              		.loc 1 252 8 view .LVU27
 108 004e 41F28833 		movw	r3, #5000
 109 0052 9842     		cmp	r0, r3
 110 0054 F3D9     		bls	.L5
 254:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 111              		.loc 1 254 14 view .LVU28
 112 0056 0320     		movs	r0, #3
 113 0058 E6E7     		b	.L3
 114              	.L20:
 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 115              		.loc 1 259 3 is_stmt 1 view .LVU29
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 9


 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 116              		.loc 1 259 15 is_stmt 0 view .LVU30
 117 005a FFF7FEFF 		bl	HAL_GetTick
 118              	.LVL9:
 119 005e 0446     		mov	r4, r0
 120              	.LVL10:
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 121              		.loc 1 262 3 is_stmt 1 view .LVU31
 122 0060 274A     		ldr	r2, .L24
 123 0062 1368     		ldr	r3, [r2]
 124 0064 23F45023 		bic	r3, r3, #851968
 125 0068 1360     		str	r3, [r2]
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 126              		.loc 1 265 3 view .LVU32
 127              	.LVL11:
 128              	.L7:
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 129              		.loc 1 265 9 view .LVU33
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 130              		.loc 1 265 10 is_stmt 0 view .LVU34
 131 006a 254B     		ldr	r3, .L24
 132 006c 1B68     		ldr	r3, [r3]
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 133              		.loc 1 265 9 view .LVU35
 134 006e 13F4003F 		tst	r3, #131072
 135 0072 06D0     		beq	.L21
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 136              		.loc 1 267 5 is_stmt 1 view .LVU36
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 137              		.loc 1 267 10 is_stmt 0 view .LVU37
 138 0074 FFF7FEFF 		bl	HAL_GetTick
 139              	.LVL12:
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 140              		.loc 1 267 24 view .LVU38
 141 0078 001B     		subs	r0, r0, r4
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 142              		.loc 1 267 8 view .LVU39
 143 007a 6428     		cmp	r0, #100
 144 007c F5D9     		bls	.L7
 269:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 145              		.loc 1 269 14 view .LVU40
 146 007e 0320     		movs	r0, #3
 147 0080 D2E7     		b	.L3
 148              	.L21:
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 149              		.loc 1 274 3 is_stmt 1 view .LVU41
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 150              		.loc 1 274 15 is_stmt 0 view .LVU42
 151 0082 FFF7FEFF 		bl	HAL_GetTick
 152              	.LVL13:
 153 0086 0446     		mov	r4, r0
 154              	.LVL14:
 277:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 155              		.loc 1 277 3 is_stmt 1 view .LVU43
 156 0088 1D4A     		ldr	r2, .L24
 157 008a 1368     		ldr	r3, [r2]
 158 008c 23F08073 		bic	r3, r3, #16777216
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 10


 159 0090 1360     		str	r3, [r2]
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 160              		.loc 1 280 3 view .LVU44
 161              	.LVL15:
 162              	.L9:
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 163              		.loc 1 280 9 view .LVU45
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 164              		.loc 1 280 10 is_stmt 0 view .LVU46
 165 0092 1B4B     		ldr	r3, .L24
 166 0094 1B68     		ldr	r3, [r3]
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 167              		.loc 1 280 9 view .LVU47
 168 0096 13F0007F 		tst	r3, #33554432
 169 009a 06D0     		beq	.L22
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 170              		.loc 1 282 5 is_stmt 1 view .LVU48
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 171              		.loc 1 282 10 is_stmt 0 view .LVU49
 172 009c FFF7FEFF 		bl	HAL_GetTick
 173              	.LVL16:
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 174              		.loc 1 282 24 view .LVU50
 175 00a0 001B     		subs	r0, r0, r4
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 176              		.loc 1 282 8 view .LVU51
 177 00a2 6428     		cmp	r0, #100
 178 00a4 F5D9     		bls	.L9
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 179              		.loc 1 284 14 view .LVU52
 180 00a6 0320     		movs	r0, #3
 181 00a8 BEE7     		b	.L3
 182              	.L22:
 289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 183              		.loc 1 289 3 is_stmt 1 view .LVU53
 289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 184              		.loc 1 289 16 is_stmt 0 view .LVU54
 185 00aa 154D     		ldr	r5, .L24
 186 00ac 154B     		ldr	r3, .L24+4
 187 00ae 6B60     		str	r3, [r5, #4]
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 188              		.loc 1 292 3 is_stmt 1 view .LVU55
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 189              		.loc 1 292 15 is_stmt 0 view .LVU56
 190 00b0 FFF7FEFF 		bl	HAL_GetTick
 191              	.LVL17:
 192 00b4 0446     		mov	r4, r0
 193              	.LVL18:
 295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 194              		.loc 1 295 3 is_stmt 1 view .LVU57
 195 00b6 2B68     		ldr	r3, [r5]
 196 00b8 23F08063 		bic	r3, r3, #67108864
 197 00bc 2B60     		str	r3, [r5]
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 198              		.loc 1 298 3 view .LVU58
 199              	.LVL19:
 200              	.L11:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 11


 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 201              		.loc 1 298 9 view .LVU59
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 202              		.loc 1 298 10 is_stmt 0 view .LVU60
 203 00be 104B     		ldr	r3, .L24
 204 00c0 1B68     		ldr	r3, [r3]
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 205              		.loc 1 298 9 view .LVU61
 206 00c2 13F0006F 		tst	r3, #134217728
 207 00c6 06D0     		beq	.L23
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 208              		.loc 1 300 5 is_stmt 1 view .LVU62
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 209              		.loc 1 300 10 is_stmt 0 view .LVU63
 210 00c8 FFF7FEFF 		bl	HAL_GetTick
 211              	.LVL20:
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 212              		.loc 1 300 24 view .LVU64
 213 00cc 001B     		subs	r0, r0, r4
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 214              		.loc 1 300 8 view .LVU65
 215 00ce 0228     		cmp	r0, #2
 216 00d0 F5D9     		bls	.L11
 302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 217              		.loc 1 302 14 view .LVU66
 218 00d2 0320     		movs	r0, #3
 219 00d4 A8E7     		b	.L3
 220              	.L23:
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 221              		.loc 1 307 3 is_stmt 1 view .LVU67
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 222              		.loc 1 307 19 is_stmt 0 view .LVU68
 223 00d6 0A4B     		ldr	r3, .L24
 224 00d8 0B4A     		ldr	r2, .L24+8
 225 00da C3F88420 		str	r2, [r3, #132]
 310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 226              		.loc 1 310 3 is_stmt 1 view .LVU69
 310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 227              		.loc 1 310 12 is_stmt 0 view .LVU70
 228 00de 0022     		movs	r2, #0
 229 00e0 DA60     		str	r2, [r3, #12]
 313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 230              		.loc 1 313 3 is_stmt 1 view .LVU71
 313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 231              		.loc 1 313 12 is_stmt 0 view .LVU72
 232 00e2 4FF0FF32 		mov	r2, #-1
 233 00e6 5A67     		str	r2, [r3, #116]
 316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 234              		.loc 1 316 3 is_stmt 1 view .LVU73
 316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 235              		.loc 1 316 19 is_stmt 0 view .LVU74
 236 00e8 084B     		ldr	r3, .L24+12
 237 00ea 094A     		ldr	r2, .L24+16
 238 00ec 1A60     		str	r2, [r3]
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 239              		.loc 1 319 3 is_stmt 1 view .LVU75
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 12


 240              		.loc 1 319 6 is_stmt 0 view .LVU76
 241 00ee 094B     		ldr	r3, .L24+20
 242 00f0 1868     		ldr	r0, [r3]
 243 00f2 FFF7FEFF 		bl	HAL_InitTick
 244              	.LVL21:
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 245              		.loc 1 319 5 view .LVU77
 246 00f6 0028     		cmp	r0, #0
 247 00f8 96D0     		beq	.L3
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 248              		.loc 1 321 12 view .LVU78
 249 00fa 0120     		movs	r0, #1
 250 00fc 94E7     		b	.L3
 251              	.L25:
 252 00fe 00BF     		.align	2
 253              	.L24:
 254 0100 00380240 		.word	1073887232
 255 0104 10300004 		.word	67121168
 256 0108 00300020 		.word	536883200
 257 010c 00000000 		.word	SystemCoreClock
 258 0110 0024F400 		.word	16000000
 259 0114 00000000 		.word	uwTickPrio
 260              		.cfi_endproc
 261              	.LFE72:
 263              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 264              		.align	1
 265              		.global	HAL_RCC_OscConfig
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 270              	HAL_RCC_OscConfig:
 271              	.LVL22:
 272              	.LFB73:
 328:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 332:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 333:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 334:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 335:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         supported by this API. User should request a transition to LSE Off
 337:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 338:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 339:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         supported by this API. User should request a transition to HSE Off
 340:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval HAL status
 342:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 343:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 273              		.loc 1 344 1 is_stmt 1 view -0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 8
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 345:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t tickstart;
 277              		.loc 1 345 3 view .LVU80
 346:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 13


 347:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check Null pointer */
 348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 278              		.loc 1 348 3 view .LVU81
 279              		.loc 1 348 5 is_stmt 0 view .LVU82
 280 0000 0028     		cmp	r0, #0
 281 0002 00F0BB81 		beq	.L70
 344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t tickstart;
 282              		.loc 1 344 1 view .LVU83
 283 0006 70B5     		push	{r4, r5, r6, lr}
 284              	.LCFI1:
 285              		.cfi_def_cfa_offset 16
 286              		.cfi_offset 4, -16
 287              		.cfi_offset 5, -12
 288              		.cfi_offset 6, -8
 289              		.cfi_offset 14, -4
 290 0008 82B0     		sub	sp, sp, #8
 291              	.LCFI2:
 292              		.cfi_def_cfa_offset 24
 293 000a 0446     		mov	r4, r0
 349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 350:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     return HAL_ERROR;
 351:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 352:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 353:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check the parameters */
 354:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 294              		.loc 1 354 3 is_stmt 1 view .LVU84
 355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 295              		.loc 1 356 3 view .LVU85
 296              		.loc 1 356 25 is_stmt 0 view .LVU86
 297 000c 0368     		ldr	r3, [r0]
 298              		.loc 1 356 5 view .LVU87
 299 000e 13F0010F 		tst	r3, #1
 300 0012 2ED0     		beq	.L28
 357:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 358:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check the parameters */
 359:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 301              		.loc 1 359 5 is_stmt 1 view .LVU88
 360:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not dis
 361:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 302              		.loc 1 361 5 view .LVU89
 303              		.loc 1 361 9 is_stmt 0 view .LVU90
 304 0014 934B     		ldr	r3, .L107
 305 0016 9B68     		ldr	r3, [r3, #8]
 306 0018 03F00C03 		and	r3, r3, #12
 307              		.loc 1 361 7 view .LVU91
 308 001c 042B     		cmp	r3, #4
 309 001e 1FD0     		beq	.L29
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 310              		.loc 1 362 9 discriminator 1 view .LVU92
 311 0020 904B     		ldr	r3, .L107
 312 0022 9B68     		ldr	r3, [r3, #8]
 313 0024 03F00C03 		and	r3, r3, #12
 361:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 314              		.loc 1 361 60 discriminator 1 view .LVU93
 315 0028 082B     		cmp	r3, #8
 316 002a 14D0     		beq	.L97
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 14


 317              	.L30:
 363:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 365:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_ERROR;
 367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 368:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 369:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 371:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 372:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 318              		.loc 1 372 7 is_stmt 1 view .LVU94
 319 002c 2279     		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 320 002e 8D4B     		ldr	r3, .L107
 321 0030 9A70     		strb	r2, [r3, #2]
 373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 374:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Check the HSE State */
 375:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 322              		.loc 1 375 7 view .LVU95
 323              		.loc 1 375 28 is_stmt 0 view .LVU96
 324 0032 6368     		ldr	r3, [r4, #4]
 325              		.loc 1 375 9 view .LVU97
 326 0034 002B     		cmp	r3, #0
 327 0036 40D0     		beq	.L31
 376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 377:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 378:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 328              		.loc 1 378 9 is_stmt 1 view .LVU98
 329              		.loc 1 378 21 is_stmt 0 view .LVU99
 330 0038 FFF7FEFF 		bl	HAL_GetTick
 331              	.LVL23:
 332              		.loc 1 378 21 view .LVU100
 333 003c 0546     		mov	r5, r0
 334              	.LVL24:
 379:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till HSE is ready */
 381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 335              		.loc 1 381 9 is_stmt 1 view .LVU101
 336              	.L32:
 337              		.loc 1 381 14 view .LVU102
 338              		.loc 1 381 15 is_stmt 0 view .LVU103
 339 003e 894B     		ldr	r3, .L107
 340 0040 1B68     		ldr	r3, [r3]
 341              		.loc 1 381 14 view .LVU104
 342 0042 13F4003F 		tst	r3, #131072
 343 0046 14D1     		bne	.L28
 382:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 344              		.loc 1 383 11 is_stmt 1 view .LVU105
 345              		.loc 1 383 15 is_stmt 0 view .LVU106
 346 0048 FFF7FEFF 		bl	HAL_GetTick
 347              	.LVL25:
 348              		.loc 1 383 29 view .LVU107
 349 004c 401B     		subs	r0, r0, r5
 350              		.loc 1 383 13 view .LVU108
 351 004e 6428     		cmp	r0, #100
 352 0050 F5D9     		bls	.L32
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 15


 384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 353              		.loc 1 385 20 view .LVU109
 354 0052 0320     		movs	r0, #3
 355 0054 99E1     		b	.L27
 356              	.LVL26:
 357              	.L97:
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 358              		.loc 1 362 68 view .LVU110
 359 0056 834B     		ldr	r3, .L107
 360 0058 5B68     		ldr	r3, [r3, #4]
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 361              		.loc 1 362 60 view .LVU111
 362 005a 13F4800F 		tst	r3, #4194304
 363 005e E5D0     		beq	.L30
 364              	.L29:
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 365              		.loc 1 364 7 is_stmt 1 view .LVU112
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 366              		.loc 1 364 11 is_stmt 0 view .LVU113
 367 0060 804B     		ldr	r3, .L107
 368 0062 1B68     		ldr	r3, [r3]
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 369              		.loc 1 364 9 view .LVU114
 370 0064 13F4003F 		tst	r3, #131072
 371 0068 03D0     		beq	.L28
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 372              		.loc 1 364 78 discriminator 1 view .LVU115
 373 006a 6368     		ldr	r3, [r4, #4]
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 374              		.loc 1 364 57 discriminator 1 view .LVU116
 375 006c 002B     		cmp	r3, #0
 376 006e 00F08781 		beq	.L98
 377              	.LVL27:
 378              	.L28:
 386:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 388:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 389:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       else
 390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 391:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till HSE is bypassed or disabled */
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 396:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 398:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 400:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 401:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 402:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 403:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 404:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 406:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 379              		.loc 1 406 3 is_stmt 1 view .LVU117
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 16


 380              		.loc 1 406 25 is_stmt 0 view .LVU118
 381 0072 2368     		ldr	r3, [r4]
 382              		.loc 1 406 5 view .LVU119
 383 0074 13F0020F 		tst	r3, #2
 384 0078 4AD0     		beq	.L36
 407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check the parameters */
 409:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 385              		.loc 1 409 5 is_stmt 1 view .LVU120
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 386              		.loc 1 410 5 view .LVU121
 411:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 412:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 387              		.loc 1 413 5 view .LVU122
 388              		.loc 1 413 9 is_stmt 0 view .LVU123
 389 007a 7A4B     		ldr	r3, .L107
 390 007c 9B68     		ldr	r3, [r3, #8]
 391              		.loc 1 413 7 view .LVU124
 392 007e 13F00C0F 		tst	r3, #12
 393 0082 2ED0     		beq	.L37
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 394              		.loc 1 414 9 discriminator 1 view .LVU125
 395 0084 774B     		ldr	r3, .L107
 396 0086 9B68     		ldr	r3, [r3, #8]
 397 0088 03F00C03 		and	r3, r3, #12
 413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) 
 398              		.loc 1 413 60 discriminator 1 view .LVU126
 399 008c 082B     		cmp	r3, #8
 400 008e 23D0     		beq	.L99
 401              	.L38:
 415:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_ERROR;
 420:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 421:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 422:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       else
 423:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 424:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 426:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 427:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else
 429:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 430:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Check the HSI State */
 431:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 402              		.loc 1 431 7 is_stmt 1 view .LVU127
 403              		.loc 1 431 28 is_stmt 0 view .LVU128
 404 0090 E368     		ldr	r3, [r4, #12]
 405              		.loc 1 431 9 view .LVU129
 406 0092 002B     		cmp	r3, #0
 407 0094 64D0     		beq	.L40
 432:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 433:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 434:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 17


 408              		.loc 1 434 9 is_stmt 1 view .LVU130
 409 0096 744B     		ldr	r3, .L107+4
 410 0098 0122     		movs	r2, #1
 411 009a 1A60     		str	r2, [r3]
 435:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 436:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 437:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 412              		.loc 1 437 9 view .LVU131
 413              		.loc 1 437 21 is_stmt 0 view .LVU132
 414 009c FFF7FEFF 		bl	HAL_GetTick
 415              	.LVL28:
 416 00a0 0546     		mov	r5, r0
 417              	.LVL29:
 438:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 439:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till HSI is ready */
 440:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 418              		.loc 1 440 9 is_stmt 1 view .LVU133
 419              	.L41:
 420              		.loc 1 440 14 view .LVU134
 421              		.loc 1 440 15 is_stmt 0 view .LVU135
 422 00a2 704B     		ldr	r3, .L107
 423 00a4 1B68     		ldr	r3, [r3]
 424              		.loc 1 440 14 view .LVU136
 425 00a6 13F0020F 		tst	r3, #2
 426 00aa 4AD1     		bne	.L100
 441:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 442:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 427              		.loc 1 442 11 is_stmt 1 view .LVU137
 428              		.loc 1 442 15 is_stmt 0 view .LVU138
 429 00ac FFF7FEFF 		bl	HAL_GetTick
 430              	.LVL30:
 431              		.loc 1 442 29 view .LVU139
 432 00b0 401B     		subs	r0, r0, r5
 433              		.loc 1 442 13 view .LVU140
 434 00b2 0228     		cmp	r0, #2
 435 00b4 F5D9     		bls	.L41
 443:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 444:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 436              		.loc 1 444 20 view .LVU141
 437 00b6 0320     		movs	r0, #3
 438 00b8 67E1     		b	.L27
 439              	.LVL31:
 440              	.L31:
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 441              		.loc 1 392 9 is_stmt 1 view .LVU142
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 442              		.loc 1 392 21 is_stmt 0 view .LVU143
 443 00ba FFF7FEFF 		bl	HAL_GetTick
 444              	.LVL32:
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 445              		.loc 1 392 21 view .LVU144
 446 00be 0546     		mov	r5, r0
 447              	.LVL33:
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 448              		.loc 1 395 9 is_stmt 1 view .LVU145
 449              	.L34:
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 18


 450              		.loc 1 395 14 view .LVU146
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 451              		.loc 1 395 15 is_stmt 0 view .LVU147
 452 00c0 684B     		ldr	r3, .L107
 453 00c2 1B68     		ldr	r3, [r3]
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 454              		.loc 1 395 14 view .LVU148
 455 00c4 13F4003F 		tst	r3, #131072
 456 00c8 D3D0     		beq	.L28
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 457              		.loc 1 397 11 is_stmt 1 view .LVU149
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 458              		.loc 1 397 15 is_stmt 0 view .LVU150
 459 00ca FFF7FEFF 		bl	HAL_GetTick
 460              	.LVL34:
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 461              		.loc 1 397 29 view .LVU151
 462 00ce 401B     		subs	r0, r0, r5
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 463              		.loc 1 397 13 view .LVU152
 464 00d0 6428     		cmp	r0, #100
 465 00d2 F5D9     		bls	.L34
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 466              		.loc 1 399 20 view .LVU153
 467 00d4 0320     		movs	r0, #3
 468 00d6 58E1     		b	.L27
 469              	.LVL35:
 470              	.L99:
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 471              		.loc 1 414 68 view .LVU154
 472 00d8 624B     		ldr	r3, .L107
 473 00da 5B68     		ldr	r3, [r3, #4]
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 474              		.loc 1 414 60 view .LVU155
 475 00dc 13F4800F 		tst	r3, #4194304
 476 00e0 D6D1     		bne	.L38
 477              	.L37:
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 478              		.loc 1 417 7 is_stmt 1 view .LVU156
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 479              		.loc 1 417 11 is_stmt 0 view .LVU157
 480 00e2 604B     		ldr	r3, .L107
 481 00e4 1B68     		ldr	r3, [r3]
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 482              		.loc 1 417 9 view .LVU158
 483 00e6 13F0020F 		tst	r3, #2
 484 00ea 03D0     		beq	.L39
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 485              		.loc 1 417 78 discriminator 1 view .LVU159
 486 00ec E368     		ldr	r3, [r4, #12]
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 487              		.loc 1 417 57 discriminator 1 view .LVU160
 488 00ee 012B     		cmp	r3, #1
 489 00f0 40F04881 		bne	.L74
 490              	.L39:
 425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 491              		.loc 1 425 9 is_stmt 1 view .LVU161
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 19


 492 00f4 5B48     		ldr	r0, .L107
 493 00f6 0368     		ldr	r3, [r0]
 494 00f8 23F0F803 		bic	r3, r3, #248
 495 00fc 2169     		ldr	r1, [r4, #16]
 496              	.LVL36:
 497              	.LBB23:
 498              	.LBI23:
 499              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 20


  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 21


 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 22


 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 23


 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 24


 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 25


 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 26


 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 27


 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 28


 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 29


 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 30


 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 31


 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 32


 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 33


 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 34


 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 35


 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 36


 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 500              		.loc 2 981 31 view .LVU162
 501              	.LBB24:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 502              		.loc 2 983 3 view .LVU163
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 503              		.loc 2 988 4 view .LVU164
 504 00fe F822     		movs	r2, #248
 505              		.syntax unified
 506              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 507 0100 92FAA2F2 		rbit r2, r2
 508              	@ 0 "" 2
 509              	.LVL37:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 510              		.loc 2 1001 3 view .LVU165
 511              		.loc 2 1001 3 is_stmt 0 view .LVU166
 512              		.thumb
 513              		.syntax unified
 514              	.LBE24:
 515              	.LBE23:
 425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 37


 516              		.loc 1 425 9 view .LVU167
 517 0104 B2FA82F2 		clz	r2, r2
 518 0108 01FA02F2 		lsl	r2, r1, r2
 519 010c 1343     		orrs	r3, r3, r2
 520 010e 0360     		str	r3, [r0]
 521              	.L36:
 445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 446:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 447:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 448:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
 449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 450:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 451:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       else
 452:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 453:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 454:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 456:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 458:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 459:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till HSI is ready */
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 461:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 463:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 464:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 465:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 466:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 468:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 470:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 471:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 522              		.loc 1 471 3 is_stmt 1 view .LVU168
 523              		.loc 1 471 25 is_stmt 0 view .LVU169
 524 0110 2368     		ldr	r3, [r4]
 525              		.loc 1 471 5 view .LVU170
 526 0112 13F0080F 		tst	r3, #8
 527 0116 48D0     		beq	.L45
 472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 473:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check the parameters */
 474:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 528              		.loc 1 474 5 is_stmt 1 view .LVU171
 475:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check the LSI State */
 477:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 529              		.loc 1 477 5 view .LVU172
 530              		.loc 1 477 26 is_stmt 0 view .LVU173
 531 0118 6369     		ldr	r3, [r4, #20]
 532              		.loc 1 477 7 view .LVU174
 533 011a 9BB3     		cbz	r3, .L46
 478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 479:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 534              		.loc 1 480 7 is_stmt 1 view .LVU175
 535 011c 524B     		ldr	r3, .L107+4
 536 011e 0122     		movs	r2, #1
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 38


 537 0120 C3F8802E 		str	r2, [r3, #3712]
 481:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Get Start Tick */
 483:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 538              		.loc 1 483 7 view .LVU176
 539              		.loc 1 483 19 is_stmt 0 view .LVU177
 540 0124 FFF7FEFF 		bl	HAL_GetTick
 541              	.LVL38:
 542 0128 0546     		mov	r5, r0
 543              	.LVL39:
 484:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 485:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Wait till LSI is ready */
 486:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 544              		.loc 1 486 7 is_stmt 1 view .LVU178
 545              	.L47:
 546              		.loc 1 486 12 view .LVU179
 547              		.loc 1 486 13 is_stmt 0 view .LVU180
 548 012a 4E4B     		ldr	r3, .L107
 549 012c 5B6F     		ldr	r3, [r3, #116]
 550              		.loc 1 486 12 view .LVU181
 551 012e 13F0020F 		tst	r3, #2
 552 0132 3AD1     		bne	.L45
 487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 488:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 553              		.loc 1 488 9 is_stmt 1 view .LVU182
 554              		.loc 1 488 13 is_stmt 0 view .LVU183
 555 0134 FFF7FEFF 		bl	HAL_GetTick
 556              	.LVL40:
 557              		.loc 1 488 27 view .LVU184
 558 0138 401B     		subs	r0, r0, r5
 559              		.loc 1 488 11 view .LVU185
 560 013a 0228     		cmp	r0, #2
 561 013c F5D9     		bls	.L47
 489:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 490:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           return HAL_TIMEOUT;
 562              		.loc 1 490 18 view .LVU186
 563 013e 0320     		movs	r0, #3
 564 0140 23E1     		b	.L27
 565              	.L100:
 449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 566              		.loc 1 449 9 is_stmt 1 view .LVU187
 567 0142 4848     		ldr	r0, .L107
 568 0144 0368     		ldr	r3, [r0]
 569 0146 23F0F803 		bic	r3, r3, #248
 570 014a 2169     		ldr	r1, [r4, #16]
 571              	.LVL41:
 572              	.LBB25:
 573              	.LBI25:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 574              		.loc 2 981 31 view .LVU188
 575              	.LBB26:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576              		.loc 2 983 3 view .LVU189
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 577              		.loc 2 988 4 view .LVU190
 578 014c F822     		movs	r2, #248
 579              		.syntax unified
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 39


 580              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 581 014e 92FAA2F2 		rbit r2, r2
 582              	@ 0 "" 2
 583              	.LVL42:
 584              		.loc 2 1001 3 view .LVU191
 585              		.loc 2 1001 3 is_stmt 0 view .LVU192
 586              		.thumb
 587              		.syntax unified
 588              	.LBE26:
 589              	.LBE25:
 449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 590              		.loc 1 449 9 view .LVU193
 591 0152 B2FA82F2 		clz	r2, r2
 592 0156 01FA02F2 		lsl	r2, r1, r2
 593 015a 1343     		orrs	r3, r3, r2
 594 015c 0360     		str	r3, [r0]
 595 015e D7E7     		b	.L36
 596              	.LVL43:
 597              	.L40:
 454:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 598              		.loc 1 454 9 is_stmt 1 view .LVU194
 599 0160 414B     		ldr	r3, .L107+4
 600 0162 0022     		movs	r2, #0
 601 0164 1A60     		str	r2, [r3]
 457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 602              		.loc 1 457 9 view .LVU195
 457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 603              		.loc 1 457 21 is_stmt 0 view .LVU196
 604 0166 FFF7FEFF 		bl	HAL_GetTick
 605              	.LVL44:
 606 016a 0546     		mov	r5, r0
 607              	.LVL45:
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 608              		.loc 1 460 9 is_stmt 1 view .LVU197
 609              	.L43:
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 610              		.loc 1 460 14 view .LVU198
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 611              		.loc 1 460 15 is_stmt 0 view .LVU199
 612 016c 3D4B     		ldr	r3, .L107
 613 016e 1B68     		ldr	r3, [r3]
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 614              		.loc 1 460 14 view .LVU200
 615 0170 13F0020F 		tst	r3, #2
 616 0174 CCD0     		beq	.L36
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 617              		.loc 1 462 11 is_stmt 1 view .LVU201
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 618              		.loc 1 462 15 is_stmt 0 view .LVU202
 619 0176 FFF7FEFF 		bl	HAL_GetTick
 620              	.LVL46:
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 621              		.loc 1 462 29 view .LVU203
 622 017a 401B     		subs	r0, r0, r5
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 623              		.loc 1 462 13 view .LVU204
 624 017c 0228     		cmp	r0, #2
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 40


 625 017e F5D9     		bls	.L43
 464:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 626              		.loc 1 464 20 view .LVU205
 627 0180 0320     		movs	r0, #3
 628 0182 02E1     		b	.L27
 629              	.LVL47:
 630              	.L46:
 491:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 492:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 493:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 494:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else
 495:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 496:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 497:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 631              		.loc 1 497 7 is_stmt 1 view .LVU206
 632 0184 384B     		ldr	r3, .L107+4
 633 0186 0022     		movs	r2, #0
 634 0188 C3F8802E 		str	r2, [r3, #3712]
 498:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 499:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Get Start Tick */
 500:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 635              		.loc 1 500 7 view .LVU207
 636              		.loc 1 500 19 is_stmt 0 view .LVU208
 637 018c FFF7FEFF 		bl	HAL_GetTick
 638              	.LVL48:
 639 0190 0546     		mov	r5, r0
 640              	.LVL49:
 501:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 502:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Wait till LSI is ready */
 503:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 641              		.loc 1 503 7 is_stmt 1 view .LVU209
 642              	.L49:
 643              		.loc 1 503 12 view .LVU210
 644              		.loc 1 503 13 is_stmt 0 view .LVU211
 645 0192 344B     		ldr	r3, .L107
 646 0194 5B6F     		ldr	r3, [r3, #116]
 647              		.loc 1 503 12 view .LVU212
 648 0196 13F0020F 		tst	r3, #2
 649 019a 06D0     		beq	.L45
 504:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 650              		.loc 1 505 9 is_stmt 1 view .LVU213
 651              		.loc 1 505 13 is_stmt 0 view .LVU214
 652 019c FFF7FEFF 		bl	HAL_GetTick
 653              	.LVL50:
 654              		.loc 1 505 27 view .LVU215
 655 01a0 401B     		subs	r0, r0, r5
 656              		.loc 1 505 11 view .LVU216
 657 01a2 0228     		cmp	r0, #2
 658 01a4 F5D9     		bls	.L49
 506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 507:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           return HAL_TIMEOUT;
 659              		.loc 1 507 18 view .LVU217
 660 01a6 0320     		movs	r0, #3
 661 01a8 EFE0     		b	.L27
 662              	.LVL51:
 663              	.L45:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 41


 508:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 509:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 510:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 511:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 512:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 513:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 664              		.loc 1 513 3 is_stmt 1 view .LVU218
 665              		.loc 1 513 25 is_stmt 0 view .LVU219
 666 01aa 2368     		ldr	r3, [r4]
 667              		.loc 1 513 5 view .LVU220
 668 01ac 13F0040F 		tst	r3, #4
 669 01b0 5FD0     		beq	.L51
 670              	.LBB27:
 514:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 515:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 671              		.loc 1 515 5 is_stmt 1 view .LVU221
 672              	.LVL52:
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 517:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check the parameters */
 518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 673              		.loc 1 518 5 view .LVU222
 519:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 521:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 522:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 674              		.loc 1 522 5 view .LVU223
 675              		.loc 1 522 8 is_stmt 0 view .LVU224
 676 01b2 2C4B     		ldr	r3, .L107
 677 01b4 1B6C     		ldr	r3, [r3, #64]
 678              		.loc 1 522 7 view .LVU225
 679 01b6 13F0805F 		tst	r3, #268435456
 680 01ba 2CD1     		bne	.L79
 523:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 524:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 681              		.loc 1 524 7 is_stmt 1 view .LVU226
 682              	.LBB28:
 683              		.loc 1 524 7 view .LVU227
 684 01bc 0023     		movs	r3, #0
 685 01be 0193     		str	r3, [sp, #4]
 686              		.loc 1 524 7 view .LVU228
 687 01c0 284B     		ldr	r3, .L107
 688 01c2 1A6C     		ldr	r2, [r3, #64]
 689 01c4 42F08052 		orr	r2, r2, #268435456
 690 01c8 1A64     		str	r2, [r3, #64]
 691              		.loc 1 524 7 view .LVU229
 692 01ca 1B6C     		ldr	r3, [r3, #64]
 693 01cc 03F08053 		and	r3, r3, #268435456
 694 01d0 0193     		str	r3, [sp, #4]
 695              		.loc 1 524 7 view .LVU230
 696 01d2 019B     		ldr	r3, [sp, #4]
 697              	.LBE28:
 698              		.loc 1 524 7 view .LVU231
 525:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       pwrclkchanged = SET;
 699              		.loc 1 525 7 view .LVU232
 700              	.LVL53:
 701              		.loc 1 525 21 is_stmt 0 view .LVU233
 702 01d4 0125     		movs	r5, #1
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 42


 703              	.LVL54:
 704              	.L52:
 526:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 527:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 528:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Enable write access to Backup domain */
 529:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     PWR->CR |= PWR_CR_DBP;
 705              		.loc 1 529 5 is_stmt 1 view .LVU234
 706              		.loc 1 529 13 is_stmt 0 view .LVU235
 707 01d6 254B     		ldr	r3, .L107+8
 708 01d8 1A68     		ldr	r2, [r3]
 709 01da 42F48072 		orr	r2, r2, #256
 710 01de 1A60     		str	r2, [r3]
 530:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 531:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 711              		.loc 1 531 5 is_stmt 1 view .LVU236
 712              		.loc 1 531 8 is_stmt 0 view .LVU237
 713 01e0 1B68     		ldr	r3, [r3]
 714              		.loc 1 531 7 view .LVU238
 715 01e2 13F4807F 		tst	r3, #256
 716 01e6 18D0     		beq	.L101
 717              	.L53:
 532:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 533:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 534:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 535:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 536:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 538:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 540:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 542:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           return HAL_TIMEOUT;
 544:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 545:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 547:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 549:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 718              		.loc 1 549 5 is_stmt 1 view .LVU239
 719 01e8 227A     		ldrb	r2, [r4, #8]	@ zero_extendqisi2
 720 01ea 1E4B     		ldr	r3, .L107
 721 01ec 83F87020 		strb	r2, [r3, #112]
 550:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check the LSE State */
 551:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 722              		.loc 1 551 5 view .LVU240
 723              		.loc 1 551 26 is_stmt 0 view .LVU241
 724 01f0 A368     		ldr	r3, [r4, #8]
 725              		.loc 1 551 7 view .LVU242
 726 01f2 33B3     		cbz	r3, .L56
 552:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 553:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Get Start Tick */
 554:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 727              		.loc 1 554 7 is_stmt 1 view .LVU243
 728              		.loc 1 554 19 is_stmt 0 view .LVU244
 729 01f4 FFF7FEFF 		bl	HAL_GetTick
 730              	.LVL55:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 43


 731 01f8 0646     		mov	r6, r0
 732              	.LVL56:
 555:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 556:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Wait till LSE is ready */
 557:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 733              		.loc 1 557 7 is_stmt 1 view .LVU245
 734              	.L57:
 735              		.loc 1 557 12 view .LVU246
 736              		.loc 1 557 13 is_stmt 0 view .LVU247
 737 01fa 1A4B     		ldr	r3, .L107
 738 01fc 1B6F     		ldr	r3, [r3, #112]
 739              		.loc 1 557 12 view .LVU248
 740 01fe 13F0020F 		tst	r3, #2
 741 0202 35D1     		bne	.L59
 558:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 559:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 742              		.loc 1 559 9 is_stmt 1 view .LVU249
 743              		.loc 1 559 13 is_stmt 0 view .LVU250
 744 0204 FFF7FEFF 		bl	HAL_GetTick
 745              	.LVL57:
 746              		.loc 1 559 27 view .LVU251
 747 0208 801B     		subs	r0, r0, r6
 748              		.loc 1 559 11 view .LVU252
 749 020a 41F28833 		movw	r3, #5000
 750 020e 9842     		cmp	r0, r3
 751 0210 F3D9     		bls	.L57
 560:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 561:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           return HAL_TIMEOUT;
 752              		.loc 1 561 18 view .LVU253
 753 0212 0320     		movs	r0, #3
 754 0214 B9E0     		b	.L27
 755              	.LVL58:
 756              	.L79:
 515:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 757              		.loc 1 515 22 view .LVU254
 758 0216 0025     		movs	r5, #0
 759 0218 DDE7     		b	.L52
 760              	.LVL59:
 761              	.L101:
 534:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 762              		.loc 1 534 7 is_stmt 1 view .LVU255
 763 021a 144A     		ldr	r2, .L107+8
 764 021c 1368     		ldr	r3, [r2]
 765 021e 43F48073 		orr	r3, r3, #256
 766 0222 1360     		str	r3, [r2]
 537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 767              		.loc 1 537 7 view .LVU256
 537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 768              		.loc 1 537 19 is_stmt 0 view .LVU257
 769 0224 FFF7FEFF 		bl	HAL_GetTick
 770              	.LVL60:
 771 0228 0646     		mov	r6, r0
 772              	.LVL61:
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 773              		.loc 1 539 7 is_stmt 1 view .LVU258
 774              	.L54:
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 44


 775              		.loc 1 539 12 view .LVU259
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 776              		.loc 1 539 13 is_stmt 0 view .LVU260
 777 022a 104B     		ldr	r3, .L107+8
 778 022c 1B68     		ldr	r3, [r3]
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 779              		.loc 1 539 12 view .LVU261
 780 022e 13F4807F 		tst	r3, #256
 781 0232 D9D1     		bne	.L53
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 782              		.loc 1 541 9 is_stmt 1 view .LVU262
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 783              		.loc 1 541 13 is_stmt 0 view .LVU263
 784 0234 FFF7FEFF 		bl	HAL_GetTick
 785              	.LVL62:
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 786              		.loc 1 541 27 view .LVU264
 787 0238 801B     		subs	r0, r0, r6
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 788              		.loc 1 541 11 view .LVU265
 789 023a 0228     		cmp	r0, #2
 790 023c F5D9     		bls	.L54
 543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 791              		.loc 1 543 18 view .LVU266
 792 023e 0320     		movs	r0, #3
 793 0240 A3E0     		b	.L27
 794              	.LVL63:
 795              	.L56:
 562:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 563:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 564:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 565:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else
 566:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 567:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Get Start Tick */
 568:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 796              		.loc 1 568 7 is_stmt 1 view .LVU267
 797              		.loc 1 568 19 is_stmt 0 view .LVU268
 798 0242 FFF7FEFF 		bl	HAL_GetTick
 799              	.LVL64:
 800 0246 0646     		mov	r6, r0
 801              	.LVL65:
 569:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 570:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Wait till LSE is ready */
 571:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 802              		.loc 1 571 7 is_stmt 1 view .LVU269
 803              	.L60:
 804              		.loc 1 571 12 view .LVU270
 805              		.loc 1 571 13 is_stmt 0 view .LVU271
 806 0248 064B     		ldr	r3, .L107
 807 024a 1B6F     		ldr	r3, [r3, #112]
 808              		.loc 1 571 12 view .LVU272
 809 024c 13F0020F 		tst	r3, #2
 810 0250 0ED0     		beq	.L59
 572:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 811              		.loc 1 573 9 is_stmt 1 view .LVU273
 812              		.loc 1 573 13 is_stmt 0 view .LVU274
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 45


 813 0252 FFF7FEFF 		bl	HAL_GetTick
 814              	.LVL66:
 815              		.loc 1 573 27 view .LVU275
 816 0256 801B     		subs	r0, r0, r6
 817              		.loc 1 573 11 view .LVU276
 818 0258 41F28833 		movw	r3, #5000
 819 025c 9842     		cmp	r0, r3
 820 025e F3D9     		bls	.L60
 574:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 575:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           return HAL_TIMEOUT;
 821              		.loc 1 575 18 view .LVU277
 822 0260 0320     		movs	r0, #3
 823 0262 92E0     		b	.L27
 824              	.L108:
 825              		.align	2
 826              	.L107:
 827 0264 00380240 		.word	1073887232
 828 0268 00004742 		.word	1111949312
 829 026c 00700040 		.word	1073770496
 830              	.L59:
 576:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 577:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 578:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 579:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 580:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 581:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 831              		.loc 1 581 5 is_stmt 1 view .LVU278
 832              		.loc 1 581 7 is_stmt 0 view .LVU279
 833 0270 EDB9     		cbnz	r5, .L102
 834              	.LVL67:
 835              	.L51:
 836              		.loc 1 581 7 view .LVU280
 837              	.LBE27:
 582:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 584:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 585:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 586:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 587:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check the parameters */
 588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 838              		.loc 1 588 3 is_stmt 1 view .LVU281
 589:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 839              		.loc 1 589 3 view .LVU282
 840              		.loc 1 589 30 is_stmt 0 view .LVU283
 841 0272 A369     		ldr	r3, [r4, #24]
 842              		.loc 1 589 6 view .LVU284
 843 0274 002B     		cmp	r3, #0
 844 0276 00F08780 		beq	.L83
 590:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 592:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 845              		.loc 1 592 5 is_stmt 1 view .LVU285
 846              		.loc 1 592 8 is_stmt 0 view .LVU286
 847 027a 4B4A     		ldr	r2, .L109
 848 027c 9268     		ldr	r2, [r2, #8]
 849 027e 02F00C02 		and	r2, r2, #12
 850              		.loc 1 592 7 view .LVU287
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 46


 851 0282 082A     		cmp	r2, #8
 852 0284 5BD0     		beq	.L62
 593:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 594:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 853              		.loc 1 594 7 is_stmt 1 view .LVU288
 854              		.loc 1 594 9 is_stmt 0 view .LVU289
 855 0286 022B     		cmp	r3, #2
 856 0288 17D0     		beq	.L103
 595:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 596:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Check the parameters */
 597:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 598:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 599:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 600:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 601:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 602:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 603:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Disable the main PLL. */
 604:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 605:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 606:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 607:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 608:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 609:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till PLL is ready */
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 611:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 613:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 615:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 616:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 617:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 618:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 619:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 621:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 622:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ);
 624:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 625:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Enable the main PLL. */
 626:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 627:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 629:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till PLL is ready */
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 633:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 635:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 636:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 637:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 639:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 640:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       else
 641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 642:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Disable the main PLL. */
 643:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 47


 857              		.loc 1 643 9 is_stmt 1 view .LVU290
 858 028a 484B     		ldr	r3, .L109+4
 859 028c 0022     		movs	r2, #0
 860 028e 1A66     		str	r2, [r3, #96]
 644:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 645:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Get Start Tick */
 646:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 861              		.loc 1 646 9 view .LVU291
 862              		.loc 1 646 21 is_stmt 0 view .LVU292
 863 0290 FFF7FEFF 		bl	HAL_GetTick
 864              	.LVL68:
 865 0294 0446     		mov	r4, r0
 866              	.LVL69:
 647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 648:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Wait till PLL is ready */
 649:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 867              		.loc 1 649 9 is_stmt 1 view .LVU293
 868              	.L68:
 869              		.loc 1 649 14 view .LVU294
 870              		.loc 1 649 15 is_stmt 0 view .LVU295
 871 0296 444B     		ldr	r3, .L109
 872 0298 1B68     		ldr	r3, [r3]
 873              		.loc 1 649 14 view .LVU296
 874 029a 13F0007F 		tst	r3, #33554432
 875 029e 4CD0     		beq	.L104
 650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 651:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 876              		.loc 1 651 11 is_stmt 1 view .LVU297
 877              		.loc 1 651 15 is_stmt 0 view .LVU298
 878 02a0 FFF7FEFF 		bl	HAL_GetTick
 879              	.LVL70:
 880              		.loc 1 651 29 view .LVU299
 881 02a4 001B     		subs	r0, r0, r4
 882              		.loc 1 651 13 view .LVU300
 883 02a6 6428     		cmp	r0, #100
 884 02a8 F5D9     		bls	.L68
 652:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 653:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             return HAL_TIMEOUT;
 885              		.loc 1 653 20 view .LVU301
 886 02aa 0320     		movs	r0, #3
 887 02ac 6DE0     		b	.L27
 888              	.LVL71:
 889              	.L102:
 890              	.LBB29:
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 891              		.loc 1 583 7 is_stmt 1 view .LVU302
 892 02ae 3E4A     		ldr	r2, .L109
 893 02b0 136C     		ldr	r3, [r2, #64]
 894 02b2 23F08053 		bic	r3, r3, #268435456
 895 02b6 1364     		str	r3, [r2, #64]
 896 02b8 DBE7     		b	.L51
 897              	.LVL72:
 898              	.L103:
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 899              		.loc 1 583 7 is_stmt 0 view .LVU303
 900              	.LBE29:
 597:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 48


 901              		.loc 1 597 9 is_stmt 1 view .LVU304
 598:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 902              		.loc 1 598 9 view .LVU305
 599:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 903              		.loc 1 599 9 view .LVU306
 600:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 904              		.loc 1 600 9 view .LVU307
 601:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 905              		.loc 1 601 9 view .LVU308
 604:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 906              		.loc 1 604 9 view .LVU309
 907 02ba 3C4B     		ldr	r3, .L109+4
 908 02bc 0022     		movs	r2, #0
 909 02be 1A66     		str	r2, [r3, #96]
 607:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 910              		.loc 1 607 9 view .LVU310
 607:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 911              		.loc 1 607 21 is_stmt 0 view .LVU311
 912 02c0 FFF7FEFF 		bl	HAL_GetTick
 913              	.LVL73:
 914 02c4 0546     		mov	r5, r0
 915              	.LVL74:
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 916              		.loc 1 610 9 is_stmt 1 view .LVU312
 917              	.L64:
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 918              		.loc 1 610 14 view .LVU313
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 919              		.loc 1 610 15 is_stmt 0 view .LVU314
 920 02c6 384B     		ldr	r3, .L109
 921 02c8 1B68     		ldr	r3, [r3]
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 922              		.loc 1 610 14 view .LVU315
 923 02ca 13F0007F 		tst	r3, #33554432
 924 02ce 06D0     		beq	.L105
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 925              		.loc 1 612 11 is_stmt 1 view .LVU316
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 926              		.loc 1 612 15 is_stmt 0 view .LVU317
 927 02d0 FFF7FEFF 		bl	HAL_GetTick
 928              	.LVL75:
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 929              		.loc 1 612 29 view .LVU318
 930 02d4 401B     		subs	r0, r0, r5
 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 931              		.loc 1 612 13 view .LVU319
 932 02d6 6428     		cmp	r0, #100
 933 02d8 F5D9     		bls	.L64
 614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 934              		.loc 1 614 20 view .LVU320
 935 02da 0320     		movs	r0, #3
 936 02dc 55E0     		b	.L27
 937              	.L105:
 619:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 938              		.loc 1 619 9 is_stmt 1 view .LVU321
 939 02de 3248     		ldr	r0, .L109
 940 02e0 4268     		ldr	r2, [r0, #4]
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 49


 941 02e2 22F07462 		bic	r2, r2, #255852544
 942 02e6 22F45F32 		bic	r2, r2, #228352
 943 02ea 22F47F72 		bic	r2, r2, #1020
 944 02ee 22F00302 		bic	r2, r2, #3
 945 02f2 E369     		ldr	r3, [r4, #28]
 946 02f4 216A     		ldr	r1, [r4, #32]
 947 02f6 0B43     		orrs	r3, r3, r1
 948 02f8 616A     		ldr	r1, [r4, #36]
 949 02fa 43EA8113 		orr	r3, r3, r1, lsl #6
 950 02fe E16A     		ldr	r1, [r4, #44]
 951 0300 43EA0163 		orr	r3, r3, r1, lsl #24
 952 0304 A16A     		ldr	r1, [r4, #40]
 953 0306 4908     		lsrs	r1, r1, #1
 954 0308 0139     		subs	r1, r1, #1
 955 030a 43EA0143 		orr	r3, r3, r1, lsl #16
 956 030e 1343     		orrs	r3, r3, r2
 957 0310 4360     		str	r3, [r0, #4]
 626:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 958              		.loc 1 626 9 view .LVU322
 959 0312 264B     		ldr	r3, .L109+4
 960 0314 0122     		movs	r2, #1
 961 0316 1A66     		str	r2, [r3, #96]
 629:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 962              		.loc 1 629 9 view .LVU323
 629:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 963              		.loc 1 629 21 is_stmt 0 view .LVU324
 964 0318 FFF7FEFF 		bl	HAL_GetTick
 965              	.LVL76:
 966 031c 0446     		mov	r4, r0
 967              	.LVL77:
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 968              		.loc 1 632 9 is_stmt 1 view .LVU325
 969              	.L66:
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 970              		.loc 1 632 14 view .LVU326
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 971              		.loc 1 632 15 is_stmt 0 view .LVU327
 972 031e 224B     		ldr	r3, .L109
 973 0320 1B68     		ldr	r3, [r3]
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 974              		.loc 1 632 14 view .LVU328
 975 0322 13F0007F 		tst	r3, #33554432
 976 0326 06D1     		bne	.L106
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 977              		.loc 1 634 11 is_stmt 1 view .LVU329
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 978              		.loc 1 634 15 is_stmt 0 view .LVU330
 979 0328 FFF7FEFF 		bl	HAL_GetTick
 980              	.LVL78:
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 981              		.loc 1 634 29 view .LVU331
 982 032c 001B     		subs	r0, r0, r4
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           {
 983              		.loc 1 634 13 view .LVU332
 984 032e 6428     		cmp	r0, #100
 985 0330 F5D9     		bls	.L66
 636:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 50


 986              		.loc 1 636 20 view .LVU333
 987 0332 0320     		movs	r0, #3
 988 0334 29E0     		b	.L27
 989              	.L106:
 654:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           }
 655:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 657:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 658:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else
 659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 660:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 661:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 662:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_ERROR;
 664:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 665:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       else
 666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 667:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         uint32_t pllcfgr = RCC->PLLCFGR;
 669:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         if((READ_BIT(pllcfgr, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            ((READ_BIT(pllcfgr, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) != RCC_OscInitStruct->PLL
 673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 674:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 675:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****           return HAL_ERROR;
 677:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 678:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   return HAL_OK;
 990              		.loc 1 681 10 view .LVU334
 991 0336 0020     		movs	r0, #0
 992 0338 27E0     		b	.L27
 993              	.L104:
 994              		.loc 1 681 10 view .LVU335
 995 033a 0020     		movs	r0, #0
 996 033c 25E0     		b	.L27
 997              	.LVL79:
 998              	.L62:
 661:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 999              		.loc 1 661 7 is_stmt 1 view .LVU336
 661:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1000              		.loc 1 661 9 is_stmt 0 view .LVU337
 1001 033e 012B     		cmp	r3, #1
 1002 0340 25D0     		beq	.L87
 1003              	.LBB30:
 668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       
 1004              		.loc 1 668 9 is_stmt 1 view .LVU338
 668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       
 1005              		.loc 1 668 18 is_stmt 0 view .LVU339
 1006 0342 194B     		ldr	r3, .L109
 1007 0344 5B68     		ldr	r3, [r3, #4]
 1008              	.LVL80:
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1009              		.loc 1 670 9 is_stmt 1 view .LVU340
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 51


 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1010              		.loc 1 670 13 is_stmt 0 view .LVU341
 1011 0346 03F48001 		and	r1, r3, #4194304
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1012              		.loc 1 670 76 view .LVU342
 1013 034a E269     		ldr	r2, [r4, #28]
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1014              		.loc 1 670 11 view .LVU343
 1015 034c 9142     		cmp	r1, r2
 1016 034e 20D1     		bne	.L88
 671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            ((READ_BIT(pllcfgr, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) != RCC_OscInitStruct->PLL
 1017              		.loc 1 671 13 discriminator 1 view .LVU344
 1018 0350 03F03F02 		and	r2, r3, #63
 671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            ((READ_BIT(pllcfgr, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) != RCC_OscInitStruct->PLL
 1019              		.loc 1 671 74 discriminator 1 view .LVU345
 1020 0354 216A     		ldr	r1, [r4, #32]
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 1021              		.loc 1 670 88 discriminator 1 view .LVU346
 1022 0356 8A42     		cmp	r2, r1
 1023 0358 1DD1     		bne	.L89
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 1024              		.loc 1 672 50 view .LVU347
 1025 035a C3F38812 		ubfx	r2, r3, #6, #9
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 1026              		.loc 1 672 100 view .LVU348
 1027 035e 616A     		ldr	r1, [r4, #36]
 671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            ((READ_BIT(pllcfgr, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos) != RCC_OscInitStruct->PLL
 1028              		.loc 1 671 81 view .LVU349
 1029 0360 8A42     		cmp	r2, r1
 1030 0362 1AD1     		bne	.L90
 673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 1031              		.loc 1 673 13 view .LVU350
 1032 0364 03F44032 		and	r2, r3, #196608
 673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 1033              		.loc 1 673 74 view .LVU351
 1034 0368 A16A     		ldr	r1, [r4, #40]
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 1035              		.loc 1 672 107 view .LVU352
 1036 036a 8A42     		cmp	r2, r1
 1037 036c 17D1     		bne	.L91
 674:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 1038              		.loc 1 674 13 view .LVU353
 1039 036e 03F07063 		and	r3, r3, #251658240
 1040              	.LVL81:
 674:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         {
 1041              		.loc 1 674 74 view .LVU354
 1042 0372 E26A     		ldr	r2, [r4, #44]
 673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****            (READ_BIT(pllcfgr, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 1043              		.loc 1 673 81 view .LVU355
 1044 0374 9342     		cmp	r3, r2
 1045 0376 14D1     		bne	.L92
 1046              	.LBE30:
 1047              		.loc 1 681 10 view .LVU356
 1048 0378 0020     		movs	r0, #0
 1049 037a 06E0     		b	.L27
 1050              	.LVL82:
 1051              	.L70:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 52


 1052              	.LCFI3:
 1053              		.cfi_def_cfa_offset 0
 1054              		.cfi_restore 4
 1055              		.cfi_restore 5
 1056              		.cfi_restore 6
 1057              		.cfi_restore 14
 350:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1058              		.loc 1 350 12 view .LVU357
 1059 037c 0120     		movs	r0, #1
 1060              	.LVL83:
 682:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1061              		.loc 1 682 1 view .LVU358
 1062 037e 7047     		bx	lr
 1063              	.LVL84:
 1064              	.L98:
 1065              	.LCFI4:
 1066              		.cfi_def_cfa_offset 24
 1067              		.cfi_offset 4, -16
 1068              		.cfi_offset 5, -12
 1069              		.cfi_offset 6, -8
 1070              		.cfi_offset 14, -4
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1071              		.loc 1 366 16 view .LVU359
 1072 0380 0120     		movs	r0, #1
 1073              	.LVL85:
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1074              		.loc 1 366 16 view .LVU360
 1075 0382 02E0     		b	.L27
 1076              	.L74:
 419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1077              		.loc 1 419 16 view .LVU361
 1078 0384 0120     		movs	r0, #1
 1079 0386 00E0     		b	.L27
 1080              	.L83:
 681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1081              		.loc 1 681 10 view .LVU362
 1082 0388 0020     		movs	r0, #0
 1083              	.LVL86:
 1084              	.L27:
 1085              		.loc 1 682 1 view .LVU363
 1086 038a 02B0     		add	sp, sp, #8
 1087              	.LCFI5:
 1088              		.cfi_remember_state
 1089              		.cfi_def_cfa_offset 16
 1090              		@ sp needed
 1091 038c 70BD     		pop	{r4, r5, r6, pc}
 1092              	.LVL87:
 1093              	.L87:
 1094              	.LCFI6:
 1095              		.cfi_restore_state
 663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1096              		.loc 1 663 16 view .LVU364
 1097 038e 0120     		movs	r0, #1
 1098 0390 FBE7     		b	.L27
 1099              	.LVL88:
 1100              	.L88:
 1101              	.LBB31:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 53


 676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 1102              		.loc 1 676 18 view .LVU365
 1103 0392 0120     		movs	r0, #1
 1104 0394 F9E7     		b	.L27
 1105              	.L89:
 1106 0396 0120     		movs	r0, #1
 1107 0398 F7E7     		b	.L27
 1108              	.L90:
 1109 039a 0120     		movs	r0, #1
 1110 039c F5E7     		b	.L27
 1111              	.L91:
 1112 039e 0120     		movs	r0, #1
 1113 03a0 F3E7     		b	.L27
 1114              	.LVL89:
 1115              	.L92:
 676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         }
 1116              		.loc 1 676 18 view .LVU366
 1117 03a2 0120     		movs	r0, #1
 1118 03a4 F1E7     		b	.L27
 1119              	.L110:
 1120 03a6 00BF     		.align	2
 1121              	.L109:
 1122 03a8 00380240 		.word	1073887232
 1123 03ac 00004742 		.word	1111949312
 1124              	.LBE31:
 1125              		.cfi_endproc
 1126              	.LFE73:
 1128              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1129              		.align	1
 1130              		.global	HAL_RCC_MCOConfig
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1135              	HAL_RCC_MCOConfig:
 1136              	.LVL90:
 1137              	.LFB75:
 683:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 684:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 685:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB busses clocks according to the specified
 686:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 687:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 688:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 689:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  FLatency FLASH Latency, this parameter depend on device selected
 690:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 691:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 692:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 693:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 694:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 695:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         startup from Reset, wake-up from STOP and STANDBY mode, or in case
 696:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 697:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 698:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 699:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 700:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 701:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 702:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 703:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 54


 704:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 705:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 706:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 707:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
 708:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 709:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 710:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 711:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t tickstart;
 712:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 713:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check Null pointer */
 714:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 715:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 716:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     return HAL_ERROR;
 717:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 718:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 719:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check the parameters */
 720:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 721:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 722:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 723:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 724:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****      must be correctly programmed according to the frequency of the CPU clock
 725:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****      (HCLK) and the supply voltage of the device. */
 726:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 727:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 729:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 730:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 731:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 732:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 733:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 734:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****        memory by reading the FLASH_ACR register */
 735:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 736:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 737:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_ERROR;
 738:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 739:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 740:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 741:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 743:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 744:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 745:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 746:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 747:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 749:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 750:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 752:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 753:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3U));
 754:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 755:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 756:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Set the new HCLK clock divider */
 757:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 758:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 759:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 760:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 55


 761:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 762:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 763:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 764:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 765:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 766:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 767:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 768:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 769:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Check the HSE ready flag */
 770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 771:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 772:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_ERROR;
 773:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 774:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 775:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 776:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 777:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 778:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Check the PLL ready flag */
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 780:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 781:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_ERROR;
 782:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 783:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 784:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 785:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     else
 786:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 787:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* Check the HSI ready flag */
 788:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 789:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 790:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_ERROR;
 791:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 792:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 793:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 794:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 795:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 796:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Get Start Tick */
 797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 798:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 802:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 803:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         return HAL_TIMEOUT;
 804:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 805:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 806:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 807:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 808:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 810:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 811:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****      /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 812:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 813:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 814:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 815:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****        memory by reading the FLASH_ACR register */
 816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 817:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 56


 818:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       return HAL_ERROR;
 819:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 820:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 821:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 822:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 824:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 825:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 826:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 827:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 828:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 829:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 831:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 832:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 833:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 834:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 835:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 836:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> POSITI
 838:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 839:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings */
 840:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   HAL_InitTick (uwTickPrio);
 841:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 842:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   return HAL_OK;
 843:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 844:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 845:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 846:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @}
 847:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 848:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 849:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 850:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 851:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  *
 852:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** @verbatim
 853:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  ===============================================================================
 854:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 855:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****  ===============================================================================
 856:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     [..]
 857:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 858:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     frequencies.
 859:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 860:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** @endverbatim
 861:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @{
 862:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 863:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 864:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 865:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO1 pin(PA8) or on MCO2 pin(PC9).
 866:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   PA8/PC9 should be configured in alternate function mode.
 867:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 868:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 869:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO1: Clock source to output on MCO1 pin(PA8).
 870:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO2: Clock source to output on MCO2 pin(PC9).
 871:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 872:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 873:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSI: HSI clock selected as MCO1 source
 874:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_LSE: LSE clock selected as MCO1 source
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 57


 875:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_HSE: HSE clock selected as MCO1 source
 876:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO1SOURCE_PLLCLK: main PLL clock selected as MCO1 source
 877:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_SYSCLK: System clock (SYSCLK) selected as MCO2 source
 878:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLI2SCLK: PLLI2S clock selected as MCO2 source
 879:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_HSE: HSE clock selected as MCO2 source
 880:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCO2SOURCE_PLLCLK: main PLL clock selected as MCO2 source
 881:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCOx prescaler.
 882:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 883:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCODIV_1: no division applied to MCOx clock
 884:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCODIV_2: division by 2 applied to MCOx clock
 885:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCODIV_3: division by 3 applied to MCOx clock
 886:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCODIV_4: division by 4 applied to MCOx clock
 887:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *            @arg RCC_MCODIV_5: division by 5 applied to MCOx clock
 888:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
 889:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 890:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 891:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1138              		.loc 1 891 1 is_stmt 1 view -0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 32
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142              		.loc 1 891 1 is_stmt 0 view .LVU368
 1143 0000 70B5     		push	{r4, r5, r6, lr}
 1144              	.LCFI7:
 1145              		.cfi_def_cfa_offset 16
 1146              		.cfi_offset 4, -16
 1147              		.cfi_offset 5, -12
 1148              		.cfi_offset 6, -8
 1149              		.cfi_offset 14, -4
 1150 0002 88B0     		sub	sp, sp, #32
 1151              	.LCFI8:
 1152              		.cfi_def_cfa_offset 48
 1153 0004 0C46     		mov	r4, r1
 1154 0006 1546     		mov	r5, r2
 892:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 1155              		.loc 1 892 3 is_stmt 1 view .LVU369
 893:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check the parameters */
 894:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 1156              		.loc 1 894 3 view .LVU370
 895:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 1157              		.loc 1 895 3 view .LVU371
 896:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* RCC_MCO1 */
 897:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(RCC_MCOx == RCC_MCO1)
 1158              		.loc 1 897 3 view .LVU372
 1159              		.loc 1 897 5 is_stmt 0 view .LVU373
 1160 0008 00BB     		cbnz	r0, .L112
 898:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 899:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 1161              		.loc 1 899 5 is_stmt 1 view .LVU374
 900:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 901:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* MCO1 Clock Enable */
 902:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __MCO1_CLK_ENABLE();
 1162              		.loc 1 902 5 view .LVU375
 1163              	.LBB32:
 1164              		.loc 1 902 5 view .LVU376
 1165 000a 0023     		movs	r3, #0
 1166 000c 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 58


 1167              		.loc 1 902 5 view .LVU377
 1168 000e 204E     		ldr	r6, .L115
 1169 0010 326B     		ldr	r2, [r6, #48]
 1170              	.LVL91:
 1171              		.loc 1 902 5 is_stmt 0 view .LVU378
 1172 0012 42F00102 		orr	r2, r2, #1
 1173 0016 3263     		str	r2, [r6, #48]
 1174              		.loc 1 902 5 is_stmt 1 view .LVU379
 1175 0018 326B     		ldr	r2, [r6, #48]
 1176 001a 02F00102 		and	r2, r2, #1
 1177 001e 0192     		str	r2, [sp, #4]
 1178              		.loc 1 902 5 view .LVU380
 1179 0020 019A     		ldr	r2, [sp, #4]
 1180              	.LBE32:
 1181              		.loc 1 902 5 view .LVU381
 903:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 904:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Configure the MCO1 pin in alternate function mode */
 905:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO1_PIN;
 1182              		.loc 1 905 5 view .LVU382
 1183              		.loc 1 905 25 is_stmt 0 view .LVU383
 1184 0022 4FF48072 		mov	r2, #256
 1185 0026 0392     		str	r2, [sp, #12]
 906:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1186              		.loc 1 906 5 is_stmt 1 view .LVU384
 1187              		.loc 1 906 26 is_stmt 0 view .LVU385
 1188 0028 0222     		movs	r2, #2
 1189 002a 0492     		str	r2, [sp, #16]
 907:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1190              		.loc 1 907 5 is_stmt 1 view .LVU386
 1191              		.loc 1 907 27 is_stmt 0 view .LVU387
 1192 002c 0322     		movs	r2, #3
 1193 002e 0692     		str	r2, [sp, #24]
 908:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1194              		.loc 1 908 5 is_stmt 1 view .LVU388
 1195              		.loc 1 908 26 is_stmt 0 view .LVU389
 1196 0030 0593     		str	r3, [sp, #20]
 909:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1197              		.loc 1 909 5 is_stmt 1 view .LVU390
 1198              		.loc 1 909 31 is_stmt 0 view .LVU391
 1199 0032 0793     		str	r3, [sp, #28]
 910:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 1200              		.loc 1 910 5 is_stmt 1 view .LVU392
 1201 0034 03A9     		add	r1, sp, #12
 1202              	.LVL92:
 1203              		.loc 1 910 5 is_stmt 0 view .LVU393
 1204 0036 1748     		ldr	r0, .L115+4
 1205              	.LVL93:
 1206              		.loc 1 910 5 view .LVU394
 1207 0038 FFF7FEFF 		bl	HAL_GPIO_Init
 1208              	.LVL94:
 911:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 912:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Mask MCO1 and MCO1PRE[2:0] bits then Select MCO1 clock source and prescaler */
 913:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 1209              		.loc 1 913 5 is_stmt 1 view .LVU395
 1210 003c B368     		ldr	r3, [r6, #8]
 1211 003e 23F0EC63 		bic	r3, r3, #123731968
 1212 0042 2543     		orrs	r5, r5, r4
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 59


 1213              	.LVL95:
 1214              		.loc 1 913 5 is_stmt 0 view .LVU396
 1215 0044 1D43     		orrs	r5, r5, r3
 1216 0046 B560     		str	r5, [r6, #8]
 1217              	.LVL96:
 1218              	.L111:
 914:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 915:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
 916:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 917:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     assert_param(IS_RCC_MCO2SOURCE(RCC_MCOSource));
 918:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 919:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* MCO2 Clock Enable */
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __MCO2_CLK_ENABLE();
 921:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 922:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Configure the MCO2 pin in alternate function mode */
 923:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Pin = MCO2_PIN;
 924:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 926:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 929:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 930:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Mask MCO2 and MCO2PRE[2:0] bits then Select MCO2 clock source and prescaler */
 931:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 3U)))
 932:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 933:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1219              		.loc 1 933 1 view .LVU397
 1220 0048 08B0     		add	sp, sp, #32
 1221              	.LCFI9:
 1222              		.cfi_remember_state
 1223              		.cfi_def_cfa_offset 16
 1224              		@ sp needed
 1225 004a 70BD     		pop	{r4, r5, r6, pc}
 1226              	.LVL97:
 1227              	.L112:
 1228              	.LCFI10:
 1229              		.cfi_restore_state
 917:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1230              		.loc 1 917 5 is_stmt 1 view .LVU398
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1231              		.loc 1 920 5 view .LVU399
 1232              	.LBB33:
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1233              		.loc 1 920 5 view .LVU400
 1234 004c 0023     		movs	r3, #0
 1235 004e 0293     		str	r3, [sp, #8]
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1236              		.loc 1 920 5 view .LVU401
 1237 0050 0F4E     		ldr	r6, .L115
 1238 0052 326B     		ldr	r2, [r6, #48]
 1239              	.LVL98:
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1240              		.loc 1 920 5 is_stmt 0 view .LVU402
 1241 0054 42F00402 		orr	r2, r2, #4
 1242 0058 3263     		str	r2, [r6, #48]
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1243              		.loc 1 920 5 is_stmt 1 view .LVU403
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 60


 1244 005a 326B     		ldr	r2, [r6, #48]
 1245 005c 02F00402 		and	r2, r2, #4
 1246 0060 0292     		str	r2, [sp, #8]
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1247              		.loc 1 920 5 view .LVU404
 1248 0062 029A     		ldr	r2, [sp, #8]
 1249              	.LBE33:
 920:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1250              		.loc 1 920 5 view .LVU405
 923:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1251              		.loc 1 923 5 view .LVU406
 923:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1252              		.loc 1 923 25 is_stmt 0 view .LVU407
 1253 0064 4FF40072 		mov	r2, #512
 1254 0068 0392     		str	r2, [sp, #12]
 924:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1255              		.loc 1 924 5 is_stmt 1 view .LVU408
 924:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1256              		.loc 1 924 26 is_stmt 0 view .LVU409
 1257 006a 0222     		movs	r2, #2
 1258 006c 0492     		str	r2, [sp, #16]
 925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1259              		.loc 1 925 5 is_stmt 1 view .LVU410
 925:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1260              		.loc 1 925 27 is_stmt 0 view .LVU411
 1261 006e 0322     		movs	r2, #3
 1262 0070 0692     		str	r2, [sp, #24]
 926:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1263              		.loc 1 926 5 is_stmt 1 view .LVU412
 926:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 1264              		.loc 1 926 26 is_stmt 0 view .LVU413
 1265 0072 0593     		str	r3, [sp, #20]
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1266              		.loc 1 927 5 is_stmt 1 view .LVU414
 927:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 1267              		.loc 1 927 31 is_stmt 0 view .LVU415
 1268 0074 0793     		str	r3, [sp, #28]
 928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1269              		.loc 1 928 5 is_stmt 1 view .LVU416
 1270 0076 03A9     		add	r1, sp, #12
 1271              	.LVL99:
 928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1272              		.loc 1 928 5 is_stmt 0 view .LVU417
 1273 0078 0748     		ldr	r0, .L115+8
 1274              	.LVL100:
 928:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1275              		.loc 1 928 5 view .LVU418
 1276 007a FFF7FEFF 		bl	HAL_GPIO_Init
 1277              	.LVL101:
 931:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1278              		.loc 1 931 5 is_stmt 1 view .LVU419
 1279 007e B368     		ldr	r3, [r6, #8]
 1280 0080 23F07843 		bic	r3, r3, #-134217728
 1281 0084 44EAC504 		orr	r4, r4, r5, lsl #3
 1282              	.LVL102:
 931:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1283              		.loc 1 931 5 is_stmt 0 view .LVU420
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 61


 1284 0088 1C43     		orrs	r4, r4, r3
 1285 008a B460     		str	r4, [r6, #8]
 1286              		.loc 1 933 1 view .LVU421
 1287 008c DCE7     		b	.L111
 1288              	.L116:
 1289 008e 00BF     		.align	2
 1290              	.L115:
 1291 0090 00380240 		.word	1073887232
 1292 0094 00000240 		.word	1073872896
 1293 0098 00080240 		.word	1073874944
 1294              		.cfi_endproc
 1295              	.LFE75:
 1297              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1298              		.align	1
 1299              		.global	HAL_RCC_EnableCSS
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1304              	HAL_RCC_EnableCSS:
 1305              	.LFB76:
 934:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 935:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 936:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 937:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 938:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 939:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 940:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
 941:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         the Cortex-M3 NMI (Non-Maskable Interrupt) exception vector.
 942:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
 943:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 944:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 945:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1306              		.loc 1 945 1 is_stmt 1 view -0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 0
 1309              		@ frame_needed = 0, uses_anonymous_args = 0
 1310              		@ link register save eliminated.
 946:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1311              		.loc 1 946 3 view .LVU423
 1312              		.loc 1 946 38 is_stmt 0 view .LVU424
 1313 0000 014B     		ldr	r3, .L118
 1314 0002 0122     		movs	r2, #1
 1315 0004 DA64     		str	r2, [r3, #76]
 947:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1316              		.loc 1 947 1 view .LVU425
 1317 0006 7047     		bx	lr
 1318              	.L119:
 1319              		.align	2
 1320              	.L118:
 1321 0008 00004742 		.word	1111949312
 1322              		.cfi_endproc
 1323              	.LFE76:
 1325              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1326              		.align	1
 1327              		.global	HAL_RCC_DisableCSS
 1328              		.syntax unified
 1329              		.thumb
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 62


 1330              		.thumb_func
 1332              	HAL_RCC_DisableCSS:
 1333              	.LFB77:
 948:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 949:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 950:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 951:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
 952:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 953:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 954:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1334              		.loc 1 954 1 is_stmt 1 view -0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 1338              		@ link register save eliminated.
 955:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1339              		.loc 1 955 3 view .LVU427
 1340              		.loc 1 955 38 is_stmt 0 view .LVU428
 1341 0000 014B     		ldr	r3, .L121
 1342 0002 0022     		movs	r2, #0
 1343 0004 DA64     		str	r2, [r3, #76]
 956:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1344              		.loc 1 956 1 view .LVU429
 1345 0006 7047     		bx	lr
 1346              	.L122:
 1347              		.align	2
 1348              	.L121:
 1349 0008 00004742 		.word	1111949312
 1350              		.cfi_endproc
 1351              	.LFE77:
 1353              		.global	__aeabi_uldivmod
 1354              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1355              		.align	1
 1356              		.global	HAL_RCC_GetSysClockFreq
 1357              		.syntax unified
 1358              		.thumb
 1359              		.thumb_func
 1361              	HAL_RCC_GetSysClockFreq:
 1362              	.LFB78:
 957:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 958:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
 959:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
 960:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 961:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
 962:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
 963:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         constant and the selected clock source:
 964:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 965:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
 966:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**)
 967:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *           or HSI_VALUE(*) multiplied/divided by the PLL factors.
 968:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f2xx_hal_conf.h file (default value
 969:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
 970:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *               in voltage and temperature.
 971:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f2xx_hal_conf.h file (default value
 972:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *                25 MHz), user has to ensure that HSE_VALUE is same as the real
 973:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 974:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *                have wrong result.
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 63


 975:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 976:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 977:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         value for HSE crystal.
 978:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 979:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
 980:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
 981:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 982:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 983:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 984:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 985:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
 986:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval SYSCLK frequency
 987:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
 988:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 989:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1363              		.loc 1 989 1 is_stmt 1 view -0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367 0000 08B5     		push	{r3, lr}
 1368              	.LCFI11:
 1369              		.cfi_def_cfa_offset 8
 1370              		.cfi_offset 3, -8
 1371              		.cfi_offset 14, -4
 990:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 1372              		.loc 1 990 3 view .LVU431
 1373              	.LVL103:
 991:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1374              		.loc 1 991 3 view .LVU432
 992:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 993:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 994:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 1375              		.loc 1 994 3 view .LVU433
 1376              		.loc 1 994 14 is_stmt 0 view .LVU434
 1377 0002 254B     		ldr	r3, .L130
 1378 0004 9B68     		ldr	r3, [r3, #8]
 1379              		.loc 1 994 21 view .LVU435
 1380 0006 03F00C03 		and	r3, r3, #12
 1381              		.loc 1 994 3 view .LVU436
 1382 000a 042B     		cmp	r3, #4
 1383 000c 3FD0     		beq	.L127
 1384 000e 082B     		cmp	r3, #8
 1385 0010 3FD1     		bne	.L128
 995:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 996:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 997:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 998:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 999:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****        break;
1000:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
1001:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
1002:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
1003:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
1004:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       break;
1005:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
1006:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
1007:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
1008:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 64


1009:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       SYSCLK = PLL_VCO / PLLP */
1010:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 1386              		.loc 1 1010 7 is_stmt 1 view .LVU437
 1387              		.loc 1 1010 17 is_stmt 0 view .LVU438
 1388 0012 214B     		ldr	r3, .L130
 1389 0014 5A68     		ldr	r2, [r3, #4]
 1390              		.loc 1 1010 12 view .LVU439
 1391 0016 02F03F02 		and	r2, r2, #63
 1392              	.LVL104:
1011:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 1393              		.loc 1 1011 7 is_stmt 1 view .LVU440
 1394              		.loc 1 1011 10 is_stmt 0 view .LVU441
 1395 001a 5B68     		ldr	r3, [r3, #4]
 1396              		.loc 1 1011 9 view .LVU442
 1397 001c 13F4800F 		tst	r3, #4194304
 1398 0020 12D0     		beq	.L125
1012:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
1013:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* HSE used as PLL clock source */
1014:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
 1399              		.loc 1 1014 9 is_stmt 1 view .LVU443
 1400              		.loc 1 1014 72 is_stmt 0 view .LVU444
 1401 0022 1D4B     		ldr	r3, .L130
 1402 0024 5968     		ldr	r1, [r3, #4]
 1403              		.loc 1 1014 56 view .LVU445
 1404 0026 C1F38811 		ubfx	r1, r1, #6, #9
 1405              		.loc 1 1014 53 view .LVU446
 1406 002a 1C48     		ldr	r0, .L130+4
 1407              		.loc 1 1014 130 view .LVU447
 1408 002c 0023     		movs	r3, #0
 1409 002e A1FB0001 		umull	r0, r1, r1, r0
 1410 0032 FFF7FEFF 		bl	__aeabi_uldivmod
 1411              	.LVL105:
 1412              	.L126:
1015:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
1016:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       else
1017:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
1018:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         /* HSI used as PLL clock source */
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****         pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN
1020:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
1021:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 1413              		.loc 1 1021 7 is_stmt 1 view .LVU448
 1414              		.loc 1 1021 21 is_stmt 0 view .LVU449
 1415 0036 184B     		ldr	r3, .L130
 1416 0038 5B68     		ldr	r3, [r3, #4]
 1417              		.loc 1 1021 51 view .LVU450
 1418 003a C3F30143 		ubfx	r3, r3, #16, #2
 1419              		.loc 1 1021 76 view .LVU451
 1420 003e 0133     		adds	r3, r3, #1
 1421              		.loc 1 1021 12 view .LVU452
 1422 0040 5B00     		lsls	r3, r3, #1
 1423              	.LVL106:
1022:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1023:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       sysclockfreq = pllvco/pllp;
 1424              		.loc 1 1023 7 is_stmt 1 view .LVU453
 1425              		.loc 1 1023 20 is_stmt 0 view .LVU454
 1426 0042 B0FBF3F0 		udiv	r0, r0, r3
 1427              	.LVL107:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 65


1024:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       break;
 1428              		.loc 1 1024 7 is_stmt 1 view .LVU455
 1429 0046 25E0     		b	.L123
 1430              	.LVL108:
 1431              	.L125:
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1432              		.loc 1 1019 9 view .LVU456
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1433              		.loc 1 1019 72 is_stmt 0 view .LVU457
 1434 0048 134B     		ldr	r3, .L130
 1435 004a 5968     		ldr	r1, [r3, #4]
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1436              		.loc 1 1019 56 view .LVU458
 1437 004c C1F3881C 		ubfx	ip, r1, #6, #9
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1438              		.loc 1 1019 53 view .LVU459
 1439 0050 4FEA4C11 		lsl	r1, ip, #5
 1440 0054 B1EB0C00 		subs	r0, r1, ip
 1441 0058 6EEB0E0E 		sbc	lr, lr, lr
 1442 005c 4FEA8E13 		lsl	r3, lr, #6
 1443 0060 43EA9063 		orr	r3, r3, r0, lsr #26
 1444 0064 8101     		lsls	r1, r0, #6
 1445 0066 091A     		subs	r1, r1, r0
 1446 0068 63EB0E03 		sbc	r3, r3, lr
 1447 006c DB00     		lsls	r3, r3, #3
 1448 006e 43EA5173 		orr	r3, r3, r1, lsr #29
 1449 0072 C900     		lsls	r1, r1, #3
 1450 0074 11EB0C0C 		adds	ip, r1, ip
 1451 0078 43F10003 		adc	r3, r3, #0
 1452 007c 9902     		lsls	r1, r3, #10
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1453              		.loc 1 1019 130 view .LVU460
 1454 007e 0023     		movs	r3, #0
 1455 0080 4FEA8C20 		lsl	r0, ip, #10
 1456 0084 41EA9C51 		orr	r1, r1, ip, lsr #22
 1457 0088 FFF7FEFF 		bl	__aeabi_uldivmod
 1458              	.LVL109:
1019:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1459              		.loc 1 1019 130 view .LVU461
 1460 008c D3E7     		b	.L126
 1461              	.LVL110:
 1462              	.L127:
1003:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       break;
 1463              		.loc 1 1003 20 view .LVU462
 1464 008e 0348     		ldr	r0, .L130+4
 1465 0090 00E0     		b	.L123
 1466              	.L128:
 994:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1467              		.loc 1 994 3 view .LVU463
 1468 0092 0348     		ldr	r0, .L130+8
 1469              	.LVL111:
1025:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
1026:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     default:
1027:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
1028:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1029:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       break;
1030:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 66


1031:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1032:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   return sysclockfreq;
 1470              		.loc 1 1032 3 is_stmt 1 view .LVU464
 1471              	.L123:
1033:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1472              		.loc 1 1033 1 is_stmt 0 view .LVU465
 1473 0094 08BD     		pop	{r3, pc}
 1474              	.L131:
 1475 0096 00BF     		.align	2
 1476              	.L130:
 1477 0098 00380240 		.word	1073887232
 1478 009c 40787D01 		.word	25000000
 1479 00a0 0024F400 		.word	16000000
 1480              		.cfi_endproc
 1481              	.LFE78:
 1483              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1484              		.align	1
 1485              		.global	HAL_RCC_ClockConfig
 1486              		.syntax unified
 1487              		.thumb
 1488              		.thumb_func
 1490              	HAL_RCC_ClockConfig:
 1491              	.LVL112:
 1492              	.LFB74:
 710:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t tickstart;
 1493              		.loc 1 710 1 is_stmt 1 view -0
 1494              		.cfi_startproc
 1495              		@ args = 0, pretend = 0, frame = 0
 1496              		@ frame_needed = 0, uses_anonymous_args = 0
 711:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1497              		.loc 1 711 3 view .LVU467
 714:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1498              		.loc 1 714 3 view .LVU468
 714:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1499              		.loc 1 714 5 is_stmt 0 view .LVU469
 1500 0000 0028     		cmp	r0, #0
 1501 0002 00F0A080 		beq	.L147
 710:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   uint32_t tickstart;
 1502              		.loc 1 710 1 view .LVU470
 1503 0006 70B5     		push	{r4, r5, r6, lr}
 1504              	.LCFI12:
 1505              		.cfi_def_cfa_offset 16
 1506              		.cfi_offset 4, -16
 1507              		.cfi_offset 5, -12
 1508              		.cfi_offset 6, -8
 1509              		.cfi_offset 14, -4
 1510 0008 0D46     		mov	r5, r1
 1511 000a 0446     		mov	r4, r0
 720:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1512              		.loc 1 720 3 is_stmt 1 view .LVU471
 721:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1513              		.loc 1 721 3 view .LVU472
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1514              		.loc 1 728 3 view .LVU473
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1515              		.loc 1 728 17 is_stmt 0 view .LVU474
 1516 000c 524B     		ldr	r3, .L160
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 67


 1517 000e 1B68     		ldr	r3, [r3]
 1518 0010 03F00F03 		and	r3, r3, #15
 728:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1519              		.loc 1 728 5 view .LVU475
 1520 0014 8B42     		cmp	r3, r1
 1521 0016 08D2     		bcs	.L134
 731:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1522              		.loc 1 731 5 is_stmt 1 view .LVU476
 1523 0018 CBB2     		uxtb	r3, r1
 1524 001a 4F4A     		ldr	r2, .L160
 1525 001c 1370     		strb	r3, [r2]
 735:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1526              		.loc 1 735 5 view .LVU477
 735:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1527              		.loc 1 735 8 is_stmt 0 view .LVU478
 1528 001e 1368     		ldr	r3, [r2]
 1529 0020 03F00F03 		and	r3, r3, #15
 735:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1530              		.loc 1 735 7 view .LVU479
 1531 0024 8B42     		cmp	r3, r1
 1532 0026 40F09080 		bne	.L148
 1533              	.L134:
 742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1534              		.loc 1 742 3 is_stmt 1 view .LVU480
 742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1535              		.loc 1 742 25 is_stmt 0 view .LVU481
 1536 002a 2368     		ldr	r3, [r4]
 742:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1537              		.loc 1 742 5 view .LVU482
 1538 002c 13F0020F 		tst	r3, #2
 1539 0030 17D0     		beq	.L135
 746:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1540              		.loc 1 746 5 is_stmt 1 view .LVU483
 746:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1541              		.loc 1 746 7 is_stmt 0 view .LVU484
 1542 0032 13F0040F 		tst	r3, #4
 1543 0036 04D0     		beq	.L136
 748:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 1544              		.loc 1 748 7 is_stmt 1 view .LVU485
 1545 0038 484A     		ldr	r2, .L160+4
 1546 003a 9368     		ldr	r3, [r2, #8]
 1547 003c 43F4E053 		orr	r3, r3, #7168
 1548 0040 9360     		str	r3, [r2, #8]
 1549              	.L136:
 751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1550              		.loc 1 751 5 view .LVU486
 751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1551              		.loc 1 751 27 is_stmt 0 view .LVU487
 1552 0042 2368     		ldr	r3, [r4]
 751:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1553              		.loc 1 751 7 view .LVU488
 1554 0044 13F0080F 		tst	r3, #8
 1555 0048 04D0     		beq	.L137
 753:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 1556              		.loc 1 753 7 is_stmt 1 view .LVU489
 1557 004a 444A     		ldr	r2, .L160+4
 1558 004c 9368     		ldr	r3, [r2, #8]
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 68


 1559 004e 43F46043 		orr	r3, r3, #57344
 1560 0052 9360     		str	r3, [r2, #8]
 1561              	.L137:
 757:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1562              		.loc 1 757 5 view .LVU490
 758:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1563              		.loc 1 758 5 view .LVU491
 1564 0054 414A     		ldr	r2, .L160+4
 1565 0056 9368     		ldr	r3, [r2, #8]
 1566 0058 23F0F003 		bic	r3, r3, #240
 1567 005c A168     		ldr	r1, [r4, #8]
 1568              	.LVL113:
 758:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1569              		.loc 1 758 5 is_stmt 0 view .LVU492
 1570 005e 0B43     		orrs	r3, r3, r1
 1571 0060 9360     		str	r3, [r2, #8]
 1572              	.L135:
 762:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1573              		.loc 1 762 3 is_stmt 1 view .LVU493
 762:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1574              		.loc 1 762 25 is_stmt 0 view .LVU494
 1575 0062 2368     		ldr	r3, [r4]
 762:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1576              		.loc 1 762 5 view .LVU495
 1577 0064 13F0010F 		tst	r3, #1
 1578 0068 31D0     		beq	.L138
 764:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1579              		.loc 1 764 5 is_stmt 1 view .LVU496
 767:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1580              		.loc 1 767 5 view .LVU497
 767:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1581              		.loc 1 767 25 is_stmt 0 view .LVU498
 1582 006a 6368     		ldr	r3, [r4, #4]
 767:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1583              		.loc 1 767 7 view .LVU499
 1584 006c 012B     		cmp	r3, #1
 1585 006e 20D0     		beq	.L158
 776:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1586              		.loc 1 776 10 is_stmt 1 view .LVU500
 776:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1587              		.loc 1 776 12 is_stmt 0 view .LVU501
 1588 0070 022B     		cmp	r3, #2
 1589 0072 25D0     		beq	.L159
 788:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1590              		.loc 1 788 7 is_stmt 1 view .LVU502
 788:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1591              		.loc 1 788 10 is_stmt 0 view .LVU503
 1592 0074 394A     		ldr	r2, .L160+4
 1593 0076 1268     		ldr	r2, [r2]
 788:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1594              		.loc 1 788 9 view .LVU504
 1595 0078 12F0020F 		tst	r2, #2
 1596 007c 67D0     		beq	.L151
 1597              	.L140:
 794:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1598              		.loc 1 794 5 is_stmt 1 view .LVU505
 1599 007e 3749     		ldr	r1, .L160+4
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 69


 1600 0080 8A68     		ldr	r2, [r1, #8]
 1601 0082 22F00302 		bic	r2, r2, #3
 1602 0086 1343     		orrs	r3, r3, r2
 1603 0088 8B60     		str	r3, [r1, #8]
 797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1604              		.loc 1 797 5 view .LVU506
 797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1605              		.loc 1 797 17 is_stmt 0 view .LVU507
 1606 008a FFF7FEFF 		bl	HAL_GetTick
 1607              	.LVL114:
 797:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1608              		.loc 1 797 17 view .LVU508
 1609 008e 0646     		mov	r6, r0
 1610              	.LVL115:
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1611              		.loc 1 799 5 is_stmt 1 view .LVU509
 1612              	.L142:
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1613              		.loc 1 799 11 view .LVU510
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1614              		.loc 1 799 12 is_stmt 0 view .LVU511
 1615 0090 324B     		ldr	r3, .L160+4
 1616 0092 9B68     		ldr	r3, [r3, #8]
 1617 0094 03F00C03 		and	r3, r3, #12
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1618              		.loc 1 799 63 view .LVU512
 1619 0098 6268     		ldr	r2, [r4, #4]
 799:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1620              		.loc 1 799 11 view .LVU513
 1621 009a B3EB820F 		cmp	r3, r2, lsl #2
 1622 009e 16D0     		beq	.L138
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1623              		.loc 1 801 7 is_stmt 1 view .LVU514
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1624              		.loc 1 801 12 is_stmt 0 view .LVU515
 1625 00a0 FFF7FEFF 		bl	HAL_GetTick
 1626              	.LVL116:
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1627              		.loc 1 801 26 view .LVU516
 1628 00a4 801B     		subs	r0, r0, r6
 801:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1629              		.loc 1 801 10 view .LVU517
 1630 00a6 41F28833 		movw	r3, #5000
 1631 00aa 9842     		cmp	r0, r3
 1632 00ac F0D9     		bls	.L142
 803:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1633              		.loc 1 803 16 view .LVU518
 1634 00ae 0320     		movs	r0, #3
 1635 00b0 48E0     		b	.L133
 1636              	.LVL117:
 1637              	.L158:
 770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1638              		.loc 1 770 7 is_stmt 1 view .LVU519
 770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1639              		.loc 1 770 10 is_stmt 0 view .LVU520
 1640 00b2 2A4A     		ldr	r2, .L160+4
 1641 00b4 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 70


 770:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1642              		.loc 1 770 9 view .LVU521
 1643 00b6 12F4003F 		tst	r2, #131072
 1644 00ba E0D1     		bne	.L140
 772:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1645              		.loc 1 772 16 view .LVU522
 1646 00bc 0120     		movs	r0, #1
 1647              	.LVL118:
 772:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1648              		.loc 1 772 16 view .LVU523
 1649 00be 41E0     		b	.L133
 1650              	.LVL119:
 1651              	.L159:
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1652              		.loc 1 779 7 is_stmt 1 view .LVU524
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1653              		.loc 1 779 10 is_stmt 0 view .LVU525
 1654 00c0 264A     		ldr	r2, .L160+4
 1655 00c2 1268     		ldr	r2, [r2]
 779:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       {
 1656              		.loc 1 779 9 view .LVU526
 1657 00c4 12F0007F 		tst	r2, #33554432
 1658 00c8 D9D1     		bne	.L140
 781:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1659              		.loc 1 781 16 view .LVU527
 1660 00ca 0120     		movs	r0, #1
 1661              	.LVL120:
 781:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1662              		.loc 1 781 16 view .LVU528
 1663 00cc 3AE0     		b	.L133
 1664              	.L138:
 809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1665              		.loc 1 809 3 is_stmt 1 view .LVU529
 809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1666              		.loc 1 809 17 is_stmt 0 view .LVU530
 1667 00ce 224B     		ldr	r3, .L160
 1668 00d0 1B68     		ldr	r3, [r3]
 1669 00d2 03F00F03 		and	r3, r3, #15
 809:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1670              		.loc 1 809 5 view .LVU531
 1671 00d6 AB42     		cmp	r3, r5
 1672 00d8 07D9     		bls	.L144
 812:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1673              		.loc 1 812 5 is_stmt 1 view .LVU532
 1674 00da EAB2     		uxtb	r2, r5
 1675 00dc 1E4B     		ldr	r3, .L160
 1676 00de 1A70     		strb	r2, [r3]
 816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1677              		.loc 1 816 5 view .LVU533
 816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1678              		.loc 1 816 8 is_stmt 0 view .LVU534
 1679 00e0 1B68     		ldr	r3, [r3]
 1680 00e2 03F00F03 		and	r3, r3, #15
 816:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     {
 1681              		.loc 1 816 7 view .LVU535
 1682 00e6 AB42     		cmp	r3, r5
 1683 00e8 33D1     		bne	.L153
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 71


 1684              	.L144:
 823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1685              		.loc 1 823 3 is_stmt 1 view .LVU536
 823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1686              		.loc 1 823 25 is_stmt 0 view .LVU537
 1687 00ea 2368     		ldr	r3, [r4]
 823:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1688              		.loc 1 823 5 view .LVU538
 1689 00ec 13F0040F 		tst	r3, #4
 1690 00f0 06D0     		beq	.L145
 825:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1691              		.loc 1 825 5 is_stmt 1 view .LVU539
 826:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1692              		.loc 1 826 5 view .LVU540
 1693 00f2 1A4A     		ldr	r2, .L160+4
 1694 00f4 9368     		ldr	r3, [r2, #8]
 1695 00f6 23F4E053 		bic	r3, r3, #7168
 1696 00fa E168     		ldr	r1, [r4, #12]
 1697 00fc 0B43     		orrs	r3, r3, r1
 1698 00fe 9360     		str	r3, [r2, #8]
 1699              	.L145:
 830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1700              		.loc 1 830 3 view .LVU541
 830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1701              		.loc 1 830 25 is_stmt 0 view .LVU542
 1702 0100 2368     		ldr	r3, [r4]
 830:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 1703              		.loc 1 830 5 view .LVU543
 1704 0102 13F0080F 		tst	r3, #8
 1705 0106 07D0     		beq	.L146
 832:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1706              		.loc 1 832 5 is_stmt 1 view .LVU544
 833:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1707              		.loc 1 833 5 view .LVU545
 1708 0108 144A     		ldr	r2, .L160+4
 1709 010a 9368     		ldr	r3, [r2, #8]
 1710 010c 23F46043 		bic	r3, r3, #57344
 1711 0110 2169     		ldr	r1, [r4, #16]
 1712 0112 43EAC103 		orr	r3, r3, r1, lsl #3
 1713 0116 9360     		str	r3, [r2, #8]
 1714              	.L146:
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1715              		.loc 1 837 3 view .LVU546
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1716              		.loc 1 837 21 is_stmt 0 view .LVU547
 1717 0118 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1718              	.LVL121:
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1719              		.loc 1 837 68 view .LVU548
 1720 011c 0F4B     		ldr	r3, .L160+4
 1721 011e 9B68     		ldr	r3, [r3, #8]
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1722              		.loc 1 837 75 view .LVU549
 1723 0120 03F0F003 		and	r3, r3, #240
 1724              	.LVL122:
 1725              	.LBB34:
 1726              	.LBI34:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 72


 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1727              		.loc 2 981 31 is_stmt 1 view .LVU550
 1728              	.LBB35:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1729              		.loc 2 983 3 view .LVU551
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1730              		.loc 2 988 4 view .LVU552
 1731 0124 F022     		movs	r2, #240
 1732              		.syntax unified
 1733              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1734 0126 92FAA2F2 		rbit r2, r2
 1735              	@ 0 "" 2
 1736              	.LVL123:
 1737              		.loc 2 1001 3 view .LVU553
 1738              		.loc 2 1001 3 is_stmt 0 view .LVU554
 1739              		.thumb
 1740              		.syntax unified
 1741              	.LBE35:
 1742              	.LBE34:
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1743              		.loc 1 837 91 view .LVU555
 1744 012a B2FA82F2 		clz	r2, r2
 1745 012e D340     		lsrs	r3, r3, r2
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1746              		.loc 1 837 63 view .LVU556
 1747 0130 0B4A     		ldr	r2, .L160+8
 1748 0132 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1749              		.loc 1 837 47 view .LVU557
 1750 0134 D840     		lsrs	r0, r0, r3
 837:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1751              		.loc 1 837 19 view .LVU558
 1752 0136 0B4B     		ldr	r3, .L160+12
 1753 0138 1860     		str	r0, [r3]
 840:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1754              		.loc 1 840 3 is_stmt 1 view .LVU559
 1755 013a 0B4B     		ldr	r3, .L160+16
 1756 013c 1868     		ldr	r0, [r3]
 1757 013e FFF7FEFF 		bl	HAL_InitTick
 1758              	.LVL124:
 842:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1759              		.loc 1 842 3 view .LVU560
 842:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1760              		.loc 1 842 10 is_stmt 0 view .LVU561
 1761 0142 0020     		movs	r0, #0
 1762              	.L133:
 843:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1763              		.loc 1 843 1 view .LVU562
 1764 0144 70BD     		pop	{r4, r5, r6, pc}
 1765              	.LVL125:
 1766              	.L147:
 1767              	.LCFI13:
 1768              		.cfi_def_cfa_offset 0
 1769              		.cfi_restore 4
 1770              		.cfi_restore 5
 1771              		.cfi_restore 6
 1772              		.cfi_restore 14
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 73


 716:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 1773              		.loc 1 716 12 view .LVU563
 1774 0146 0120     		movs	r0, #1
 1775              	.LVL126:
 843:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 1776              		.loc 1 843 1 view .LVU564
 1777 0148 7047     		bx	lr
 1778              	.LVL127:
 1779              	.L148:
 1780              	.LCFI14:
 1781              		.cfi_def_cfa_offset 16
 1782              		.cfi_offset 4, -16
 1783              		.cfi_offset 5, -12
 1784              		.cfi_offset 6, -8
 1785              		.cfi_offset 14, -4
 737:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 1786              		.loc 1 737 14 view .LVU565
 1787 014a 0120     		movs	r0, #1
 1788              	.LVL128:
 737:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 1789              		.loc 1 737 14 view .LVU566
 1790 014c FAE7     		b	.L133
 1791              	.LVL129:
 1792              	.L151:
 790:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1793              		.loc 1 790 16 view .LVU567
 1794 014e 0120     		movs	r0, #1
 1795              	.LVL130:
 790:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****       }
 1796              		.loc 1 790 16 view .LVU568
 1797 0150 F8E7     		b	.L133
 1798              	.L153:
 818:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     }
 1799              		.loc 1 818 14 view .LVU569
 1800 0152 0120     		movs	r0, #1
 1801 0154 F6E7     		b	.L133
 1802              	.L161:
 1803 0156 00BF     		.align	2
 1804              	.L160:
 1805 0158 003C0240 		.word	1073888256
 1806 015c 00380240 		.word	1073887232
 1807 0160 00000000 		.word	AHBPrescTable
 1808 0164 00000000 		.word	SystemCoreClock
 1809 0168 00000000 		.word	uwTickPrio
 1810              		.cfi_endproc
 1811              	.LFE74:
 1813              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1814              		.align	1
 1815              		.global	HAL_RCC_GetHCLKFreq
 1816              		.syntax unified
 1817              		.thumb
 1818              		.thumb_func
 1820              	HAL_RCC_GetHCLKFreq:
 1821              	.LFB79:
1034:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1035:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1036:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 74


1037:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1038:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1039:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *
1040:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
1041:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         and updated within this function
1042:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval HCLK frequency
1043:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1044:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1045:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1822              		.loc 1 1045 1 is_stmt 1 view -0
 1823              		.cfi_startproc
 1824              		@ args = 0, pretend = 0, frame = 0
 1825              		@ frame_needed = 0, uses_anonymous_args = 0
 1826              		@ link register save eliminated.
1046:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   return SystemCoreClock;
 1827              		.loc 1 1046 3 view .LVU571
1047:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1828              		.loc 1 1047 1 is_stmt 0 view .LVU572
 1829 0000 014B     		ldr	r3, .L163
 1830 0002 1868     		ldr	r0, [r3]
 1831 0004 7047     		bx	lr
 1832              	.L164:
 1833 0006 00BF     		.align	2
 1834              	.L163:
 1835 0008 00000000 		.word	SystemCoreClock
 1836              		.cfi_endproc
 1837              	.LFE79:
 1839              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1840              		.align	1
 1841              		.global	HAL_RCC_GetPCLK1Freq
 1842              		.syntax unified
 1843              		.thumb
 1844              		.thumb_func
 1846              	HAL_RCC_GetPCLK1Freq:
 1847              	.LFB80:
1048:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1049:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1050:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
1051:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1052:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1053:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval PCLK1 frequency
1054:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1055:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1056:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1848              		.loc 1 1056 1 is_stmt 1 view -0
 1849              		.cfi_startproc
 1850              		@ args = 0, pretend = 0, frame = 0
 1851              		@ frame_needed = 0, uses_anonymous_args = 0
 1852 0000 08B5     		push	{r3, lr}
 1853              	.LCFI15:
 1854              		.cfi_def_cfa_offset 8
 1855              		.cfi_offset 3, -8
 1856              		.cfi_offset 14, -4
1057:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1058:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> POSITION_VAL(RCC_CF
 1857              		.loc 1 1058 3 view .LVU574
 1858              		.loc 1 1058 11 is_stmt 0 view .LVU575
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 75


 1859 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1860              	.LVL131:
 1861              		.loc 1 1058 54 view .LVU576
 1862 0006 074B     		ldr	r3, .L167
 1863 0008 9B68     		ldr	r3, [r3, #8]
 1864              		.loc 1 1058 61 view .LVU577
 1865 000a 03F4E053 		and	r3, r3, #7168
 1866              	.LVL132:
 1867              	.LBB36:
 1868              	.LBI36:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1869              		.loc 2 981 31 is_stmt 1 view .LVU578
 1870              	.LBB37:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1871              		.loc 2 983 3 view .LVU579
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1872              		.loc 2 988 4 view .LVU580
 1873 000e 4FF4E052 		mov	r2, #7168
 1874              		.syntax unified
 1875              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1876 0012 92FAA2F2 		rbit r2, r2
 1877              	@ 0 "" 2
 1878              	.LVL133:
 1879              		.loc 2 1001 3 view .LVU581
 1880              		.loc 2 1001 3 is_stmt 0 view .LVU582
 1881              		.thumb
 1882              		.syntax unified
 1883              	.LBE37:
 1884              	.LBE36:
 1885              		.loc 1 1058 78 view .LVU583
 1886 0016 B2FA82F2 		clz	r2, r2
 1887 001a D340     		lsrs	r3, r3, r2
 1888              		.loc 1 1058 49 view .LVU584
 1889 001c 024A     		ldr	r2, .L167+4
 1890 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1059:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1891              		.loc 1 1059 1 view .LVU585
 1892 0020 D840     		lsrs	r0, r0, r3
 1893 0022 08BD     		pop	{r3, pc}
 1894              	.L168:
 1895              		.align	2
 1896              	.L167:
 1897 0024 00380240 		.word	1073887232
 1898 0028 00000000 		.word	APBPrescTable
 1899              		.cfi_endproc
 1900              	.LFE80:
 1902              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1903              		.align	1
 1904              		.global	HAL_RCC_GetPCLK2Freq
 1905              		.syntax unified
 1906              		.thumb
 1907              		.thumb_func
 1909              	HAL_RCC_GetPCLK2Freq:
 1910              	.LFB81:
1060:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1061:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1062:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 76


1063:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1064:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1065:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval PCLK2 frequency
1066:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1067:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1068:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1911              		.loc 1 1068 1 is_stmt 1 view -0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 0
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 1915 0000 08B5     		push	{r3, lr}
 1916              	.LCFI16:
 1917              		.cfi_def_cfa_offset 8
 1918              		.cfi_offset 3, -8
 1919              		.cfi_offset 14, -4
1069:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1070:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_CFG
 1920              		.loc 1 1070 3 view .LVU587
 1921              		.loc 1 1070 11 is_stmt 0 view .LVU588
 1922 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1923              	.LVL134:
 1924              		.loc 1 1070 53 view .LVU589
 1925 0006 074B     		ldr	r3, .L171
 1926 0008 9B68     		ldr	r3, [r3, #8]
 1927              		.loc 1 1070 60 view .LVU590
 1928 000a 03F46043 		and	r3, r3, #57344
 1929              	.LVL135:
 1930              	.LBB38:
 1931              	.LBI38:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1932              		.loc 2 981 31 is_stmt 1 view .LVU591
 1933              	.LBB39:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1934              		.loc 2 983 3 view .LVU592
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1935              		.loc 2 988 4 view .LVU593
 1936 000e 4FF46042 		mov	r2, #57344
 1937              		.syntax unified
 1938              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1939 0012 92FAA2F2 		rbit r2, r2
 1940              	@ 0 "" 2
 1941              	.LVL136:
 1942              		.loc 2 1001 3 view .LVU594
 1943              		.loc 2 1001 3 is_stmt 0 view .LVU595
 1944              		.thumb
 1945              		.syntax unified
 1946              	.LBE39:
 1947              	.LBE38:
 1948              		.loc 1 1070 77 view .LVU596
 1949 0016 B2FA82F2 		clz	r2, r2
 1950 001a D340     		lsrs	r3, r3, r2
 1951              		.loc 1 1070 48 view .LVU597
 1952 001c 024A     		ldr	r2, .L171+4
 1953 001e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1071:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 1954              		.loc 1 1071 1 view .LVU598
 1955 0020 D840     		lsrs	r0, r0, r3
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 77


 1956 0022 08BD     		pop	{r3, pc}
 1957              	.L172:
 1958              		.align	2
 1959              	.L171:
 1960 0024 00380240 		.word	1073887232
 1961 0028 00000000 		.word	APBPrescTable
 1962              		.cfi_endproc
 1963              	.LFE81:
 1965              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1966              		.align	1
 1967              		.global	HAL_RCC_GetOscConfig
 1968              		.syntax unified
 1969              		.thumb
 1970              		.thumb_func
 1972              	HAL_RCC_GetOscConfig:
 1973              	.LVL137:
 1974              	.LFB82:
1072:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1073:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1074:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
1075:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * RCC configuration registers.
1076:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
1077:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * will be configured.
1078:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
1079:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1080:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1081:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 1975              		.loc 1 1081 1 is_stmt 1 view -0
 1976              		.cfi_startproc
 1977              		@ args = 0, pretend = 0, frame = 0
 1978              		@ frame_needed = 0, uses_anonymous_args = 0
 1979              		@ link register save eliminated.
1082:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1083:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | RCC_OSCILLA
 1980              		.loc 1 1083 3 view .LVU600
 1981              		.loc 1 1083 37 is_stmt 0 view .LVU601
 1982 0000 0F23     		movs	r3, #15
 1983 0002 0360     		str	r3, [r0]
1084:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1085:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1086:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1984              		.loc 1 1086 3 is_stmt 1 view .LVU602
 1985              		.loc 1 1086 10 is_stmt 0 view .LVU603
 1986 0004 3C4B     		ldr	r3, .L186
 1987 0006 1B68     		ldr	r3, [r3]
 1988              		.loc 1 1086 5 view .LVU604
 1989 0008 13F4802F 		tst	r3, #262144
 1990 000c 55D0     		beq	.L174
1087:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1088:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1991              		.loc 1 1088 5 is_stmt 1 view .LVU605
 1992              		.loc 1 1088 33 is_stmt 0 view .LVU606
 1993 000e 0523     		movs	r3, #5
 1994 0010 4360     		str	r3, [r0, #4]
 1995              	.L175:
1089:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1090:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 78


1091:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1092:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1093:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1094:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
1095:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1096:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1097:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1098:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1099:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1996              		.loc 1 1100 3 is_stmt 1 view .LVU607
 1997              		.loc 1 1100 10 is_stmt 0 view .LVU608
 1998 0012 394B     		ldr	r3, .L186
 1999 0014 1B68     		ldr	r3, [r3]
 2000              		.loc 1 1100 5 view .LVU609
 2001 0016 13F0010F 		tst	r3, #1
 2002 001a 59D0     		beq	.L177
1101:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1102:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2003              		.loc 1 1102 5 is_stmt 1 view .LVU610
 2004              		.loc 1 1102 33 is_stmt 0 view .LVU611
 2005 001c 0123     		movs	r3, #1
 2006 001e C360     		str	r3, [r0, #12]
 2007              	.L178:
1103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1104:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
1105:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1107:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1108:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> POSITION_VAL(RCC
 2008              		.loc 1 1109 3 is_stmt 1 view .LVU612
 2009              		.loc 1 1109 59 is_stmt 0 view .LVU613
 2010 0020 3549     		ldr	r1, .L186
 2011 0022 0B68     		ldr	r3, [r1]
 2012              		.loc 1 1109 64 view .LVU614
 2013 0024 03F0F803 		and	r3, r3, #248
 2014              	.LVL138:
 2015              	.LBB40:
 2016              	.LBI40:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2017              		.loc 2 981 31 is_stmt 1 view .LVU615
 2018              	.LBB41:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2019              		.loc 2 983 3 view .LVU616
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2020              		.loc 2 988 4 view .LVU617
 2021 0028 F822     		movs	r2, #248
 2022              		.syntax unified
 2023              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2024 002a 92FAA2F2 		rbit r2, r2
 2025              	@ 0 "" 2
 2026              	.LVL139:
 2027              		.loc 2 1001 3 view .LVU618
 2028              		.loc 2 1001 3 is_stmt 0 view .LVU619
 2029              		.thumb
 2030              		.syntax unified
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 79


 2031              	.LBE41:
 2032              	.LBE40:
 2033              		.loc 1 1109 44 view .LVU620
 2034 002e B2FA82F2 		clz	r2, r2
 2035 0032 D340     		lsrs	r3, r3, r2
 2036              		.loc 1 1109 42 view .LVU621
 2037 0034 0361     		str	r3, [r0, #16]
1110:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1111:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1112:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2038              		.loc 1 1112 3 is_stmt 1 view .LVU622
 2039              		.loc 1 1112 10 is_stmt 0 view .LVU623
 2040 0036 0B6F     		ldr	r3, [r1, #112]
 2041              		.loc 1 1112 5 view .LVU624
 2042 0038 13F0040F 		tst	r3, #4
 2043 003c 4BD0     		beq	.L179
1113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1114:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2044              		.loc 1 1114 5 is_stmt 1 view .LVU625
 2045              		.loc 1 1114 33 is_stmt 0 view .LVU626
 2046 003e 0523     		movs	r3, #5
 2047 0040 8360     		str	r3, [r0, #8]
 2048              	.L180:
1115:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1119:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1120:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
1121:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1123:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1124:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1125:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1126:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2049              		.loc 1 1126 3 is_stmt 1 view .LVU627
 2050              		.loc 1 1126 10 is_stmt 0 view .LVU628
 2051 0042 2D4B     		ldr	r3, .L186
 2052 0044 5B6F     		ldr	r3, [r3, #116]
 2053              		.loc 1 1126 5 view .LVU629
 2054 0046 13F0010F 		tst	r3, #1
 2055 004a 4FD0     		beq	.L182
1127:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2056              		.loc 1 1128 5 is_stmt 1 view .LVU630
 2057              		.loc 1 1128 33 is_stmt 0 view .LVU631
 2058 004c 0123     		movs	r3, #1
 2059 004e 4361     		str	r3, [r0, #20]
 2060              	.L183:
1129:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
1131:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1133:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 80


 2061              		.loc 1 1136 3 is_stmt 1 view .LVU632
 2062              		.loc 1 1136 10 is_stmt 0 view .LVU633
 2063 0050 294B     		ldr	r3, .L186
 2064 0052 1B68     		ldr	r3, [r3]
 2065              		.loc 1 1136 5 view .LVU634
 2066 0054 13F0807F 		tst	r3, #16777216
 2067 0058 4BD0     		beq	.L184
1137:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1138:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2068              		.loc 1 1138 5 is_stmt 1 view .LVU635
 2069              		.loc 1 1138 37 is_stmt 0 view .LVU636
 2070 005a 0223     		movs	r3, #2
 2071 005c 8361     		str	r3, [r0, #24]
 2072              	.L185:
1139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1140:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   else
1141:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
1143:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1144:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 2073              		.loc 1 1144 3 is_stmt 1 view .LVU637
 2074              		.loc 1 1144 52 is_stmt 0 view .LVU638
 2075 005e 264A     		ldr	r2, .L186
 2076 0060 5368     		ldr	r3, [r2, #4]
 2077              		.loc 1 1144 38 view .LVU639
 2078 0062 03F48003 		and	r3, r3, #4194304
 2079              		.loc 1 1144 36 view .LVU640
 2080 0066 C361     		str	r3, [r0, #28]
1145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (uint32_t)(RCC->PLLCFGR & RCC_PLLCFGR_PLLM);
 2081              		.loc 1 1145 3 is_stmt 1 view .LVU641
 2082              		.loc 1 1145 47 is_stmt 0 view .LVU642
 2083 0068 5368     		ldr	r3, [r2, #4]
 2084              		.loc 1 1145 33 view .LVU643
 2085 006a 03F03F03 		and	r3, r3, #63
 2086              		.loc 1 1145 31 view .LVU644
 2087 006e 0362     		str	r3, [r0, #32]
1146:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> POSITION_VAL(RCC_PL
 2088              		.loc 1 1146 3 is_stmt 1 view .LVU645
 2089              		.loc 1 1146 48 is_stmt 0 view .LVU646
 2090 0070 5168     		ldr	r1, [r2, #4]
 2091              		.loc 1 1146 58 view .LVU647
 2092 0072 47F6C073 		movw	r3, #32704
 2093 0076 1940     		ands	r1, r1, r3
 2094              	.LVL140:
 2095              	.LBB42:
 2096              	.LBI42:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2097              		.loc 2 981 31 is_stmt 1 view .LVU648
 2098              	.LBB43:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2099              		.loc 2 983 3 view .LVU649
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2100              		.loc 2 988 4 view .LVU650
 2101              		.syntax unified
 2102              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2103 0078 93FAA3F3 		rbit r3, r3
 2104              	@ 0 "" 2
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 81


 2105              	.LVL141:
 2106              		.loc 2 1001 3 view .LVU651
 2107              		.loc 2 1001 3 is_stmt 0 view .LVU652
 2108              		.thumb
 2109              		.syntax unified
 2110              	.LBE43:
 2111              	.LBE42:
 2112              		.loc 1 1146 33 view .LVU653
 2113 007c B3FA83F3 		clz	r3, r3
 2114 0080 21FA03F3 		lsr	r3, r1, r3
 2115              		.loc 1 1146 31 view .LVU654
 2116 0084 4362     		str	r3, [r0, #36]
1147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = (uint32_t)((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) + RCC_PLLCFGR_PLLP_0
 2117              		.loc 1 1147 3 is_stmt 1 view .LVU655
 2118              		.loc 1 1147 50 is_stmt 0 view .LVU656
 2119 0086 5368     		ldr	r3, [r2, #4]
 2120              		.loc 1 1147 60 view .LVU657
 2121 0088 03F44033 		and	r3, r3, #196608
 2122              		.loc 1 1147 80 view .LVU658
 2123 008c 03F58033 		add	r3, r3, #65536
 2124              		.loc 1 1147 102 view .LVU659
 2125 0090 5B00     		lsls	r3, r3, #1
 2126              	.LVL142:
 2127              	.LBB44:
 2128              	.LBI44:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2129              		.loc 2 981 31 is_stmt 1 view .LVU660
 2130              	.LBB45:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2131              		.loc 2 983 3 view .LVU661
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2132              		.loc 2 988 4 view .LVU662
 2133 0092 4FF44031 		mov	r1, #196608
 2134              		.syntax unified
 2135              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2136 0096 91FAA1F1 		rbit r1, r1
 2137              	@ 0 "" 2
 2138              	.LVL143:
 2139              		.loc 2 1001 3 view .LVU663
 2140              		.loc 2 1001 3 is_stmt 0 view .LVU664
 2141              		.thumb
 2142              		.syntax unified
 2143              	.LBE45:
 2144              	.LBE44:
 2145              		.loc 1 1147 33 view .LVU665
 2146 009a B1FA81F1 		clz	r1, r1
 2147 009e CB40     		lsrs	r3, r3, r1
 2148              		.loc 1 1147 31 view .LVU666
 2149 00a0 8362     		str	r3, [r0, #40]
1148:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (uint32_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLQ) >> POSITION_VAL(RCC_PL
 2150              		.loc 1 1148 3 is_stmt 1 view .LVU667
 2151              		.loc 1 1148 48 is_stmt 0 view .LVU668
 2152 00a2 5368     		ldr	r3, [r2, #4]
 2153              		.loc 1 1148 58 view .LVU669
 2154 00a4 03F07063 		and	r3, r3, #251658240
 2155              	.LVL144:
 2156              	.LBB46:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 82


 2157              	.LBI46:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2158              		.loc 2 981 31 is_stmt 1 view .LVU670
 2159              	.LBB47:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2160              		.loc 2 983 3 view .LVU671
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2161              		.loc 2 988 4 view .LVU672
 2162 00a8 4FF07062 		mov	r2, #251658240
 2163              		.syntax unified
 2164              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2165 00ac 92FAA2F2 		rbit r2, r2
 2166              	@ 0 "" 2
 2167              	.LVL145:
 2168              		.loc 2 1001 3 view .LVU673
 2169              		.loc 2 1001 3 is_stmt 0 view .LVU674
 2170              		.thumb
 2171              		.syntax unified
 2172              	.LBE47:
 2173              	.LBE46:
 2174              		.loc 1 1148 33 view .LVU675
 2175 00b0 B2FA82F2 		clz	r2, r2
 2176 00b4 D340     		lsrs	r3, r3, r2
 2177              		.loc 1 1148 31 view .LVU676
 2178 00b6 C362     		str	r3, [r0, #44]
1149:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 2179              		.loc 1 1149 1 view .LVU677
 2180 00b8 7047     		bx	lr
 2181              	.L174:
1090:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2182              		.loc 1 1090 8 is_stmt 1 view .LVU678
1090:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2183              		.loc 1 1090 15 is_stmt 0 view .LVU679
 2184 00ba 0F4B     		ldr	r3, .L186
 2185 00bc 1B68     		ldr	r3, [r3]
1090:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2186              		.loc 1 1090 10 view .LVU680
 2187 00be 13F4803F 		tst	r3, #65536
 2188 00c2 02D0     		beq	.L176
1092:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2189              		.loc 1 1092 5 is_stmt 1 view .LVU681
1092:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2190              		.loc 1 1092 33 is_stmt 0 view .LVU682
 2191 00c4 0123     		movs	r3, #1
 2192 00c6 4360     		str	r3, [r0, #4]
 2193 00c8 A3E7     		b	.L175
 2194              	.L176:
1096:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2195              		.loc 1 1096 5 is_stmt 1 view .LVU683
1096:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2196              		.loc 1 1096 33 is_stmt 0 view .LVU684
 2197 00ca 0023     		movs	r3, #0
 2198 00cc 4360     		str	r3, [r0, #4]
 2199 00ce A0E7     		b	.L175
 2200              	.L177:
1106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2201              		.loc 1 1106 5 is_stmt 1 view .LVU685
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 83


1106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2202              		.loc 1 1106 33 is_stmt 0 view .LVU686
 2203 00d0 0023     		movs	r3, #0
 2204 00d2 C360     		str	r3, [r0, #12]
 2205 00d4 A4E7     		b	.L178
 2206              	.L179:
1116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2207              		.loc 1 1116 8 is_stmt 1 view .LVU687
1116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2208              		.loc 1 1116 15 is_stmt 0 view .LVU688
 2209 00d6 084B     		ldr	r3, .L186
 2210 00d8 1B6F     		ldr	r3, [r3, #112]
1116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2211              		.loc 1 1116 10 view .LVU689
 2212 00da 13F0010F 		tst	r3, #1
 2213 00de 02D0     		beq	.L181
1118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2214              		.loc 1 1118 5 is_stmt 1 view .LVU690
1118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2215              		.loc 1 1118 33 is_stmt 0 view .LVU691
 2216 00e0 0123     		movs	r3, #1
 2217 00e2 8360     		str	r3, [r0, #8]
 2218 00e4 ADE7     		b	.L180
 2219              	.L181:
1122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2220              		.loc 1 1122 5 is_stmt 1 view .LVU692
1122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2221              		.loc 1 1122 33 is_stmt 0 view .LVU693
 2222 00e6 0023     		movs	r3, #0
 2223 00e8 8360     		str	r3, [r0, #8]
 2224 00ea AAE7     		b	.L180
 2225              	.L182:
1132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2226              		.loc 1 1132 5 is_stmt 1 view .LVU694
1132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2227              		.loc 1 1132 33 is_stmt 0 view .LVU695
 2228 00ec 0023     		movs	r3, #0
 2229 00ee 4361     		str	r3, [r0, #20]
 2230 00f0 AEE7     		b	.L183
 2231              	.L184:
1142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2232              		.loc 1 1142 5 is_stmt 1 view .LVU696
1142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2233              		.loc 1 1142 37 is_stmt 0 view .LVU697
 2234 00f2 0123     		movs	r3, #1
 2235 00f4 8361     		str	r3, [r0, #24]
 2236 00f6 B2E7     		b	.L185
 2237              	.L187:
 2238              		.align	2
 2239              	.L186:
 2240 00f8 00380240 		.word	1073887232
 2241              		.cfi_endproc
 2242              	.LFE82:
 2244              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2245              		.align	1
 2246              		.global	HAL_RCC_GetClockConfig
 2247              		.syntax unified
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 84


 2248              		.thumb
 2249              		.thumb_func
 2251              	HAL_RCC_GetClockConfig:
 2252              	.LVL146:
 2253              	.LFB83:
1150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1151:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  Configures the RCC_ClkInitStruct according to the internal
1153:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * RCC configuration registers.
1154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * will be configured.
1156:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
1158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1159:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1160:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 2254              		.loc 1 1160 1 is_stmt 1 view -0
 2255              		.cfi_startproc
 2256              		@ args = 0, pretend = 0, frame = 0
 2257              		@ frame_needed = 0, uses_anonymous_args = 0
 2258              		@ link register save eliminated.
1161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1162:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2259              		.loc 1 1162 3 view .LVU699
 2260              		.loc 1 1162 32 is_stmt 0 view .LVU700
 2261 0000 0F23     		movs	r3, #15
 2262 0002 0360     		str	r3, [r0]
1163:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1164:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1165:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2263              		.loc 1 1165 3 is_stmt 1 view .LVU701
 2264              		.loc 1 1165 51 is_stmt 0 view .LVU702
 2265 0004 0B4B     		ldr	r3, .L189
 2266 0006 9A68     		ldr	r2, [r3, #8]
 2267              		.loc 1 1165 37 view .LVU703
 2268 0008 02F00302 		and	r2, r2, #3
 2269              		.loc 1 1165 35 view .LVU704
 2270 000c 4260     		str	r2, [r0, #4]
1166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1168:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 2271              		.loc 1 1168 3 is_stmt 1 view .LVU705
 2272              		.loc 1 1168 52 is_stmt 0 view .LVU706
 2273 000e 9A68     		ldr	r2, [r3, #8]
 2274              		.loc 1 1168 38 view .LVU707
 2275 0010 02F0F002 		and	r2, r2, #240
 2276              		.loc 1 1168 36 view .LVU708
 2277 0014 8260     		str	r2, [r0, #8]
1169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1170:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2278              		.loc 1 1171 3 is_stmt 1 view .LVU709
 2279              		.loc 1 1171 53 is_stmt 0 view .LVU710
 2280 0016 9A68     		ldr	r2, [r3, #8]
 2281              		.loc 1 1171 39 view .LVU711
 2282 0018 02F4E052 		and	r2, r2, #7168
 2283              		.loc 1 1171 37 view .LVU712
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 85


 2284 001c C260     		str	r2, [r0, #12]
1172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2285              		.loc 1 1174 3 is_stmt 1 view .LVU713
 2286              		.loc 1 1174 54 is_stmt 0 view .LVU714
 2287 001e 9B68     		ldr	r3, [r3, #8]
 2288              		.loc 1 1174 39 view .LVU715
 2289 0020 DB08     		lsrs	r3, r3, #3
 2290 0022 03F4E053 		and	r3, r3, #7168
 2291              		.loc 1 1174 37 view .LVU716
 2292 0026 0361     		str	r3, [r0, #16]
1175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2293              		.loc 1 1177 3 is_stmt 1 view .LVU717
 2294              		.loc 1 1177 32 is_stmt 0 view .LVU718
 2295 0028 034B     		ldr	r3, .L189+4
 2296 002a 1B68     		ldr	r3, [r3]
 2297              		.loc 1 1177 16 view .LVU719
 2298 002c 03F00F03 		and	r3, r3, #15
 2299              		.loc 1 1177 14 view .LVU720
 2300 0030 0B60     		str	r3, [r1]
1178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 2301              		.loc 1 1178 1 view .LVU721
 2302 0032 7047     		bx	lr
 2303              	.L190:
 2304              		.align	2
 2305              	.L189:
 2306 0034 00380240 		.word	1073887232
 2307 0038 003C0240 		.word	1073888256
 2308              		.cfi_endproc
 2309              	.LFE83:
 2311              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2312              		.align	1
 2313              		.weak	HAL_RCC_CSSCallback
 2314              		.syntax unified
 2315              		.thumb
 2316              		.thumb_func
 2318              	HAL_RCC_CSSCallback:
 2319              	.LFB85:
1179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1180:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
1184:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1185:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
1187:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1189:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
1190:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 86


1195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
1196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
1197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
1198:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** /**
1199:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1200:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   * @retval None
1201:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   */
1202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1203:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** {
 2320              		.loc 1 1203 1 is_stmt 1 view -0
 2321              		.cfi_startproc
 2322              		@ args = 0, pretend = 0, frame = 0
 2323              		@ frame_needed = 0, uses_anonymous_args = 0
 2324              		@ link register save eliminated.
1204:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****             the HAL_RCC_CSSCallback could be implemented in the user file
1206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****    */
1207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** }
 2325              		.loc 1 1207 1 view .LVU723
 2326 0000 7047     		bx	lr
 2327              		.cfi_endproc
 2328              	.LFE85:
 2330              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2331              		.align	1
 2332              		.global	HAL_RCC_NMI_IRQHandler
 2333              		.syntax unified
 2334              		.thumb
 2335              		.thumb_func
 2337              	HAL_RCC_NMI_IRQHandler:
 2338              	.LFB84:
1186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2339              		.loc 1 1186 1 view -0
 2340              		.cfi_startproc
 2341              		@ args = 0, pretend = 0, frame = 0
 2342              		@ frame_needed = 0, uses_anonymous_args = 0
 2343 0000 08B5     		push	{r3, lr}
 2344              	.LCFI17:
 2345              		.cfi_def_cfa_offset 8
 2346              		.cfi_offset 3, -8
 2347              		.cfi_offset 14, -4
1188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2348              		.loc 1 1188 3 view .LVU725
1188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2349              		.loc 1 1188 6 is_stmt 0 view .LVU726
 2350 0002 064B     		ldr	r3, .L196
 2351 0004 DB68     		ldr	r3, [r3, #12]
1188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   {
 2352              		.loc 1 1188 5 view .LVU727
 2353 0006 13F0800F 		tst	r3, #128
 2354 000a 00D1     		bne	.L195
 2355              	.L192:
1196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 2356              		.loc 1 1196 1 view .LVU728
 2357 000c 08BD     		pop	{r3, pc}
 2358              	.L195:
1191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 2359              		.loc 1 1191 5 is_stmt 1 view .LVU729
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 87


 2360 000e FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2361              	.LVL147:
1194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c ****   }
 2362              		.loc 1 1194 5 view .LVU730
 2363 0012 024B     		ldr	r3, .L196
 2364 0014 8022     		movs	r2, #128
 2365 0016 9A73     		strb	r2, [r3, #14]
1196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_rcc.c **** 
 2366              		.loc 1 1196 1 is_stmt 0 view .LVU731
 2367 0018 F8E7     		b	.L192
 2368              	.L197:
 2369 001a 00BF     		.align	2
 2370              	.L196:
 2371 001c 00380240 		.word	1073887232
 2372              		.cfi_endproc
 2373              	.LFE84:
 2375              		.text
 2376              	.Letext0:
 2377              		.file 3 "c:\\toolchain\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_
 2378              		.file 4 "c:\\toolchain\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 2379              		.file 5 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/system_stm32f2xx.h"
 2380              		.file 6 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f207xx.h"
 2381              		.file 7 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f2xx.h"
 2382              		.file 8 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_def.h"
 2383              		.file 9 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_rcc.h"
 2384              		.file 10 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_gpio.h"
 2385              		.file 11 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal.h"
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s 			page 88


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_hal_rcc.c
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:18     .text.HAL_RCC_DeInit:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:24     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:254    .text.HAL_RCC_DeInit:00000100 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:264    .text.HAL_RCC_OscConfig:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:270    .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:827    .text.HAL_RCC_OscConfig:00000264 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:833    .text.HAL_RCC_OscConfig:00000270 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1122   .text.HAL_RCC_OscConfig:000003a8 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1129   .text.HAL_RCC_MCOConfig:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1135   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1291   .text.HAL_RCC_MCOConfig:00000090 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1298   .text.HAL_RCC_EnableCSS:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1304   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1321   .text.HAL_RCC_EnableCSS:00000008 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1326   .text.HAL_RCC_DisableCSS:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1332   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1349   .text.HAL_RCC_DisableCSS:00000008 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1355   .text.HAL_RCC_GetSysClockFreq:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1361   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1477   .text.HAL_RCC_GetSysClockFreq:00000098 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1484   .text.HAL_RCC_ClockConfig:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1490   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1805   .text.HAL_RCC_ClockConfig:00000158 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1814   .text.HAL_RCC_GetHCLKFreq:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1820   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1835   .text.HAL_RCC_GetHCLKFreq:00000008 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1840   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1846   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1897   .text.HAL_RCC_GetPCLK1Freq:00000024 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1903   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1909   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1960   .text.HAL_RCC_GetPCLK2Freq:00000024 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1966   .text.HAL_RCC_GetOscConfig:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:1972   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:2240   .text.HAL_RCC_GetOscConfig:000000f8 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:2245   .text.HAL_RCC_GetClockConfig:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:2251   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:2306   .text.HAL_RCC_GetClockConfig:00000034 $d
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:2312   .text.HAL_RCC_CSSCallback:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:2318   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:2331   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:2337   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
C:\Users\Artem\AppData\Local\Temp\ccmbcid1.s:2371   .text.HAL_RCC_NMI_IRQHandler:0000001c $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
HAL_GPIO_Init
__aeabi_uldivmod
AHBPrescTable
APBPrescTable
