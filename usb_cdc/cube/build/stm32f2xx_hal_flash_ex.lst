ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f2xx_hal_flash_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FLASH_MassErase,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	FLASH_MassErase:
  24              	.LVL0:
  25              	.LFB78:
  26              		.file 1 "Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c"
   1:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
   2:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   ******************************************************************************
   3:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @file    stm32f2xx_hal_flash_ex.c
   4:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief   Extended FLASH HAL module driver.
   6:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          functionalities of the FLASH extension peripheral:
   8:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *           + Extended programming operations functions
   9:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *  
  10:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   @verbatim
  11:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   ==============================================================================
  12:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                    ##### Flash Extension features #####
  13:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   ==============================================================================
  14:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            
  15:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                       ##### How to use this driver #####
  16:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   ==============================================================================
  17:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   [..] This driver provides functions to configure and program the FLASH memory 
  18:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****        of all STM32F2xx devices. It includes
  19:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       (#) FLASH Memory Erase functions: 
  20:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and 
  21:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                 HAL_FLASH_Lock() functions
  22:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) Erase function: Erase sector, erase all sectors
  23:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) There are two modes of erase :
  24:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****              (+++) Polling Mode using HAL_FLASHEx_Erase()
  25:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****              (+++) Interrupt Mode using HAL_FLASHEx_Erase_IT()
  26:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****              
  27:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       (#) Option Bytes Programming functions: Use HAL_FLASHEx_OBProgram() to :
  28:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) Set/Reset the write protection
  29:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) Set the Read protection Level
  30:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) Set the BOR level
  31:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****            (++) Program the user Option Bytes
  32:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 2


  33:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   @endverbatim
  34:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   ******************************************************************************
  35:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @attention
  36:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
  37:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  38:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * All rights reserved.</center></h2>
  39:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
  40:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  41:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * the "License"; You may not use this file except in compliance with the
  42:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * License. You may obtain a copy of the License at:
  43:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  44:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
  45:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   ******************************************************************************
  46:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  47:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  48:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Includes ------------------------------------------------------------------*/
  49:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** #include "stm32f2xx_hal.h"
  50:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  51:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @addtogroup STM32F2xx_HAL_Driver
  52:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
  53:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  54:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  55:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @defgroup FLASHEx FLASHEx
  56:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief FLASH HAL Extension module driver
  57:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
  58:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  59:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  60:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  61:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  62:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Private typedef -----------------------------------------------------------*/
  63:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Private define ------------------------------------------------------------*/
  64:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Constants
  65:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
  66:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  67:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** #define FLASH_TIMEOUT_VALUE       50000U   /* 50 s */
  68:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
  69:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @}
  70:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  71:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
  72:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Private macro -------------------------------------------------------------*/
  73:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Private variables ---------------------------------------------------------*/
  74:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Variables
  75:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
  76:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */    
  77:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** extern FLASH_ProcessTypeDef pFlash;
  78:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
  79:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @}
  80:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  81:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  82:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Private function prototypes -----------------------------------------------*/
  83:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Functions
  84:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
  85:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
  86:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Option bytes control */
  87:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static void               FLASH_MassErase(uint8_t VoltageRange, uint32_t Banks);
  88:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_EnableWRP(uint32_t WRPSector, uint32_t Banks);
  89:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_DisableWRP(uint32_t WRPSector, uint32_t Banks);
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 3


  90:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_RDP_LevelConfig(uint8_t Level);
  91:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_UserConfig(uint8_t Iwdg, uint8_t Stop, uint8_t Stdby);
  92:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_BOR_LevelConfig(uint8_t Level);
  93:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetUser(void);
  94:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint16_t           FLASH_OB_GetWRP(void);
  95:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetRDP(void);
  96:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetBOR(void);
  97:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
  98:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** extern HAL_StatusTypeDef         FLASH_WaitForLastOperation(uint32_t Timeout);
  99:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 100:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @}
 101:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 102:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 103:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /* Exported functions --------------------------------------------------------*/
 104:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions FLASH Exported Functions
 105:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
 106:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 107:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 108:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group1 Extended IO operation functions
 109:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *  @brief   Extended IO operation functions 
 110:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
 111:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** @verbatim   
 112:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****  ===============================================================================
 113:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                 ##### Extended programming operation functions #####
 114:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****  ===============================================================================  
 115:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     [..]
 116:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     This subsection provides a set of functions allowing to manage the Extension FLASH 
 117:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     programming operations.
 118:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 119:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** @endverbatim
 120:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @{
 121:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 122:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 123:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory sectors 
 124:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param[in]  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 125:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 126:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 127:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param[out]  SectorError pointer to variable  that
 128:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         contains the configuration information on faulty sector in case of error 
 129:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         (0xFFFFFFFF means that all the sectors have been correctly erased)
 130:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 131:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status
 132:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 133:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *SectorError)
 134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint32_t index = 0U;
 137:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 138:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Process Locked */
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 140:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 141:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 143:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 144:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 146:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 4


 147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(status == HAL_OK)
 148:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 149:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /*Initialization of SectorError variable*/
 150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     *SectorError = 0xFFFFFFFFU;
 151:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     if(pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 153:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 154:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /*Mass erase to be done*/
 155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 156:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 157:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 159:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       
 160:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /* if the erase operation is completed, disable the MER Bit */
 161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       FLASH->CR &= (~FLASH_MER_BIT);
 162:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 163:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     else
 164:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 165:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /* Check the parameters */
 166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       assert_param(IS_FLASH_NBSECTORS(pEraseInit->NbSectors + pEraseInit->Sector));
 167:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 168:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /* Erase by sector by sector to be done*/
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       for(index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++
 170:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 172:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 173:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 175:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         
 176:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         /* If the erase operation is completed, disable the SER and SNB Bits */
 177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 178:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         if(status != HAL_OK) 
 180:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         {
 181:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****           /* In case of error, stop erase procedure and return the faulty sector*/
 182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****           *SectorError = index;
 183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****           break;
 184:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         }
 185:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       }
 186:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 187:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Flush the caches to be sure of the data consistency */
 188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     FLASH_FlushCaches();    
 189:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 190:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 191:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Process Unlocked */
 192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 193:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status;
 195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 196:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 197:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 198:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory sectors  with interrupt enable
 199:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 200:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 201:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 202:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status
 203:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 5


 204:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase_IT(FLASH_EraseInitTypeDef *pEraseInit)
 205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 207:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 208:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Process Locked */
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 210:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 211:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 212:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 213:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 214:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Enable End of FLASH Operation interrupt */
 215:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP);
 216:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 217:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Enable Error source interrupt */
 218:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_ERR);
 219:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 220:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Clear pending flags (if any) */  
 221:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP    | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR |\
 222:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                          FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR| FLASH_FLAG_PGSERR);  
 223:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 225:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 226:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /*Mass erase to be done*/
 227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_MASSERASE;
 228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Bank = pEraseInit->Banks;
 229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 230:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 231:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   else
 232:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 233:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Erase by sector to be done*/
 234:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 235:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Check the parameters */
 236:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     assert_param(IS_FLASH_NBSECTORS(pEraseInit->NbSectors + pEraseInit->Sector));
 237:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_SECTERASE;
 239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.NbSectorsToErase = pEraseInit->NbSectors;
 240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 242:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 243:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /*Erase 1st sector and wait for IT*/
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     FLASH_Erase_Sector(pEraseInit->Sector, pEraseInit->VoltageRange);
 245:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 246:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status;
 248:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 249:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 250:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 251:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief   Program option bytes
 252:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 253:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 254:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 255:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status
 256:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 257:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBProgram(FLASH_OBProgramInitTypeDef *pOBInit)
 258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 260:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 6


 261:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Process Locked */
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 263:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 264:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OPTIONBYTE(pOBInit->OptionType));
 266:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 267:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*Write protection configuration*/
 268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_WRP) == OPTIONBYTE_WRP)
 269:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     assert_param(IS_WRPSTATE(pOBInit->WRPState));
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     if(pOBInit->WRPState == OB_WRPSTATE_ENABLE)
 272:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 273:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /*Enable of Write protection on the selected Sector*/
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       status = FLASH_OB_EnableWRP(pOBInit->WRPSector, pOBInit->Banks);
 275:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 276:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     else
 277:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 278:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       /*Disable of Write protection on the selected Sector*/
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       status = FLASH_OB_DisableWRP(pOBInit->WRPSector, pOBInit->Banks);
 280:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 281:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 282:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 283:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*Read protection configuration*/
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_RDP) == OPTIONBYTE_RDP)
 285:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     status = FLASH_OB_RDP_LevelConfig(pOBInit->RDPLevel);
 287:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 288:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 289:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*USER  configuration*/
 290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_USER) == OPTIONBYTE_USER)
 291:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     status = FLASH_OB_UserConfig(pOBInit->USERConfig&OB_IWDG_SW, 
 293:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 294:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STDBY_NO_RST);
 295:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 296:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 297:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*BOR Level  configuration*/
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_BOR) == OPTIONBYTE_BOR)
 299:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     status = FLASH_OB_BOR_LevelConfig(pOBInit->BORLevel);
 301:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 302:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 303:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Process Unlocked */
 304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 305:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 306:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status;
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 308:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 309:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 310:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief   Get the Option byte configuration
 311:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 312:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 313:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 314:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval None
 315:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 316:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** void HAL_FLASHEx_OBGetConfig(FLASH_OBProgramInitTypeDef *pOBInit)
 317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 7


 318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_BOR;
 319:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 320:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*Get WRP*/
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->WRPSector = (uint32_t)FLASH_OB_GetWRP();
 322:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 323:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*Get RDP Level*/
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->RDPLevel = (uint32_t)FLASH_OB_GetRDP();
 325:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 326:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*Get USER*/
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->USERConfig = (uint8_t)FLASH_OB_GetUser();
 328:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 329:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /*Get BOR Level*/
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->BORLevel = (uint32_t)FLASH_OB_GetBOR();
 331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 332:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 333:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 334:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @}
 335:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 336:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 337:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 338:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory sector
 339:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Sector FLASH sector to erase
 340:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series      
 341:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  VoltageRange The device voltage range which defines the erase parallelism.  
 342:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 343:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1: when the device voltage range is 1.8V to 2.1V, 
 344:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by byte (8-bit) 
 345:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2: when the device voltage range is 2.1V to 2.7V,
 346:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by half word (16-bit)
 347:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3: when the device voltage range is 2.7V to 3.6V,
 348:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by word (32-bit)
 349:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4: when the device voltage range is 2.7V to 3.6V + External
 350:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by double word (64-bit)
 351:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 352:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval None
 353:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 354:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** void FLASH_Erase_Sector(uint32_t Sector, uint8_t VoltageRange)
 355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0U;
 357:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 358:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 359:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_SECTOR(Sector));
 360:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 361:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(VoltageRange == FLASH_VOLTAGE_RANGE_1)
 363:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 365:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   else if(VoltageRange == FLASH_VOLTAGE_RANGE_2)
 367:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 368:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 369:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   else if(VoltageRange == FLASH_VOLTAGE_RANGE_3)
 371:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 372:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_WORD;
 373:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 374:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   else
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 8


 375:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 377:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 378:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 379:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* If the previous operation is completed, proceed to erase the sector */
 380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 382:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_SER | (Sector << POSITION_VAL(FLASH_CR_SNB));
 384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 386:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 387:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 388:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Flush the instruction and data caches
 389:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval None
 390:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 391:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** void FLASH_FlushCaches(void)
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 393:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Flush instruction cache  */
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 395:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 396:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Disable instruction cache  */
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 398:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Reset instruction cache */
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 400:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable instruction cache */
 401:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 402:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 403:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 404:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Flush data cache */
 405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 406:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 407:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Disable data cache  */
 408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_DISABLE();
 409:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Reset data cache */
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_RESET();
 411:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable data cache */
 412:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     __HAL_FLASH_DATA_CACHE_ENABLE();
 413:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 415:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 416:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 417:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Mass erase of FLASH memory
 418:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  VoltageRange The device voltage range which defines the erase parallelism.  
 419:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 420:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_1: when the device voltage range is 1.8V to 2.1V, 
 421:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by byte (8-bit) 
 422:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_2: when the device voltage range is 2.1V to 2.7V,
 423:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by half word (16-bit)
 424:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_3: when the device voltage range is 2.7V to 3.6V,
 425:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by word (32-bit)
 426:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_VOLTAGE_RANGE_4: when the device voltage range is 2.7V to 3.6V + External
 427:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *                                  the operation will be done by double word (64-bit)
 428:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 429:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Banks Banks to be erased
 430:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 431:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: Bank1 to be erased
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 9


 432:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
 433:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval None
 434:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 435:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static void FLASH_MassErase(uint8_t VoltageRange, uint32_t Banks)
 436:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** { 
  27              		.loc 1 436 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 437:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Prevent unused argument(s) compilation warning */
 438:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   UNUSED(Banks);
  32              		.loc 1 438 3 view .LVU1
 439:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 440:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 441:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
  33              		.loc 1 441 3 view .LVU2
 442:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
  34              		.loc 1 442 3 view .LVU3
 443:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 444:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* If the previous operation is completed, proceed to erase all sectors */
 445:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
  35              		.loc 1 445 3 view .LVU4
  36 0000 074B     		ldr	r3, .L2
  37 0002 1969     		ldr	r1, [r3, #16]
  38              	.LVL1:
  39              		.loc 1 445 3 is_stmt 0 view .LVU5
  40 0004 21F44071 		bic	r1, r1, #768
  41 0008 1961     		str	r1, [r3, #16]
 446:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_MER;
  42              		.loc 1 446 3 is_stmt 1 view .LVU6
  43              		.loc 1 446 13 is_stmt 0 view .LVU7
  44 000a 1969     		ldr	r1, [r3, #16]
  45 000c 41F00401 		orr	r1, r1, #4
  46 0010 1961     		str	r1, [r3, #16]
 447:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange <<8U);
  47              		.loc 1 447 3 is_stmt 1 view .LVU8
  48              		.loc 1 447 13 is_stmt 0 view .LVU9
  49 0012 1A69     		ldr	r2, [r3, #16]
  50 0014 42EA0022 		orr	r2, r2, r0, lsl #8
  51 0018 42F48032 		orr	r2, r2, #65536
  52 001c 1A61     		str	r2, [r3, #16]
 448:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
  53              		.loc 1 448 1 view .LVU10
  54 001e 7047     		bx	lr
  55              	.L3:
  56              		.align	2
  57              	.L2:
  58 0020 003C0240 		.word	1073888256
  59              		.cfi_endproc
  60              	.LFE78:
  62              		.section	.text.FLASH_OB_BOR_LevelConfig,"ax",%progbits
  63              		.align	1
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  68              	FLASH_OB_BOR_LevelConfig:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 10


  69              	.LVL2:
  70              	.LFB83:
 449:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 450:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 451:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Enable the write protection of the desired bank 1 sectors
 452:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
 453:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 454:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash sector i if CortexM3  
 455:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 456:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 457:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  WRPSector specifies the sector(s) to be write protected.
 458:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series 
 459:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 460:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Banks Enable write protection on all the sectors for the specific bank
 461:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 462:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
 463:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
 464:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status 
 465:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 466:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnableWRP(uint32_t WRPSector, uint32_t Banks)
 467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 468:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 469:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 470:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Prevent unused argument(s) compilation warning */
 471:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   UNUSED(Banks);
 472:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 473:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 474:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
 475:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 476:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 477:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 479:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(status == HAL_OK)
 481:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~WRPSector);  
 483:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 484:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 485:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status;
 486:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 487:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 488:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 489:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Disable the write protection of the desired bank 1 sectors
 490:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
 491:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 492:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash sector if CortexM3  
 493:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 494:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 495:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  WRPSector specifies the sector(s) to be write protected.
 496:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series 
 497:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * 
 498:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Banks Enable write protection on all the sectors for the specific bank
 499:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 500:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg FLASH_BANK_1: WRP on all sectors of bank1
 501:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *
 502:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status 
 503:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 11


 504:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisableWRP(uint32_t WRPSector, uint32_t Banks)
 505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 507:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 508:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Prevent unused argument(s) compilation warning */
 509:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   UNUSED(Banks);
 510:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 511:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 512:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP_SECTOR(WRPSector));
 513:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 514:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 515:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 517:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(status == HAL_OK)
 519:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)WRPSector; 
 521:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 522:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 523:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status;
 524:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 525:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 526:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 527:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Set the read protection level.
 528:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Level specifies the read protection level.
 529:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 530:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_0: No protection
 531:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_1: Read protection of the memory
 532:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_2: Full chip protection
 533:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *   
 534:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @note WARNING: When enabling OB_RDP level 2 it's no more possible to go back to level 1 or 0
 535:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *    
 536:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status
 537:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 538:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDP_LevelConfig(uint8_t Level)
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 540:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 541:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 542:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_RDP_LEVEL(Level));
 544:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 545:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 547:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(status == HAL_OK)
 549:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 550:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     *(__IO uint8_t*)OPTCR_BYTE1_ADDRESS = Level;
 551:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 552:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 553:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status;
 554:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 555:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 556:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 557:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Program the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.    
 558:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Iwdg Selects the IWDG mode
 559:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 560:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_IWDG_SW: Software IWDG selected
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 12


 561:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_IWDG_HW: Hardware IWDG selected
 562:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Stop Reset event when entering STOP mode.
 563:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter  can be one of the following values:
 564:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_STOP_NO_RST: No reset generated when entering in STOP
 565:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_STOP_RST: Reset generated when entering in STOP
 566:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Stdby Reset event when entering Standby mode.
 567:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter  can be one of the following values:
 568:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_STDBY_NO_RST: No reset generated when entering in STANDBY
 569:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_STDBY_RST: Reset generated when entering in STANDBY
 570:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status
 571:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 572:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint8_t Iwdg, uint8_t Stop, uint8_t Stdby)
 573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 574:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint8_t optiontmp = 0xFF;
 575:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 576:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 577:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 578:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_IWDG_SOURCE(Iwdg));
 579:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_STOP_SOURCE(Stop));
 580:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_STDBY_SOURCE(Stdby));
 581:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 582:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 584:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 585:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if(status == HAL_OK)
 586:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {     
 587:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Mask OPTLOCK, OPTSTRT, BOR_LEV and BFB2 bits */
 588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE0_ADDRESS) & (uint8_t)0x1F);
 589:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 590:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Update User Option Byte */
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS = Iwdg | (uint8_t)(Stdby | (uint8_t)(Stop | ((uint8_t)opti
 592:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 593:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 594:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return status; 
 595:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 596:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 597:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 598:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Set the BOR Level. 
 599:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @param  Level specifies the Option Bytes BOR Reset Level.
 600:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 601:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
 602:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
 603:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
 604:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_BOR_OFF: Supply voltage ranges from 1.62 to 2.1 V
 605:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval HAL Status
 606:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 607:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_BOR_LevelConfig(uint8_t Level)
 608:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
  71              		.loc 1 608 1 is_stmt 1 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		@ link register save eliminated.
 609:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Check the parameters */
 610:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_BOR_LEVEL(Level));
  76              		.loc 1 610 3 view .LVU12
 611:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 13


 612:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Set the BOR Level */
 613:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BOR_LEV);
  77              		.loc 1 613 3 view .LVU13
  78              		.loc 1 613 40 is_stmt 0 view .LVU14
  79 0000 044B     		ldr	r3, .L5
  80 0002 197D     		ldrb	r1, [r3, #20]	@ zero_extendqisi2
  81 0004 01F0F301 		and	r1, r1, #243
  82 0008 1975     		strb	r1, [r3, #20]
 614:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= Level;
  83              		.loc 1 614 3 is_stmt 1 view .LVU15
  84              		.loc 1 614 40 is_stmt 0 view .LVU16
  85 000a 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
  86 000c 0243     		orrs	r2, r2, r0
  87 000e 1A75     		strb	r2, [r3, #20]
 615:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 616:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return HAL_OK;
  88              		.loc 1 616 3 is_stmt 1 view .LVU17
 617:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 618:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
  89              		.loc 1 618 1 is_stmt 0 view .LVU18
  90 0010 0020     		movs	r0, #0
  91              	.LVL3:
  92              		.loc 1 618 1 view .LVU19
  93 0012 7047     		bx	lr
  94              	.L6:
  95              		.align	2
  96              	.L5:
  97 0014 003C0240 		.word	1073888256
  98              		.cfi_endproc
  99              	.LFE83:
 101              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 102              		.align	1
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 107              	FLASH_OB_GetUser:
 108              	.LFB84:
 619:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 620:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 621:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Return the FLASH User Option Byte value.
 622:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval uint8_t FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1)
 623:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         and RST_STDBY(Bit2).
 624:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 625:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetUser(void)
 626:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 109              		.loc 1 626 1 is_stmt 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113              		@ link register save eliminated.
 627:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Return the User Option Byte */
 628:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return ((uint8_t)(FLASH->OPTCR & 0xE0));
 114              		.loc 1 628 3 view .LVU21
 115              		.loc 1 628 26 is_stmt 0 view .LVU22
 116 0000 024B     		ldr	r3, .L8
 117 0002 5869     		ldr	r0, [r3, #20]
 629:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 14


 118              		.loc 1 629 1 view .LVU23
 119 0004 00F0E000 		and	r0, r0, #224
 120 0008 7047     		bx	lr
 121              	.L9:
 122 000a 00BF     		.align	2
 123              	.L8:
 124 000c 003C0240 		.word	1073888256
 125              		.cfi_endproc
 126              	.LFE84:
 128              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 129              		.align	1
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 134              	FLASH_OB_GetWRP:
 135              	.LFB85:
 630:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 631:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 632:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Return the FLASH Write Protection Option Bytes value.
 633:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval uint16_t FLASH Write Protection Option Bytes value
 634:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 635:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint16_t FLASH_OB_GetWRP(void)
 636:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 136              		.loc 1 636 1 is_stmt 1 view -0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 637:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Return the FLASH write protection Register value */
 638:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 141              		.loc 1 638 3 view .LVU25
 142              		.loc 1 638 11 is_stmt 0 view .LVU26
 143 0000 014B     		ldr	r3, .L11
 144 0002 D88A     		ldrh	r0, [r3, #22]
 639:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 145              		.loc 1 639 1 view .LVU27
 146 0004 80B2     		uxth	r0, r0
 147 0006 7047     		bx	lr
 148              	.L12:
 149              		.align	2
 150              	.L11:
 151 0008 003C0240 		.word	1073888256
 152              		.cfi_endproc
 153              	.LFE85:
 155              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 156              		.align	1
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	FLASH_OB_GetRDP:
 162              	.LFB86:
 640:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 641:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 642:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Read Protection level.
 643:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval FLASH ReadOut Protection Status:
 644:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
 645:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_0: No protection
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 15


 646:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_1: Read protection of the memory
 647:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *            @arg OB_RDP_LEVEL_2: Full chip protection
 648:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 649:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetRDP(void)
 650:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 163              		.loc 1 650 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 651:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint8_t readstatus = OB_RDP_LEVEL_0;
 168              		.loc 1 651 3 view .LVU29
 169              	.LVL4:
 652:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 653:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   if((*(__IO uint8_t*)(OPTCR_BYTE1_ADDRESS) == (uint8_t)OB_RDP_LEVEL_2))
 170              		.loc 1 653 3 view .LVU30
 171              		.loc 1 653 7 is_stmt 0 view .LVU31
 172 0000 054B     		ldr	r3, .L16
 173 0002 587D     		ldrb	r0, [r3, #21]	@ zero_extendqisi2
 174 0004 C0B2     		uxtb	r0, r0
 175              		.loc 1 653 5 view .LVU32
 176 0006 CC28     		cmp	r0, #204
 177 0008 04D0     		beq	.L14
 654:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 655:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_2;
 656:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 657:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   else if((*(__IO uint8_t*)(OPTCR_BYTE1_ADDRESS) == (uint8_t)OB_RDP_LEVEL_0))
 178              		.loc 1 657 8 is_stmt 1 view .LVU33
 179              		.loc 1 657 12 is_stmt 0 view .LVU34
 180 000a 587D     		ldrb	r0, [r3, #21]	@ zero_extendqisi2
 181 000c C0B2     		uxtb	r0, r0
 182              		.loc 1 657 10 view .LVU35
 183 000e AA28     		cmp	r0, #170
 184 0010 00D0     		beq	.L14
 658:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 659:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_0;
 660:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 661:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   else 
 662:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 663:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_1;
 185              		.loc 1 663 16 view .LVU36
 186 0012 5520     		movs	r0, #85
 187              	.L14:
 188              	.LVL5:
 664:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 665:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 666:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return readstatus;
 189              		.loc 1 666 3 is_stmt 1 view .LVU37
 667:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 190              		.loc 1 667 1 is_stmt 0 view .LVU38
 191 0014 7047     		bx	lr
 192              	.L17:
 193 0016 00BF     		.align	2
 194              	.L16:
 195 0018 003C0240 		.word	1073888256
 196              		.cfi_endproc
 197              	.LFE86:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 16


 199              		.section	.text.FLASH_OB_GetBOR,"ax",%progbits
 200              		.align	1
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 205              	FLASH_OB_GetBOR:
 206              	.LFB87:
 668:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 669:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** /**
 670:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @brief  Returns the FLASH BOR level.
 671:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   * @retval uint8_t The FLASH BOR level:
 672:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *           - OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
 673:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *           - OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
 674:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *           - OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
 675:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   *           - OB_BOR_OFF   : Supply voltage ranges from 1.62 to 2.1 V  
 676:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   */
 677:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetBOR(void)
 678:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** {
 207              		.loc 1 678 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 679:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Return the FLASH BOR level */
 680:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   return (uint8_t)(*(__IO uint8_t *)(OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0C);
 212              		.loc 1 680 3 view .LVU40
 213              		.loc 1 680 10 is_stmt 0 view .LVU41
 214 0000 024B     		ldr	r3, .L19
 215 0002 187D     		ldrb	r0, [r3, #20]	@ zero_extendqisi2
 681:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 216              		.loc 1 681 1 view .LVU42
 217 0004 00F00C00 		and	r0, r0, #12
 218 0008 7047     		bx	lr
 219              	.L20:
 220 000a 00BF     		.align	2
 221              	.L19:
 222 000c 003C0240 		.word	1073888256
 223              		.cfi_endproc
 224              	.LFE87:
 226              		.section	.text.FLASH_OB_EnableWRP,"ax",%progbits
 227              		.align	1
 228              		.syntax unified
 229              		.thumb
 230              		.thumb_func
 232              	FLASH_OB_EnableWRP:
 233              	.LVL6:
 234              	.LFB79:
 467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 235              		.loc 1 467 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 467:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 239              		.loc 1 467 1 is_stmt 0 view .LVU44
 240 0000 10B5     		push	{r4, lr}
 241              	.LCFI0:
 242              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 17


 243              		.cfi_offset 4, -8
 244              		.cfi_offset 14, -4
 245 0002 0446     		mov	r4, r0
 468:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 246              		.loc 1 468 3 is_stmt 1 view .LVU45
 247              	.LVL7:
 471:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 248              		.loc 1 471 3 view .LVU46
 474:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 249              		.loc 1 474 3 view .LVU47
 475:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 250              		.loc 1 475 3 view .LVU48
 478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 251              		.loc 1 478 3 view .LVU49
 478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 252              		.loc 1 478 12 is_stmt 0 view .LVU50
 253 0004 4CF25030 		movw	r0, #50000
 254              	.LVL8:
 478:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 255              		.loc 1 478 12 view .LVU51
 256 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 257              	.LVL9:
 480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 258              		.loc 1 480 3 is_stmt 1 view .LVU52
 480:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 259              		.loc 1 480 5 is_stmt 0 view .LVU53
 260 000c 28B9     		cbnz	r0, .L22
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 261              		.loc 1 482 5 is_stmt 1 view .LVU54
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 262              		.loc 1 482 42 is_stmt 0 view .LVU55
 263 000e 034A     		ldr	r2, .L24
 264 0010 D38A     		ldrh	r3, [r2, #22]
 265 0012 9BB2     		uxth	r3, r3
 266 0014 23EA0404 		bic	r4, r3, r4
 267              	.LVL10:
 482:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 268              		.loc 1 482 42 view .LVU56
 269 0018 D482     		strh	r4, [r2, #22]	@ movhi
 270              	.L22:
 485:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 271              		.loc 1 485 3 is_stmt 1 view .LVU57
 486:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 272              		.loc 1 486 1 is_stmt 0 view .LVU58
 273 001a 10BD     		pop	{r4, pc}
 274              	.L25:
 275              		.align	2
 276              	.L24:
 277 001c 003C0240 		.word	1073888256
 278              		.cfi_endproc
 279              	.LFE79:
 281              		.section	.text.FLASH_OB_DisableWRP,"ax",%progbits
 282              		.align	1
 283              		.syntax unified
 284              		.thumb
 285              		.thumb_func
 287              	FLASH_OB_DisableWRP:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 18


 288              	.LVL11:
 289              	.LFB80:
 505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 290              		.loc 1 505 1 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 505:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 294              		.loc 1 505 1 is_stmt 0 view .LVU60
 295 0000 10B5     		push	{r4, lr}
 296              	.LCFI1:
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 4, -8
 299              		.cfi_offset 14, -4
 300 0002 0446     		mov	r4, r0
 506:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 301              		.loc 1 506 3 is_stmt 1 view .LVU61
 302              	.LVL12:
 509:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 303              		.loc 1 509 3 view .LVU62
 512:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 304              		.loc 1 512 3 view .LVU63
 513:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 305              		.loc 1 513 3 view .LVU64
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 306              		.loc 1 516 3 view .LVU65
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 307              		.loc 1 516 12 is_stmt 0 view .LVU66
 308 0004 4CF25030 		movw	r0, #50000
 309              	.LVL13:
 516:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 310              		.loc 1 516 12 view .LVU67
 311 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 312              	.LVL14:
 518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 313              		.loc 1 518 3 is_stmt 1 view .LVU68
 518:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 314              		.loc 1 518 5 is_stmt 0 view .LVU69
 315 000c 28B9     		cbnz	r0, .L27
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 316              		.loc 1 520 5 is_stmt 1 view .LVU70
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 317              		.loc 1 520 42 is_stmt 0 view .LVU71
 318 000e 034A     		ldr	r2, .L29
 319 0010 D38A     		ldrh	r3, [r2, #22]
 320 0012 9BB2     		uxth	r3, r3
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 321              		.loc 1 520 45 view .LVU72
 322 0014 A4B2     		uxth	r4, r4
 323              	.LVL15:
 520:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 324              		.loc 1 520 42 view .LVU73
 325 0016 1C43     		orrs	r4, r4, r3
 326 0018 D482     		strh	r4, [r2, #22]	@ movhi
 327              	.L27:
 523:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 328              		.loc 1 523 3 is_stmt 1 view .LVU74
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 19


 524:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 329              		.loc 1 524 1 is_stmt 0 view .LVU75
 330 001a 10BD     		pop	{r4, pc}
 331              	.L30:
 332              		.align	2
 333              	.L29:
 334 001c 003C0240 		.word	1073888256
 335              		.cfi_endproc
 336              	.LFE80:
 338              		.section	.text.FLASH_OB_RDP_LevelConfig,"ax",%progbits
 339              		.align	1
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	FLASH_OB_RDP_LevelConfig:
 345              	.LVL16:
 346              	.LFB81:
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 347              		.loc 1 539 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 539:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 351              		.loc 1 539 1 is_stmt 0 view .LVU77
 352 0000 10B5     		push	{r4, lr}
 353              	.LCFI2:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 4, -8
 356              		.cfi_offset 14, -4
 357 0002 0446     		mov	r4, r0
 540:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 358              		.loc 1 540 3 is_stmt 1 view .LVU78
 359              	.LVL17:
 543:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 360              		.loc 1 543 3 view .LVU79
 546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 361              		.loc 1 546 3 view .LVU80
 546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 362              		.loc 1 546 12 is_stmt 0 view .LVU81
 363 0004 4CF25030 		movw	r0, #50000
 364              	.LVL18:
 546:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 365              		.loc 1 546 12 view .LVU82
 366 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 367              	.LVL19:
 548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 368              		.loc 1 548 3 is_stmt 1 view .LVU83
 548:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   { 
 369              		.loc 1 548 5 is_stmt 0 view .LVU84
 370 000c 08B9     		cbnz	r0, .L32
 550:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 371              		.loc 1 550 5 is_stmt 1 view .LVU85
 550:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 372              		.loc 1 550 41 is_stmt 0 view .LVU86
 373 000e 014B     		ldr	r3, .L34
 374 0010 5C75     		strb	r4, [r3, #21]
 375              	.L32:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 20


 553:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 376              		.loc 1 553 3 is_stmt 1 view .LVU87
 554:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 377              		.loc 1 554 1 is_stmt 0 view .LVU88
 378 0012 10BD     		pop	{r4, pc}
 379              	.L35:
 380              		.align	2
 381              	.L34:
 382 0014 003C0240 		.word	1073888256
 383              		.cfi_endproc
 384              	.LFE81:
 386              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 387              		.align	1
 388              		.syntax unified
 389              		.thumb
 390              		.thumb_func
 392              	FLASH_OB_UserConfig:
 393              	.LVL20:
 394              	.LFB82:
 573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint8_t optiontmp = 0xFF;
 395              		.loc 1 573 1 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 573:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint8_t optiontmp = 0xFF;
 399              		.loc 1 573 1 is_stmt 0 view .LVU90
 400 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 401              	.LCFI3:
 402              		.cfi_def_cfa_offset 24
 403              		.cfi_offset 3, -24
 404              		.cfi_offset 4, -20
 405              		.cfi_offset 5, -16
 406              		.cfi_offset 6, -12
 407              		.cfi_offset 7, -8
 408              		.cfi_offset 14, -4
 409 0002 0446     		mov	r4, r0
 410 0004 0E46     		mov	r6, r1
 411 0006 1546     		mov	r5, r2
 574:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 412              		.loc 1 574 3 is_stmt 1 view .LVU91
 413              	.LVL21:
 575:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 414              		.loc 1 575 3 view .LVU92
 578:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_STOP_SOURCE(Stop));
 415              		.loc 1 578 3 view .LVU93
 579:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_OB_STDBY_SOURCE(Stdby));
 416              		.loc 1 579 3 view .LVU94
 580:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 417              		.loc 1 580 3 view .LVU95
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 418              		.loc 1 583 3 view .LVU96
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 419              		.loc 1 583 12 is_stmt 0 view .LVU97
 420 0008 4CF25030 		movw	r0, #50000
 421              	.LVL22:
 583:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 422              		.loc 1 583 12 view .LVU98
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 21


 423 000c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 424              	.LVL23:
 585:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {     
 425              		.loc 1 585 3 is_stmt 1 view .LVU99
 585:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {     
 426              		.loc 1 585 5 is_stmt 0 view .LVU100
 427 0010 48B9     		cbnz	r0, .L37
 588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 428              		.loc 1 588 5 is_stmt 1 view .LVU101
 588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 429              		.loc 1 588 67 is_stmt 0 view .LVU102
 430 0012 054F     		ldr	r7, .L39
 431 0014 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 588:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 432              		.loc 1 588 15 view .LVU103
 433 0016 03F01F03 		and	r3, r3, #31
 434              	.LVL24:
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 435              		.loc 1 591 5 is_stmt 1 view .LVU104
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 436              		.loc 1 591 69 is_stmt 0 view .LVU105
 437 001a 43EA0601 		orr	r1, r3, r6
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 438              		.loc 1 591 51 view .LVU106
 439 001e 41EA0502 		orr	r2, r1, r5
 591:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 440              		.loc 1 591 42 view .LVU107
 441 0022 2243     		orrs	r2, r2, r4
 442 0024 3A75     		strb	r2, [r7, #20]
 443              	.LVL25:
 444              	.L37:
 594:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 445              		.loc 1 594 3 is_stmt 1 view .LVU108
 595:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 446              		.loc 1 595 1 is_stmt 0 view .LVU109
 447 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 448              	.L40:
 449              		.align	2
 450              	.L39:
 451 0028 003C0240 		.word	1073888256
 452              		.cfi_endproc
 453              	.LFE82:
 455              		.section	.text.HAL_FLASHEx_OBProgram,"ax",%progbits
 456              		.align	1
 457              		.global	HAL_FLASHEx_OBProgram
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 462              	HAL_FLASHEx_OBProgram:
 463              	.LVL26:
 464              	.LFB74:
 258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 465              		.loc 1 258 1 is_stmt 1 view -0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 22


 469              		.loc 1 259 3 view .LVU111
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 470              		.loc 1 262 3 view .LVU112
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 471              		.loc 1 262 3 view .LVU113
 472 0000 1F4B     		ldr	r3, .L58
 473 0002 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 474 0004 012B     		cmp	r3, #1
 475 0006 38D0     		beq	.L48
 258:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 476              		.loc 1 258 1 is_stmt 0 discriminator 2 view .LVU114
 477 0008 10B5     		push	{r4, lr}
 478              	.LCFI4:
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 4, -8
 481              		.cfi_offset 14, -4
 482 000a 0446     		mov	r4, r0
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 483              		.loc 1 262 3 is_stmt 1 discriminator 2 view .LVU115
 484 000c 1C4B     		ldr	r3, .L58
 485 000e 0122     		movs	r2, #1
 486 0010 1A76     		strb	r2, [r3, #24]
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 487              		.loc 1 262 3 discriminator 2 view .LVU116
 265:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 488              		.loc 1 265 3 discriminator 2 view .LVU117
 268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 489              		.loc 1 268 3 discriminator 2 view .LVU118
 268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 490              		.loc 1 268 14 is_stmt 0 discriminator 2 view .LVU119
 491 0012 0368     		ldr	r3, [r0]
 268:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 492              		.loc 1 268 5 discriminator 2 view .LVU120
 493 0014 13F0010F 		tst	r3, #1
 494 0018 0CD0     		beq	.L49
 270:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     if(pOBInit->WRPState == OB_WRPSTATE_ENABLE)
 495              		.loc 1 270 5 is_stmt 1 view .LVU121
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 496              		.loc 1 271 5 view .LVU122
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 497              		.loc 1 271 15 is_stmt 0 view .LVU123
 498 001a 4368     		ldr	r3, [r0, #4]
 271:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 499              		.loc 1 271 7 view .LVU124
 500 001c 9342     		cmp	r3, r2
 501 001e 04D0     		beq	.L54
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 502              		.loc 1 279 7 is_stmt 1 view .LVU125
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 503              		.loc 1 279 16 is_stmt 0 view .LVU126
 504 0020 C168     		ldr	r1, [r0, #12]
 505 0022 8068     		ldr	r0, [r0, #8]
 506              	.LVL27:
 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 507              		.loc 1 279 16 view .LVU127
 508 0024 FFF7FEFF 		bl	FLASH_OB_DisableWRP
 509              	.LVL28:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 23


 279:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 510              		.loc 1 279 16 view .LVU128
 511 0028 05E0     		b	.L43
 512              	.LVL29:
 513              	.L54:
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 514              		.loc 1 274 7 is_stmt 1 view .LVU129
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 515              		.loc 1 274 16 is_stmt 0 view .LVU130
 516 002a C168     		ldr	r1, [r0, #12]
 517 002c 8068     		ldr	r0, [r0, #8]
 518              	.LVL30:
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 519              		.loc 1 274 16 view .LVU131
 520 002e FFF7FEFF 		bl	FLASH_OB_EnableWRP
 521              	.LVL31:
 274:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 522              		.loc 1 274 16 view .LVU132
 523 0032 00E0     		b	.L43
 524              	.LVL32:
 525              	.L49:
 259:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 526              		.loc 1 259 21 view .LVU133
 527 0034 0120     		movs	r0, #1
 528              	.LVL33:
 529              	.L43:
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 530              		.loc 1 284 3 is_stmt 1 view .LVU134
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 531              		.loc 1 284 14 is_stmt 0 view .LVU135
 532 0036 2368     		ldr	r3, [r4]
 284:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 533              		.loc 1 284 5 view .LVU136
 534 0038 13F0020F 		tst	r3, #2
 535 003c 0BD1     		bne	.L55
 536              	.L45:
 290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 537              		.loc 1 290 3 is_stmt 1 view .LVU137
 290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 538              		.loc 1 290 14 is_stmt 0 view .LVU138
 539 003e 2368     		ldr	r3, [r4]
 290:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 540              		.loc 1 290 5 view .LVU139
 541 0040 13F0040F 		tst	r3, #4
 542 0044 0BD1     		bne	.L56
 543              	.L46:
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 544              		.loc 1 298 3 is_stmt 1 view .LVU140
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 545              		.loc 1 298 14 is_stmt 0 view .LVU141
 546 0046 2368     		ldr	r3, [r4]
 298:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 547              		.loc 1 298 5 view .LVU142
 548 0048 13F0080F 		tst	r3, #8
 549 004c 11D1     		bne	.L57
 550              	.L47:
 304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 24


 551              		.loc 1 304 3 is_stmt 1 view .LVU143
 304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 552              		.loc 1 304 3 view .LVU144
 553 004e 0C4B     		ldr	r3, .L58
 554 0050 0022     		movs	r2, #0
 555 0052 1A76     		strb	r2, [r3, #24]
 304:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 556              		.loc 1 304 3 view .LVU145
 306:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 557              		.loc 1 306 3 view .LVU146
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 558              		.loc 1 307 1 is_stmt 0 view .LVU147
 559 0054 10BD     		pop	{r4, pc}
 560              	.LVL34:
 561              	.L55:
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 562              		.loc 1 286 5 is_stmt 1 view .LVU148
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 563              		.loc 1 286 14 is_stmt 0 view .LVU149
 564 0056 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 565              	.LVL35:
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 566              		.loc 1 286 14 view .LVU150
 567 0058 FFF7FEFF 		bl	FLASH_OB_RDP_LevelConfig
 568              	.LVL36:
 286:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 569              		.loc 1 286 14 view .LVU151
 570 005c EFE7     		b	.L45
 571              	.L56:
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 572              		.loc 1 292 5 is_stmt 1 view .LVU152
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 573              		.loc 1 292 41 is_stmt 0 view .LVU153
 574 005e 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 575              	.LVL37:
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 576              		.loc 1 292 14 view .LVU154
 577 0060 00F08002 		and	r2, r0, #128
 578 0064 00F04001 		and	r1, r0, #64
 579 0068 00F02000 		and	r0, r0, #32
 580 006c FFF7FEFF 		bl	FLASH_OB_UserConfig
 581              	.LVL38:
 292:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                                      pOBInit->USERConfig&OB_STOP_NO_RST,
 582              		.loc 1 292 14 view .LVU155
 583 0070 E9E7     		b	.L46
 584              	.L57:
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 585              		.loc 1 300 5 is_stmt 1 view .LVU156
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 586              		.loc 1 300 14 is_stmt 0 view .LVU157
 587 0072 207D     		ldrb	r0, [r4, #20]	@ zero_extendqisi2
 588              	.LVL39:
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 589              		.loc 1 300 14 view .LVU158
 590 0074 FFF7FEFF 		bl	FLASH_OB_BOR_LevelConfig
 591              	.LVL40:
 300:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 25


 592              		.loc 1 300 14 view .LVU159
 593 0078 E9E7     		b	.L47
 594              	.LVL41:
 595              	.L48:
 596              	.LCFI5:
 597              		.cfi_def_cfa_offset 0
 598              		.cfi_restore 4
 599              		.cfi_restore 14
 262:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 600              		.loc 1 262 3 view .LVU160
 601 007a 0220     		movs	r0, #2
 602              	.LVL42:
 307:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 603              		.loc 1 307 1 view .LVU161
 604 007c 7047     		bx	lr
 605              	.L59:
 606 007e 00BF     		.align	2
 607              	.L58:
 608 0080 00000000 		.word	pFlash
 609              		.cfi_endproc
 610              	.LFE74:
 612              		.section	.text.HAL_FLASHEx_OBGetConfig,"ax",%progbits
 613              		.align	1
 614              		.global	HAL_FLASHEx_OBGetConfig
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 619              	HAL_FLASHEx_OBGetConfig:
 620              	.LVL43:
 621              	.LFB75:
 317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_BOR;
 622              		.loc 1 317 1 is_stmt 1 view -0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 317:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_BOR;
 626              		.loc 1 317 1 is_stmt 0 view .LVU163
 627 0000 10B5     		push	{r4, lr}
 628              	.LCFI6:
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 4, -8
 631              		.cfi_offset 14, -4
 632 0002 0446     		mov	r4, r0
 318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 633              		.loc 1 318 3 is_stmt 1 view .LVU164
 318:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 634              		.loc 1 318 23 is_stmt 0 view .LVU165
 635 0004 0F23     		movs	r3, #15
 636 0006 0360     		str	r3, [r0]
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 637              		.loc 1 321 3 is_stmt 1 view .LVU166
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 638              		.loc 1 321 34 is_stmt 0 view .LVU167
 639 0008 FFF7FEFF 		bl	FLASH_OB_GetWRP
 640              	.LVL44:
 321:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 641              		.loc 1 321 22 view .LVU168
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 26


 642 000c A060     		str	r0, [r4, #8]
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 643              		.loc 1 324 3 is_stmt 1 view .LVU169
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 644              		.loc 1 324 33 is_stmt 0 view .LVU170
 645 000e FFF7FEFF 		bl	FLASH_OB_GetRDP
 646              	.LVL45:
 324:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 647              		.loc 1 324 21 view .LVU171
 648 0012 2061     		str	r0, [r4, #16]
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 649              		.loc 1 327 3 is_stmt 1 view .LVU172
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 650              		.loc 1 327 34 is_stmt 0 view .LVU173
 651 0014 FFF7FEFF 		bl	FLASH_OB_GetUser
 652              	.LVL46:
 327:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 653              		.loc 1 327 23 view .LVU174
 654 0018 2076     		strb	r0, [r4, #24]
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 655              		.loc 1 330 3 is_stmt 1 view .LVU175
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 656              		.loc 1 330 33 is_stmt 0 view .LVU176
 657 001a FFF7FEFF 		bl	FLASH_OB_GetBOR
 658              	.LVL47:
 330:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 659              		.loc 1 330 21 view .LVU177
 660 001e 6061     		str	r0, [r4, #20]
 331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 661              		.loc 1 331 1 view .LVU178
 662 0020 10BD     		pop	{r4, pc}
 331:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 663              		.loc 1 331 1 view .LVU179
 664              		.cfi_endproc
 665              	.LFE75:
 667              		.section	.text.FLASH_Erase_Sector,"ax",%progbits
 668              		.align	1
 669              		.global	FLASH_Erase_Sector
 670              		.syntax unified
 671              		.thumb
 672              		.thumb_func
 674              	FLASH_Erase_Sector:
 675              	.LVL48:
 676              	.LFB76:
 355:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint32_t tmp_psize = 0U;
 677              		.loc 1 355 1 is_stmt 1 view -0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 356:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 682              		.loc 1 356 3 view .LVU181
 359:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 683              		.loc 1 359 3 view .LVU182
 360:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 684              		.loc 1 360 3 view .LVU183
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 27


 685              		.loc 1 362 3 view .LVU184
 362:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 686              		.loc 1 362 5 is_stmt 0 view .LVU185
 687 0000 49B1     		cbz	r1, .L64
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 688              		.loc 1 366 8 is_stmt 1 view .LVU186
 366:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 689              		.loc 1 366 10 is_stmt 0 view .LVU187
 690 0002 0129     		cmp	r1, #1
 691 0004 26D0     		beq	.L65
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 692              		.loc 1 370 8 is_stmt 1 view .LVU188
 370:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 693              		.loc 1 370 10 is_stmt 0 view .LVU189
 694 0006 0229     		cmp	r1, #2
 695 0008 02D0     		beq	.L67
 376:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 696              		.loc 1 376 15 view .LVU190
 697 000a 4FF4407C 		mov	ip, #768
 698 000e 04E0     		b	.L63
 699              	.L67:
 372:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 700              		.loc 1 372 15 view .LVU191
 701 0010 4FF4007C 		mov	ip, #512
 702 0014 01E0     		b	.L63
 703              	.L64:
 364:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 704              		.loc 1 364 16 view .LVU192
 705 0016 4FF0000C 		mov	ip, #0
 706              	.L63:
 707              	.LVL49:
 380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 708              		.loc 1 380 3 is_stmt 1 view .LVU193
 709 001a 104B     		ldr	r3, .L68
 710 001c 1969     		ldr	r1, [r3, #16]
 711              	.LVL50:
 380:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= tmp_psize;
 712              		.loc 1 380 3 is_stmt 0 view .LVU194
 713 001e 21F44071 		bic	r1, r1, #768
 714 0022 1961     		str	r1, [r3, #16]
 381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 715              		.loc 1 381 3 is_stmt 1 view .LVU195
 381:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 716              		.loc 1 381 13 is_stmt 0 view .LVU196
 717 0024 1A69     		ldr	r2, [r3, #16]
 718 0026 42EA0C02 		orr	r2, r2, ip
 719 002a 1A61     		str	r2, [r3, #16]
 382:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_SER | (Sector << POSITION_VAL(FLASH_CR_SNB));
 720              		.loc 1 382 3 is_stmt 1 view .LVU197
 721 002c 1A69     		ldr	r2, [r3, #16]
 722 002e 22F0F802 		bic	r2, r2, #248
 723 0032 1A61     		str	r2, [r3, #16]
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 724              		.loc 1 383 3 view .LVU198
 725              	.LVL51:
 726              	.LBB4:
 727              	.LBI4:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 28


 728              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 29


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 30


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 31


 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 32


 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 33


 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 34


 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 35


 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 36


 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 37


 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 38


 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 39


 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 40


 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 41


 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 42


 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 43


 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 44


 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 45


 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 729              		.loc 2 981 31 view .LVU199
 730              	.LBB5:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 731              		.loc 2 983 3 view .LVU200
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 732              		.loc 2 988 4 view .LVU201
 733 0034 F822     		movs	r2, #248
 734              		.syntax unified
 735              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 736 0036 92FAA2F2 		rbit r2, r2
 737              	@ 0 "" 2
 738              	.LVL52:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 739              		.loc 2 1001 3 view .LVU202
 740              		.loc 2 1001 3 is_stmt 0 view .LVU203
 741              		.thumb
 742              		.syntax unified
 743              	.LBE5:
 744              	.LBE4:
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 745              		.loc 1 383 39 view .LVU204
 746 003a B2FA82F2 		clz	r2, r2
 747 003e 9040     		lsls	r0, r0, r2
 748              	.LVL53:
 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 749              		.loc 1 383 29 view .LVU205
 750 0040 40F00200 		orr	r0, r0, #2
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 46


 383:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   FLASH->CR |= FLASH_CR_STRT;
 751              		.loc 1 383 13 view .LVU206
 752 0044 1A69     		ldr	r2, [r3, #16]
 753 0046 1043     		orrs	r0, r0, r2
 754 0048 1861     		str	r0, [r3, #16]
 384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 755              		.loc 1 384 3 is_stmt 1 view .LVU207
 384:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 756              		.loc 1 384 13 is_stmt 0 view .LVU208
 757 004a 1A69     		ldr	r2, [r3, #16]
 758 004c 42F48032 		orr	r2, r2, #65536
 759 0050 1A61     		str	r2, [r3, #16]
 385:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 760              		.loc 1 385 1 view .LVU209
 761 0052 7047     		bx	lr
 762              	.LVL54:
 763              	.L65:
 368:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 764              		.loc 1 368 15 view .LVU210
 765 0054 4FF4807C 		mov	ip, #256
 766 0058 DFE7     		b	.L63
 767              	.L69:
 768 005a 00BF     		.align	2
 769              	.L68:
 770 005c 003C0240 		.word	1073888256
 771              		.cfi_endproc
 772              	.LFE76:
 774              		.section	.text.HAL_FLASHEx_Erase_IT,"ax",%progbits
 775              		.align	1
 776              		.global	HAL_FLASHEx_Erase_IT
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 781              	HAL_FLASHEx_Erase_IT:
 782              	.LVL55:
 783              	.LFB73:
 205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 784              		.loc 1 205 1 is_stmt 1 view -0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 0, uses_anonymous_args = 0
 205:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 788              		.loc 1 205 1 is_stmt 0 view .LVU212
 789 0000 08B5     		push	{r3, lr}
 790              	.LCFI7:
 791              		.cfi_def_cfa_offset 8
 792              		.cfi_offset 3, -8
 793              		.cfi_offset 14, -4
 206:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 794              		.loc 1 206 3 is_stmt 1 view .LVU213
 795              	.LVL56:
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 796              		.loc 1 209 3 view .LVU214
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 797              		.loc 1 209 3 view .LVU215
 798 0002 184B     		ldr	r3, .L76
 799 0004 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 47


 800 0006 012B     		cmp	r3, #1
 801 0008 29D0     		beq	.L73
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 802              		.loc 1 209 3 discriminator 2 view .LVU216
 803 000a 164B     		ldr	r3, .L76
 804 000c 0122     		movs	r2, #1
 805 000e 1A76     		strb	r2, [r3, #24]
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 806              		.loc 1 209 3 discriminator 2 view .LVU217
 212:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 807              		.loc 1 212 3 discriminator 2 view .LVU218
 215:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 808              		.loc 1 215 3 discriminator 2 view .LVU219
 809 0010 154B     		ldr	r3, .L76+4
 810 0012 1A69     		ldr	r2, [r3, #16]
 811 0014 42F08072 		orr	r2, r2, #16777216
 812 0018 1A61     		str	r2, [r3, #16]
 218:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 813              		.loc 1 218 3 discriminator 2 view .LVU220
 814 001a 1A69     		ldr	r2, [r3, #16]
 815 001c 42F00072 		orr	r2, r2, #33554432
 816 0020 1A61     		str	r2, [r3, #16]
 221:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****                          FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR| FLASH_FLAG_PGSERR);  
 817              		.loc 1 221 3 discriminator 2 view .LVU221
 818 0022 F322     		movs	r2, #243
 819 0024 DA60     		str	r2, [r3, #12]
 224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 820              		.loc 1 224 3 discriminator 2 view .LVU222
 224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 821              		.loc 1 224 16 is_stmt 0 discriminator 2 view .LVU223
 822 0026 0368     		ldr	r3, [r0]
 224:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 823              		.loc 1 224 5 discriminator 2 view .LVU224
 824 0028 012B     		cmp	r3, #1
 825 002a 0DD0     		beq	.L75
 236:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 826              		.loc 1 236 5 is_stmt 1 view .LVU225
 238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.NbSectorsToErase = pEraseInit->NbSectors;
 827              		.loc 1 238 5 view .LVU226
 238:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.NbSectorsToErase = pEraseInit->NbSectors;
 828              		.loc 1 238 29 is_stmt 0 view .LVU227
 829 002c 0D4B     		ldr	r3, .L76
 830 002e 0122     		movs	r2, #1
 831 0030 1A70     		strb	r2, [r3]
 239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 832              		.loc 1 239 5 is_stmt 1 view .LVU228
 239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 833              		.loc 1 239 41 is_stmt 0 view .LVU229
 834 0032 C268     		ldr	r2, [r0, #12]
 239:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Sector = pEraseInit->Sector;
 835              		.loc 1 239 29 view .LVU230
 836 0034 5A60     		str	r2, [r3, #4]
 240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 837              		.loc 1 240 5 is_stmt 1 view .LVU231
 240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 838              		.loc 1 240 31 is_stmt 0 view .LVU232
 839 0036 8268     		ldr	r2, [r0, #8]
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 48


 240:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.VoltageForErase = (uint8_t)pEraseInit->VoltageRange;
 840              		.loc 1 240 19 view .LVU233
 841 0038 DA60     		str	r2, [r3, #12]
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 842              		.loc 1 241 5 is_stmt 1 view .LVU234
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 843              		.loc 1 241 30 is_stmt 0 view .LVU235
 844 003a 017C     		ldrb	r1, [r0, #16]	@ zero_extendqisi2
 241:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 845              		.loc 1 241 28 view .LVU236
 846 003c 1972     		strb	r1, [r3, #8]
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 847              		.loc 1 244 5 is_stmt 1 view .LVU237
 848 003e 8068     		ldr	r0, [r0, #8]
 849              	.LVL57:
 244:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 850              		.loc 1 244 5 is_stmt 0 view .LVU238
 851 0040 FFF7FEFF 		bl	FLASH_Erase_Sector
 852              	.LVL58:
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 853              		.loc 1 247 10 view .LVU239
 854 0044 0020     		movs	r0, #0
 855              	.L71:
 248:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 856              		.loc 1 248 1 view .LVU240
 857 0046 08BD     		pop	{r3, pc}
 858              	.LVL59:
 859              	.L75:
 227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Bank = pEraseInit->Banks;
 860              		.loc 1 227 5 is_stmt 1 view .LVU241
 227:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     pFlash.Bank = pEraseInit->Banks;
 861              		.loc 1 227 29 is_stmt 0 view .LVU242
 862 0048 064B     		ldr	r3, .L76
 863 004a 0222     		movs	r2, #2
 864 004c 1A70     		strb	r2, [r3]
 228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 865              		.loc 1 228 5 is_stmt 1 view .LVU243
 228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 866              		.loc 1 228 29 is_stmt 0 view .LVU244
 867 004e 4268     		ldr	r2, [r0, #4]
 228:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 868              		.loc 1 228 17 view .LVU245
 869 0050 1A61     		str	r2, [r3, #16]
 229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 870              		.loc 1 229 5 is_stmt 1 view .LVU246
 871 0052 4168     		ldr	r1, [r0, #4]
 872 0054 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
 873              	.LVL60:
 229:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 874              		.loc 1 229 5 is_stmt 0 view .LVU247
 875 0056 FFF7FEFF 		bl	FLASH_MassErase
 876              	.LVL61:
 247:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 877              		.loc 1 247 10 view .LVU248
 878 005a 0020     		movs	r0, #0
 879 005c F3E7     		b	.L71
 880              	.LVL62:
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 49


 881              	.L73:
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 882              		.loc 1 209 3 view .LVU249
 883 005e 0220     		movs	r0, #2
 884              	.LVL63:
 209:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 885              		.loc 1 209 3 view .LVU250
 886 0060 F1E7     		b	.L71
 887              	.L77:
 888 0062 00BF     		.align	2
 889              	.L76:
 890 0064 00000000 		.word	pFlash
 891 0068 003C0240 		.word	1073888256
 892              		.cfi_endproc
 893              	.LFE73:
 895              		.section	.text.FLASH_FlushCaches,"ax",%progbits
 896              		.align	1
 897              		.global	FLASH_FlushCaches
 898              		.syntax unified
 899              		.thumb
 900              		.thumb_func
 902              	FLASH_FlushCaches:
 903              	.LFB77:
 392:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   /* Flush instruction cache  */
 904              		.loc 1 392 1 is_stmt 1 view -0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 909              		.loc 1 394 3 view .LVU252
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 910              		.loc 1 394 6 is_stmt 0 view .LVU253
 911 0000 164B     		ldr	r3, .L81
 912 0002 1B68     		ldr	r3, [r3]
 394:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 913              		.loc 1 394 5 view .LVU254
 914 0004 13F4007F 		tst	r3, #512
 915 0008 10D0     		beq	.L79
 397:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Reset instruction cache */
 916              		.loc 1 397 5 is_stmt 1 view .LVU255
 917 000a 144B     		ldr	r3, .L81
 918 000c 1A68     		ldr	r2, [r3]
 919 000e 22F40072 		bic	r2, r2, #512
 920 0012 1A60     		str	r2, [r3]
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable instruction cache */
 921              		.loc 1 399 5 view .LVU256
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable instruction cache */
 922              		.loc 1 399 5 view .LVU257
 923 0014 1A68     		ldr	r2, [r3]
 924 0016 42F40062 		orr	r2, r2, #2048
 925 001a 1A60     		str	r2, [r3]
 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable instruction cache */
 926              		.loc 1 399 5 view .LVU258
 927 001c 1A68     		ldr	r2, [r3]
 928 001e 22F40062 		bic	r2, r2, #2048
 929 0022 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 50


 399:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable instruction cache */
 930              		.loc 1 399 5 view .LVU259
 401:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 931              		.loc 1 401 5 view .LVU260
 932 0024 1A68     		ldr	r2, [r3]
 933 0026 42F40072 		orr	r2, r2, #512
 934 002a 1A60     		str	r2, [r3]
 935              	.L79:
 405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 936              		.loc 1 405 3 view .LVU261
 405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 937              		.loc 1 405 6 is_stmt 0 view .LVU262
 938 002c 0B4B     		ldr	r3, .L81
 939 002e 1B68     		ldr	r3, [r3]
 405:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 940              		.loc 1 405 5 view .LVU263
 941 0030 13F4806F 		tst	r3, #1024
 942 0034 10D0     		beq	.L78
 408:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Reset data cache */
 943              		.loc 1 408 5 is_stmt 1 view .LVU264
 944 0036 094B     		ldr	r3, .L81
 945 0038 1A68     		ldr	r2, [r3]
 946 003a 22F48062 		bic	r2, r2, #1024
 947 003e 1A60     		str	r2, [r3]
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable data cache */
 948              		.loc 1 410 5 view .LVU265
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable data cache */
 949              		.loc 1 410 5 view .LVU266
 950 0040 1A68     		ldr	r2, [r3]
 951 0042 42F48052 		orr	r2, r2, #4096
 952 0046 1A60     		str	r2, [r3]
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable data cache */
 953              		.loc 1 410 5 view .LVU267
 954 0048 1A68     		ldr	r2, [r3]
 955 004a 22F48052 		bic	r2, r2, #4096
 956 004e 1A60     		str	r2, [r3]
 410:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     /* Enable data cache */
 957              		.loc 1 410 5 view .LVU268
 412:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 958              		.loc 1 412 5 view .LVU269
 959 0050 1A68     		ldr	r2, [r3]
 960 0052 42F48062 		orr	r2, r2, #1024
 961 0056 1A60     		str	r2, [r3]
 962              	.L78:
 414:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 963              		.loc 1 414 1 is_stmt 0 view .LVU270
 964 0058 7047     		bx	lr
 965              	.L82:
 966 005a 00BF     		.align	2
 967              	.L81:
 968 005c 003C0240 		.word	1073888256
 969              		.cfi_endproc
 970              	.LFE77:
 972              		.section	.text.HAL_FLASHEx_Erase,"ax",%progbits
 973              		.align	1
 974              		.global	HAL_FLASHEx_Erase
 975              		.syntax unified
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 51


 976              		.thumb
 977              		.thumb_func
 979              	HAL_FLASHEx_Erase:
 980              	.LVL64:
 981              	.LFB72:
 134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 982              		.loc 1 134 1 is_stmt 1 view -0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 0
 985              		@ frame_needed = 0, uses_anonymous_args = 0
 134:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 986              		.loc 1 134 1 is_stmt 0 view .LVU272
 987 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 988              	.LCFI8:
 989              		.cfi_def_cfa_offset 24
 990              		.cfi_offset 3, -24
 991              		.cfi_offset 4, -20
 992              		.cfi_offset 5, -16
 993              		.cfi_offset 6, -12
 994              		.cfi_offset 7, -8
 995              		.cfi_offset 14, -4
 135:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   uint32_t index = 0U;
 996              		.loc 1 135 3 is_stmt 1 view .LVU273
 997              	.LVL65:
 136:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   
 998              		.loc 1 136 3 view .LVU274
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 999              		.loc 1 139 3 view .LVU275
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1000              		.loc 1 139 3 view .LVU276
 1001 0002 224B     		ldr	r3, .L95
 1002 0004 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1003 0006 012B     		cmp	r3, #1
 1004 0008 3ED0     		beq	.L91
 1005 000a 0446     		mov	r4, r0
 1006 000c 0E46     		mov	r6, r1
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1007              		.loc 1 139 3 discriminator 2 view .LVU277
 1008 000e 1F4B     		ldr	r3, .L95
 1009 0010 0122     		movs	r2, #1
 1010 0012 1A76     		strb	r2, [r3, #24]
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1011              		.loc 1 139 3 discriminator 2 view .LVU278
 142:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1012              		.loc 1 142 3 discriminator 2 view .LVU279
 145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1013              		.loc 1 145 3 discriminator 2 view .LVU280
 145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1014              		.loc 1 145 12 is_stmt 0 discriminator 2 view .LVU281
 1015 0014 4CF25030 		movw	r0, #50000
 1016              	.LVL66:
 145:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1017              		.loc 1 145 12 discriminator 2 view .LVU282
 1018 0018 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1019              	.LVL67:
 147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 1020              		.loc 1 147 3 is_stmt 1 discriminator 2 view .LVU283
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 52


 147:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   {
 1021              		.loc 1 147 5 is_stmt 0 discriminator 2 view .LVU284
 1022 001c 0746     		mov	r7, r0
 1023 001e 70BB     		cbnz	r0, .L85
 150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 1024              		.loc 1 150 5 is_stmt 1 view .LVU285
 150:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     
 1025              		.loc 1 150 18 is_stmt 0 view .LVU286
 1026 0020 4FF0FF33 		mov	r3, #-1
 1027 0024 3360     		str	r3, [r6]
 152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 1028              		.loc 1 152 5 is_stmt 1 view .LVU287
 152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 1029              		.loc 1 152 18 is_stmt 0 view .LVU288
 1030 0026 2368     		ldr	r3, [r4]
 152:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     {
 1031              		.loc 1 152 7 view .LVU289
 1032 0028 012B     		cmp	r3, #1
 1033 002a 16D0     		beq	.L93
 166:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1034              		.loc 1 166 7 is_stmt 1 view .LVU290
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1035              		.loc 1 169 7 view .LVU291
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1036              		.loc 1 169 17 is_stmt 0 view .LVU292
 1037 002c A568     		ldr	r5, [r4, #8]
 1038              	.LVL68:
 1039              	.L88:
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1040              		.loc 1 169 39 is_stmt 1 discriminator 1 view .LVU293
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1041              		.loc 1 169 58 is_stmt 0 discriminator 1 view .LVU294
 1042 002e E368     		ldr	r3, [r4, #12]
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1043              		.loc 1 169 82 discriminator 1 view .LVU295
 1044 0030 A268     		ldr	r2, [r4, #8]
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1045              		.loc 1 169 70 discriminator 1 view .LVU296
 1046 0032 1344     		add	r3, r3, r2
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1047              		.loc 1 169 7 discriminator 1 view .LVU297
 1048 0034 AB42     		cmp	r3, r5
 1049 0036 20D9     		bls	.L87
 171:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1050              		.loc 1 171 9 is_stmt 1 view .LVU298
 1051 0038 217C     		ldrb	r1, [r4, #16]	@ zero_extendqisi2
 1052 003a 2846     		mov	r0, r5
 1053 003c FFF7FEFF 		bl	FLASH_Erase_Sector
 1054              	.LVL69:
 174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         
 1055              		.loc 1 174 9 view .LVU299
 174:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         
 1056              		.loc 1 174 18 is_stmt 0 view .LVU300
 1057 0040 4CF25030 		movw	r0, #50000
 1058 0044 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1059              	.LVL70:
 177:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 53


 1060              		.loc 1 177 9 is_stmt 1 view .LVU301
 1061 0048 114A     		ldr	r2, .L95+4
 1062 004a 1369     		ldr	r3, [r2, #16]
 1063 004c 23F0FA03 		bic	r3, r3, #250
 1064 0050 1361     		str	r3, [r2, #16]
 179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         {
 1065              		.loc 1 179 9 view .LVU302
 179:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         {
 1066              		.loc 1 179 11 is_stmt 0 view .LVU303
 1067 0052 0746     		mov	r7, r0
 1068 0054 80B9     		cbnz	r0, .L94
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1069              		.loc 1 169 93 is_stmt 1 discriminator 2 view .LVU304
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1070              		.loc 1 169 98 is_stmt 0 discriminator 2 view .LVU305
 1071 0056 0135     		adds	r5, r5, #1
 1072              	.LVL71:
 169:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       {
 1073              		.loc 1 169 98 discriminator 2 view .LVU306
 1074 0058 E9E7     		b	.L88
 1075              	.LVL72:
 1076              	.L93:
 155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1077              		.loc 1 155 7 is_stmt 1 view .LVU307
 1078 005a 6168     		ldr	r1, [r4, #4]
 1079 005c 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 1080              	.LVL73:
 155:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1081              		.loc 1 155 7 is_stmt 0 view .LVU308
 1082 005e FFF7FEFF 		bl	FLASH_MassErase
 1083              	.LVL74:
 158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       
 1084              		.loc 1 158 7 is_stmt 1 view .LVU309
 158:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****       
 1085              		.loc 1 158 16 is_stmt 0 view .LVU310
 1086 0062 4CF25030 		movw	r0, #50000
 1087 0066 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1088              	.LVL75:
 1089 006a 0746     		mov	r7, r0
 1090              	.LVL76:
 161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 1091              		.loc 1 161 7 is_stmt 1 view .LVU311
 161:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****     }
 1092              		.loc 1 161 17 is_stmt 0 view .LVU312
 1093 006c 084A     		ldr	r2, .L95+4
 1094 006e 1369     		ldr	r3, [r2, #16]
 1095 0070 23F00403 		bic	r3, r3, #4
 1096 0074 1361     		str	r3, [r2, #16]
 1097 0076 00E0     		b	.L87
 1098              	.LVL77:
 1099              	.L94:
 182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****           break;
 1100              		.loc 1 182 11 is_stmt 1 view .LVU313
 182:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****           break;
 1101              		.loc 1 182 24 is_stmt 0 view .LVU314
 1102 0078 3560     		str	r5, [r6]
 183:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****         }
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 54


 1103              		.loc 1 183 11 is_stmt 1 view .LVU315
 1104              	.LVL78:
 1105              	.L87:
 188:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c ****   }
 1106              		.loc 1 188 5 view .LVU316
 1107 007a FFF7FEFF 		bl	FLASH_FlushCaches
 1108              	.LVL79:
 1109              	.L85:
 192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1110              		.loc 1 192 3 view .LVU317
 192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1111              		.loc 1 192 3 view .LVU318
 1112 007e 034B     		ldr	r3, .L95
 1113 0080 0022     		movs	r2, #0
 1114 0082 1A76     		strb	r2, [r3, #24]
 192:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1115              		.loc 1 192 3 view .LVU319
 194:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** }
 1116              		.loc 1 194 3 view .LVU320
 1117              	.LVL80:
 1118              	.L84:
 195:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1119              		.loc 1 195 1 is_stmt 0 view .LVU321
 1120 0084 3846     		mov	r0, r7
 1121 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1122              	.LVL81:
 1123              	.L91:
 139:Drivers/STM32F2xx_HAL_Driver/Src/stm32f2xx_hal_flash_ex.c **** 
 1124              		.loc 1 139 3 view .LVU322
 1125 0088 0227     		movs	r7, #2
 1126 008a FBE7     		b	.L84
 1127              	.L96:
 1128              		.align	2
 1129              	.L95:
 1130 008c 00000000 		.word	pFlash
 1131 0090 003C0240 		.word	1073888256
 1132              		.cfi_endproc
 1133              	.LFE72:
 1135              		.text
 1136              	.Letext0:
 1137              		.file 3 "c:\\toolchain\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_
 1138              		.file 4 "c:\\toolchain\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 1139              		.file 5 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f207xx.h"
 1140              		.file 6 "Drivers/CMSIS/Device/ST/STM32F2xx/Include/stm32f2xx.h"
 1141              		.file 7 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_def.h"
 1142              		.file 8 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_flash.h"
 1143              		.file 9 "Drivers/STM32F2xx_HAL_Driver/Inc/stm32f2xx_hal_flash_ex.h"
ARM GAS  C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f2xx_hal_flash_ex.c
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:18     .text.FLASH_MassErase:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:23     .text.FLASH_MassErase:00000000 FLASH_MassErase
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:58     .text.FLASH_MassErase:00000020 $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:63     .text.FLASH_OB_BOR_LevelConfig:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:68     .text.FLASH_OB_BOR_LevelConfig:00000000 FLASH_OB_BOR_LevelConfig
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:97     .text.FLASH_OB_BOR_LevelConfig:00000014 $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:102    .text.FLASH_OB_GetUser:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:107    .text.FLASH_OB_GetUser:00000000 FLASH_OB_GetUser
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:124    .text.FLASH_OB_GetUser:0000000c $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:129    .text.FLASH_OB_GetWRP:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:134    .text.FLASH_OB_GetWRP:00000000 FLASH_OB_GetWRP
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:151    .text.FLASH_OB_GetWRP:00000008 $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:156    .text.FLASH_OB_GetRDP:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:161    .text.FLASH_OB_GetRDP:00000000 FLASH_OB_GetRDP
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:195    .text.FLASH_OB_GetRDP:00000018 $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:200    .text.FLASH_OB_GetBOR:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:205    .text.FLASH_OB_GetBOR:00000000 FLASH_OB_GetBOR
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:222    .text.FLASH_OB_GetBOR:0000000c $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:227    .text.FLASH_OB_EnableWRP:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:232    .text.FLASH_OB_EnableWRP:00000000 FLASH_OB_EnableWRP
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:277    .text.FLASH_OB_EnableWRP:0000001c $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:282    .text.FLASH_OB_DisableWRP:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:287    .text.FLASH_OB_DisableWRP:00000000 FLASH_OB_DisableWRP
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:334    .text.FLASH_OB_DisableWRP:0000001c $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:339    .text.FLASH_OB_RDP_LevelConfig:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:344    .text.FLASH_OB_RDP_LevelConfig:00000000 FLASH_OB_RDP_LevelConfig
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:382    .text.FLASH_OB_RDP_LevelConfig:00000014 $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:387    .text.FLASH_OB_UserConfig:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:392    .text.FLASH_OB_UserConfig:00000000 FLASH_OB_UserConfig
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:451    .text.FLASH_OB_UserConfig:00000028 $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:456    .text.HAL_FLASHEx_OBProgram:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:462    .text.HAL_FLASHEx_OBProgram:00000000 HAL_FLASHEx_OBProgram
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:608    .text.HAL_FLASHEx_OBProgram:00000080 $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:613    .text.HAL_FLASHEx_OBGetConfig:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:619    .text.HAL_FLASHEx_OBGetConfig:00000000 HAL_FLASHEx_OBGetConfig
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:668    .text.FLASH_Erase_Sector:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:674    .text.FLASH_Erase_Sector:00000000 FLASH_Erase_Sector
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:770    .text.FLASH_Erase_Sector:0000005c $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:775    .text.HAL_FLASHEx_Erase_IT:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:781    .text.HAL_FLASHEx_Erase_IT:00000000 HAL_FLASHEx_Erase_IT
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:890    .text.HAL_FLASHEx_Erase_IT:00000064 $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:896    .text.FLASH_FlushCaches:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:902    .text.FLASH_FlushCaches:00000000 FLASH_FlushCaches
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:968    .text.FLASH_FlushCaches:0000005c $d
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:973    .text.HAL_FLASHEx_Erase:00000000 $t
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:979    .text.HAL_FLASHEx_Erase:00000000 HAL_FLASHEx_Erase
C:\Users\Artem\AppData\Local\Temp\ccJwVvh3.s:1130   .text.HAL_FLASHEx_Erase:0000008c $d

UNDEFINED SYMBOLS
FLASH_WaitForLastOperation
pFlash
